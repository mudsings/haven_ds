#include <lib.h>
#include "../customdefs.h";
#include <objects.h>

mixed performMarriage(object spouse1, object spouse2) ;
int eventRequest(mixed arg1, mixed arg2, mixed arg3);

inherit  LIB_MAYOR;
void create(){
	::create();
	SetKeyName("clerk");
	SetId("clerk");
	SetAdjectives("town");
	SetGender("male");
	SetRace("human");
	SetShort("the town clerk");
	SetLong("An officious-looking clerk."); 
	SetLocalCurrency("silver");
	SetClass("priest");
	AddCommandResponse("marry", (: eventRequest :));
	AddCommandResponse("wed", (: eventRequest :));
	AddCommandResponse("join", (: eventRequest :));

	SetLevel(4);
	SetTax(5);
}
//funs
//snuf
void init() {
	::init();
	SetSmell(([  "default" : "A rather odd, musty smell."]));
	SetListen(([  "default" : "The clerk grumbles something about an "+
				"unconscionably small tax revenue base."]));
}

int eventRequest(mixed arg1, mixed arg2, mixed arg3){
	string s1, s2, dudename;
	object ob1, ob2;
	if(sscanf(arg3,"%s and %s", s1, s2) != 2){
		eventForce("say "+arg1->GetName()+", you are confusing me.");
		return 1;
	}

	dudename = arg1->GetKeyName();
	if(s1 == "me" || s1 == "i") s1 = dudename;
	if(s2 == "me" || s2 == "i") s2 = dudename;

	if(s1 != dudename && s2 != dudename ) {
		eventForce("say Those people will have to decide "+
				"to get married on their own. It isn't "+
				"any of your business.");
		return 1;
	}

	if( s1 == s2) {
		eventForce("say we don't do single-member marriages here.");
		return 1;
	}
	if(! ob1 = present(s1, environment(this_object()))){
		eventForce("say "+capitalize(s1)+" isn't here.");
		return 1;
	}
	if(! ob2 = present(s2, environment(this_object()))){
		eventForce("say "+capitalize(s2)+" isn't here.");
		return 1;
	}

	if(!living(ob1) || !living(ob2)){
		eventForce("say I do not perform marriages with inanimate objects.");
		return 1;
	}
	this_object()->performMarriage(ob1, ob2);
	return 1;
}

mixed performMarriage(object spouse1, object spouse2) {
	mixed tmp;
	eventForce("say hmmm...");
	tmp = (mixed)environment(this_player())->CanMarry(this_player(),
			spouse1, spouse2);
	if( !tmp ) {
		this_player()->eventPrint("This place is not holy to you.");
		return 1;
	}
	else if( stringp(tmp) ) {
		this_player()->eventPrint(tmp);
		return 1;
	}
	tmp = (mixed)environment(this_player())->eventMarry(this_player(),
			spouse1, spouse2);
	if( tmp == 1 ) {
		object ring;

		ring = new(OBJ_WED_RING);
		ring->SetSpouse((string)spouse2->GetCapName());
		ring->eventMove(spouse1);
		ring = new(OBJ_WED_RING);
		ring->SetSpouse((string)spouse1->GetCapName());
		ring->eventMove(spouse2);
	}
}
