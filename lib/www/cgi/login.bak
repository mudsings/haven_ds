#include <daemons.h>

mapping Tries = ([]);

varargs string gateway(mixed args){
    string ret, pass_hash, who, password, ip;
    int max_tries = 4;

    tc("login stack: "+get_stack());
    tc("previous_object(): "+identify(previous_object()));
    ip = previous_object()->GetIp();

    tc("ip: "+ip);
    tc("args: "+args);
    tc("typeof args: "+typeof(args));

    if(!args || !stringp(args)) args = "123456789101112";

    if(sscanf(args,"%s&%s",who, password) != 2){
        ret = "Invalid input.<br>";
    }

    else {
        tc("who: "+who);
        tc("password: "+password);

        if(!strsrch(who,"username=")) who = replace_string(who,"username=","",1);
        if(!strsrch(password,"password=")) password = replace_string(password,"password=","",1);

        tc("who: "+who);
        tc("password: "+password);

        if(!ret && !user_exists(who)){
            ret = "No such user.<br>";
        }

        else {
            if(!Tries) Tries = ([]);
            if(!Tries[ip]) Tries[ip] = 0;
            pass_hash = PLAYERS_D->GetPlayerData(who,"Password");
            if(pass_hash != crypt(password, pass_hash)){
                Tries[ip]++;
                ret = "Fail! Tries left: "+(max_tries - Tries[ip])+"<br>";
                if(Tries[ip] >= max_tries){
                    previous_object()->eventBlockIp();
                    Tries[ip] = 0;
                }
            }
            else {
                ret = "Succeed!<br>";
                Tries[ip] = 0;
            }
        }
    }

ret += "<FORM ACTION=\"login.html\">";
ret += "username: <INPUT TYPE=TEXT NAME=\"username\" MAXLENGTH=32><BR>";
ret += "password:   <INPUT TYPE=PASSWORD NAME=\"password\" MAXLENGTH=32>";
ret += "<P><INPUT TYPE=SUBMIT VALUE=\"submit\">";
ret += "</FORM>";

return ret;
}

