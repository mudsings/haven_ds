#/secure/daemon/function.c
FileSize (["/lib/std/bed.c":309,"/verbs/creators/echo.c":2052,"/lib/lamp.c":1402,"/secure/sefun/to_object.c":4003,"/verbs/items/look.c":4653,"/lib/events/put.c":2764,"/lib/events/read.c":4009,"/verbs/players/teach.c":1508,"/lib/classes.c":3805,"/verbs/items/smoke.c":1270,"/secure/sefun/disable.c":702,"/secure/lib/std/access.c":3450,"/lib/genetics.c":8942,"/lib/combat.c":32558,"/secure/sefun/percent.c":845,"/lib/comp/container.c":1373,"/verbs/items/pour.c":1825,"/verbs/items/turn.c":1760,"/lib/events/look.c":7666,"/secure/lib/net/client.c":4037,"/verbs/items/swivel.c":1444,"/verbs/items/balance.c":3014,"/verbs/players/follow.c":2655,"/verbs/builders/delete.c":5014,"/secure/lib/net/remote.c":5347,"/lib/comp/surface.c":159,"/secure/sefun/get_livings.c":1792,"/secure/sefun/custom_path.c":595,"/lib/events/crawl.c":111,"/lib/events/turn.c":1719,"/lib/std/worn_storage.c":15876,"/lib/undead.c":2702,"/verbs/items/smell.c":1680,"/secure/sefun/communications.c":4302,"/verbs/builders/pulsecheck.c":1048,"/secure/sefun/format_page.c":516,"/verbs/common/yell.c":1610,"/lib/events/press.c":2380,"/verbs/builders/add.c":3547,"/lib/pole.c":2686,"/secure/sefun/timestamp.c":685,"/lib/events/consult.c":2208,"/lib/follow.c":1479,"/lib/props/ambiance.c":368,"/lib/clan.c":5382,"/secure/sefun/sockets.c":1161,"/lib/std/bot_limb.c":1213,"/lib/std/corpse.c":5543,"/lib/cigar.c":970,"/verbs/players/nominate.c":939,"/verbs/items/unlock.c":1495,"/verbs/items/move.c":875,"/verbs/items/bury.c":1932,"/lib/events/apply.c":463,"/secure/sefun/mud_info.c":1881,"/verbs/players/news.c":1030,"/lib/props/description.c":3618,"/verbs/items/judge.c":4297,"/lib/std/germ.c":8279,"/verbs/players/learn.c":1348,"/secure/lib/net/ftp_data_connection.c":5878,"/secure/sefun/events.c":739,"/lib/events/disarm.c":1354,"/lib/events/bury.c":270,"/verbs/items/remove.c":2300,"/lib/events/get.c":2956,"/verbs/items/knock.c":1275,"/lib/magic.c":5291,"/lib/player.c":19915,"/secure/lib/net/ftp_client.c":4744,"/lib/std/base_dummy.c":3217,"/secure/sefun/tail.c":305,"/verbs/items/uninstall.c":881,"/lib/manycoins.c":231,"/verbs/common/say.c":1854,"/lib/events/smoke.c":225,"/lib/props/equip.c":1984,"/lib/files.c":1104,"/lib/events/lie.c":1709,"/verbs/items/empty.c":419,"/secure/sefun/log_file.c":1085,"/lib/std/boobytrap_shadow.c":6598,"/verbs/items/lock.c":1562,"/verbs/items/dig.c":2394,"/verbs/items/consult.c":985,"/lib/fishing.c":6404,"/lib/props/mass.c":840,"/lib/pipe.c":1740,"/lib/user/autosave.c":2135,"/lib/vehicle.c":8735,"/lib/rifle.c":181,"/secure/lib/net/http.c":12416,"/lib/std/bane.c":192,"/secure/sefun/inventory.c":513,"/lib/events/lock.c":7420,"/secure/sefun/legacy.c":3534,"/verbs/items/use.c":902,"/secure/sefun/path_file.c":738,"/secure/sefun/values.c":576,"/verbs/players/befriend.c":779,"/secure/lib/bboard.c":8923,"/lib/events/scratch.c":2093,"/lib/events/buy.c":378,"/lib/steal.c":946,"/lib/events/smell.c":3397,"/lib/fuel.c":1502,"/verbs/builders/createfix.c":2121,"/verbs/creators/wizunlock.c":1020,"/lib/std/armor.c":11973,"/lib/race.c":9358,"/lib/inventory.c":4032,"/lib/bboard.c":9223,"/lib/props/move.c":4009,"/lib/std/limb.c":2560,"/lib/detect.c":3961,"/secure/sefun/pointers.c":3274,"/lib/events/fall.c":1642,"/secure/sefun/query_invis.c":920,"/secure/sefun/identify.c":1720,"/secure/sefun/english.c":13448,"/verbs/rooms/stop.c":651,"/secure/sefun/messaging.c":19940,"/verbs/items/close.c":961,"/lib/match.c":1117,"/lib/living.c":28510,"/verbs/items/shoot.c":2614,"/lib/events/look_in.c":2828,"/verbs/players/dismount.c":1504,"/lib/virtual/virt_std.c":1542,"/secure/lib/net/oob.c":8671,"/lib/comp/seal.c":1325,"/verbs/items/bait.c":967,"/lib/std/bot_corpse.c":1932,"/lib/events/poison.c":866,"/secure/sefun/strings.c":23745,"/lib/persist.c":3740,"/lib/clip.c":4752,"/secure/sefun/mappings.c":2178,"/verbs/items/show.c":1497,"/secure/sefun/fuzzymatch.c":1494,"/secure/sefun/light.c":1875,"/secure/sefun/security.c":3264,"/lib/cgi.c":901,"/lib/events/knock.c":2036,"/verbs/common/ask.c":3560,"/verbs/players/vote.c":931,"/lib/events/bait.c":880,"/verbs/builders/dest.c":2357,"/lib/std/furnace.c":1002,"/lib/std/lockpick.c":991,"/verbs/common/shout.c":1958,"/verbs/items/scratch.c":1237,"/lib/nmsh.c":36952,"/lib/std/vendor.c":18318,"/lib/messages.c":2068,"/lib/props/save.c":2839,"/lib/events/show.c":382,"/lib/blank_pile.c":781,"/secure/sefun/query_time_of_day.c":226,"/lib/events/manipulate.c":2256,"/verbs/items/extinguish.c":1327,"/verbs/items/pick.c":2863,"/lib/lvs/abilities.c":9113,"/secure/lib/file.c":6264,"/secure/sefun/duplicates.c":1326,"/lib/std/item.c":9502,"/lib/teller.c":11516,"/secure/sefun/reaper.c":1872,"/verbs/players/sleep.c":1035,"/lib/shadow.c":671,"/verbs/players/kneel.c":1306,"/lib/remote.c":2931,"/verbs/items/disarm.c":661,"/lib/events/lock_with.c":1936,"/secure/sefun/minimap.c":2170,"/verbs/builders/reload.c":5588,"/lib/props/id.c":5984,"/secure/sefun/copy.c":695,"/secure/lib/net/server.c":9478,"/lib/props/clean.c":2867,"/secure/sefun/economy.c":1878,"/verbs/players/target.c":2659,"/lib/cedit.c":18479,"/verbs/rooms/enter.c":1235,"/lib/lead.c":4299,"/verbs/items/boobytrap.c":880,"/secure/sefun/interface.c":1391,"/lib/daemons/verb.c":1936,"/verbs/items/equate.c":4297,"/secure/sefun/time.c":1663,"/verbs/common/speak.c":2451,"/verbs/rooms/jump.c":2985,"/lib/enter.c":4467,"/lib/props/properties.c":1118,"/lib/bonus.c":2884,"/verbs/items/touch.c":974,"/lib/events/stop.c":1649,"/lib/events/describe.c":13625,"/lib/props/addstuff.c":491,"/verbs/builders/modify.c":4279,"/lib/events/install.c":1435,"/secure/sefun/reload.c":3230,"/verbs/items/eat.c":1157,"/lib/interface.c":9142,"/verbs/items/steal.c":4191,"/lib/props/deterioration.c":2154,"/lib/command.c":14577,"/lib/events/close.c":2080,"/secure/lib/net/ftp.c":29542,"/lib/cylinder.c":358,"/lib/events/shoot.c":1969,"/lib/combatmsg.c":8271,"/verbs/items/give.c":5536,"/lib/events/listen.c":3270,"/lib/props/damage.c":1184,"/secure/sefun/get_cmds.c":1009,"/verbs/rooms/cast.c":1256,"/verbs/items/throw.c":2498,"/verbs/players/drive.c":2745,"/lib/burn.c":4566,"/lib/quest.c":3066,"/secure/sefun/get_verbs.c":610,"/secure/lib/net/web_client.c":55,"/lib/std/wound.c":2374,"/verbs/items/fill.c":722,"/verbs/builders/copy.c":4679,"/verbs/items/free.c":845,"/lib/flask.c":5652,"/lib/round.c":3732,"/verbs/items/judge1.c":4297,"/secure/sefun/expand_keys.c":460,"/verbs/rooms/swim.c":2879,"/verbs/players/abandon.c":561,"/lib/events/give.c":1471,"/verbs/items/wear.c":1987,"/lib/interactive.c":13748,"/secure/sefun/wipe_inv.c":882,"/secure/sefun/user_exists.c":240,"/secure/sefun/names.c":3029,"/lib/events/wear.c":958,"/verbs/creators/codesay.c":2028,"/verbs/items/install.c":851,"/lib/virtual/virt_sky.c":2362,"/verbs/rooms/climb.c":2048,"/verbs/rooms/fish.c":1079,"/verbs/items/poison.c":1526,"/secure/sefun/parse_objects.c":541,"/lib/props/body_mass.c":748,"/lib/events/activate.c":416,"/secure/lib/net/socket.c":1402,"/secure/sefun/translate.c":4388,"/secure/sefun/local_time.c":2388,"/lib/comp/holder.c":2740,"/lib/door.c":13813,"/lib/fish.c":538,"/lib/events/jump.c":3196,"/lib/post_office.c":1287,"/verbs/players/backstab.c":6914,"/verbs/items/skin.c":2259,"/verbs/players/stealth.c":2474,"/verbs/items/drop.c":3240,"/lib/virtual/virt_subsurface.c":571,"/verbs/players/lead.c":1062,"/lib/events/touch.c":2830,"/verbs/players/sit.c":2032,"/lib/std/daemon.c":1347,"/lib/sentient.c":10005,"/verbs/items/wield.c":3676,"/lib/trainer.c":7857,"/secure/sefun/wild_card.c":862,"/lib/props/carry.c":1312,"/lib/meal.c":6475,"/lib/std/table.c":344,"/verbs/items/open.c":1492,"/secure/lib/net/telnet_client.c":5422,"/lib/events/drop.c":2273,"/lib/props/inventory.c":3795,"/lib/domesticate.c":4075,"/lib/events/dig.c":1219,"/verbs/builders/initfix.c":2729,"/verbs/items/put.c":6501,"/lib/bank.c":670,"/secure/sefun/dummy.c":105,"/lib/events/swim.c":109,"/lib/pager.c":13245,"/verbs/players/stand.c":1280,"/verbs/items/donate.c":1155,"/lib/flashlight.c":5358,"/lib/lvs/level.c":1447,"/verbs/players/pray.c":2401,"/secure/sefun/findobs.c":1530,"/secure/lib/net/h_ftpd.c":31166,"/secure/sefun/sefun.c":20503,"/lib/props/value.c":2231,"/lib/std/boobytrap_object.c":2496,"/verbs/players/cast.c":2094,"/verbs/items/roll.c":3889,"/lib/torch.c":1114,"/lib/mount.c":4333,"/secure/sefun/domains.c":2031,"/lib/history.c":7086,"/verbs/items/pull.c":1152,"/lib/std/room.c":31739,"/verbs/players/describe.c":975,"/verbs/common/body.c":4082,"/lib/std/book.c":1404,"/secure/lib/net/echo_server.c":1744,"/lib/spell.c":21376,"/verbs/items/listen.c":1937,"/lib/events/dig_with.c":2524,"/verbs/items/deactivate.c":814,"/lib/events/search.c":4302,"/lib/events/roll.c":1890,"/lib/creator.c":7023,"/lib/die.c":2591,"/lib/events/pull.c":2246,"/lib/std/barkeep.c":5464,"/lib/currency.c":3223,"/secure/sefun/this_agent.c":447,"/lib/clerk.c":4380,"/lib/blank.c":38,"/lib/clay.c":1786,"/verbs/items/shake.c":926,"/secure/sefun/native_version.c":45,"/verbs/items/unload.c":912,"/verbs/items/rock.c":1375,"/secure/sefun/get_object.c":7803,"/lib/virtual/virtual.c":654,"/verbs/players/ignore.c":2191,"/lib/light.c":1417,"/secure/sefun/rooms.c":5303,"/lib/used_meal.c":173,"/verbs/players/ride.c":2723,"/lib/virtual/virt_map.c":4867,"/lib/help.c":575,"/lib/events/wield.c":1223,"/secure/sefun/generic.c":136,"/lib/events/rock.c":561,"/verbs/items/strike.c":611,"/verbs/rooms/fly.c":3061,"/lib/teacher.c":6872,"/lib/events/fly.c":107,"/verbs/items/unwield.c":1413,"/verbs/items/get.c":6624,"/lib/flow.c":6354,"/lib/events/bait_with.c":1058,"/lib/missile.c":3056,"/secure/sefun/absolute_path.c":2050,"/lib/language.c":4175,"/secure/lib/connect.c":24417,"/verbs/common/mail.c":2046,"/secure/lib/connect.first.c":5921,"/lib/exits.c":10411,"/verbs/items/load.c":984,"/verbs/creators/wizlock.c":1121,"/lib/events/sit.c":1968,"/secure/sefun/files.c":1908,"/secure/lib/net/uptime_server.c":1586,"/secure/sefun/visible.c":146,"/lib/npc.c":18618,"/lib/daemons/player_stub.c":489,"/lib/battery.c":2349,"/lib/editor.c":1347,"/lib/teach.c":2465,"/lib/events/load.c":1665,"/secure/sefun/make_workroom.c":3706,"/secure/sefun/atomize.c":369,"/verbs/creators/zap.c":1273,"/verbs/items/drink.c":1639,"/lib/stargate.c":7589,"/verbs/items/buy.c":1162,"/verbs/players/attack.c":3824,"/lib/firearm.c":16544,"/lib/events/swivel.c":581,"/secure/sefun/ascii.c":379,"/secure/sefun/numbers.c":844,"/secure/sefun/persist.c":342,"/lib/comp/object.c":1272,"/secure/sefun/flat_map.c":931,"/secure/sefun/absolute_value.c":268,"/lib/chapel.c":3558,"/secure/sefun/get_stack.c":419,"/verbs/rooms/go.c":1869,"/lib/events/shake.c":2160,"/verbs/players/mount.c":665,"/lib/std/chair.c":530,"/verbs/players/withdraw.c":882,"/lib/events/climb.c":3745,"/lib/trap.c":3733,"/verbs/items/capture.c":965,"/lib/poison.c":1436,"/secure/sefun/arrays.c":391,"/verbs/players/wake.c":1362,"/verbs/items/search.c":1698,"/lib/events/sink.c":1436,"/verbs/items/light.c":2870,"/lib/comp/weapon.c":5129,"/lib/std/story.c":3150,"/lib/body.c":59982,"/lib/leader.c":5765,"/lib/props/uniqueness.c":974,"/lib/props/radiance.c":463,"/secure/lib/net/generic.c":1450,"/secure/sefun/ordinal.c":423,"/lib/bot.c":3775,"/lib/lvs/position.c":7526,"/verbs/players/evade.c":854,"/lib/std/storage.c":4661,"/verbs/players/bump.c":6119,"/lib/pile.c":3605,"/lib/learn.c":326,"/verbs/items/sell.c":1967,"/lib/events/get_from.c":6211,"/verbs/players/sink.c":928,"/lib/pistol.c":137,"/lib/shop.c":812,"/secure/sefun/load_object.c":1621,"/verbs/items/press.c":1082,"/secure/sefun/morality.c":1226,"/lib/chat.c":5994,"/lib/money.c":661,"/verbs/players/crawl.c":1852,"/verbs/players/party.c":4451,"/lib/shadow_hook.c":511,"/verbs/common/whisper.c":2662,"/secure/sefun/compare_array.c":554,"/lib/events/sell.c":500,"/secure/sefun/user_path.c":96,"/verbs/items/apply.c":826,"/lib/std/dummy.c":497,"/verbs/items/ring.c":1503,"/verbs/players/lie.c":1355,"/lib/donate.c":1880,"/lib/guard.c":4661,"/lib/events/drink.c":614,"/lib/virtual/virt_land.c":5966,"/verbs/items/read.c":1580,"/lib/shell.c":879,"/lib/talk.c":12485,"/verbs/players/request.c":1408,"/verbs/items/activate.c":788,"/verbs/creators/resurrect.c":4564,"/lib/potion.c":909,"/verbs/players/marry.c":1743,"/lib/mayor.c":2213,])
FunctionCache (["/lib/std/bed.c":"int CanGet(object who){
void create(){
","/verbs/creators/echo.c":"static void create() {
string GetHelp(string str) {
mixed do_echo() { return 1; }
int livings_are_remote() { return 1; }
mixed can_echo() {
mixed can_echo_to_liv_str(object ob, string str) {
mixed can_echo_str(string str) {
mixed do_echo_to_liv_str(object who, string what) {
mixed do_echo_str(string str) {
void eventEcho(object array targs, string str) {
","/lib/lamp.c":"string GetShort(){
static void create(){
varargs string GetLong(string unused){
int GetRadiantLight(int ambient){
varargs mixed eventLight(object who, object tool){
mixed direct_light_obj(){
mixed eventDarken(){
static void heart_beat(){
int GetBurnRate(){
static int SetBurnRate(int x){
","/secure/sefun/to_object.c":"object to_object(mixed var) {
","/verbs/items/look.c":"static void create() {
mixed can_look_at_obj_word_obj(string verb, string targ, string store) {
mixed do_look() {
mixed can_look_at_str(string str, string verb) {
mixed can_look_in_obj(string verb, string id) {
mixed can_look_inside_obj(string verb, string id) {
mixed can_look_at_str_on_obj(string targ, string verb, string id1, string id2){
varargs mixed do_look_at_obj(object ob, mixed arg) {
mixed do_look_at_str(string str) {
mixed do_look_in_obj(object ob, mixed arg){
mixed do_look_inside_obj(object ob,mixed arg) {
mixed do_look_at_obj_word_obj(object target, object storage, mixed arg) {
varargs mixed do_look_at_str_on_obj(string id, object ob) {
mixed can_look_str(string str, string verb) {
mixed can_look_obj(string verb, string id) {
mixed can_look_on_obj(string verb, string id) {
mixed can_look_at_obj_on_obj(object targ, object where, string id1, string id2){
varargs mixed do_look_obj(object ob, mixed array args...) {
mixed do_look_str(string str) {
varargs mixed do_look_on_obj(object ob, mixed arg){
","/lib/events/put.c":"static void create(){
mixed CanPut(object who){
mixed direct_put_wrd_wrd_word_obj(){
mixed GetPreventPut(){
mixed direct_put_obj_word_obj(){
mixed SetPreventPut(mixed val){
mixed direct_put_obj_obj(){
","/lib/events/read.c":"void SetReads(mapping ReadMap){
string GetRead(string str){
string array GetReads(){
void RemoveRead(string item){
mixed direct_read_obj_at_obj(object reader, object readee){
mixed GetLanguage(){
varargs mixed SetDefaultRead(mixed arg1, mixed desc){
int SetLanguage(string str){
varargs mixed eventRead(object who, mixed str){
mixed direct_read_str_word_obj(string str){
","/verbs/players/teach.c":"static void create()
mixed can_teach_str_to_liv(string str, object ob)
mixed can_teach_liv_to_str(object ob, string str){
mixed do_teach_str_to_liv(string spell, object target){
mixed do_teach_liv_to_str(object target, string spell){
","/lib/classes.c":"static void create(){
int AddSkillPoints(string skill, int x){
static string SetSkillModifier(string skill, string stat){
string GetSkillModifier(string skill){ return SkillModifiers[skill]; }
int SetMorality(int x){ return (Morality = x); }
string GetMoralityDescription(){
string array SetReligion(string adj, string noun){
varargs string GetReligion(int flag){ return Religion[flag]; }
mixed ChangeClass(string class_name){
int ClassMember(string class_name){
string SetClan(string clan){ return (Clan = clan); }
int eventMoralAct(int degree){
string GetClan(){ return Clan; }
int GetBaseStatLevel(string stat){ return 0; }
string GetClass(){ return Class; }
string SetClass(string class_name){
","/verbs/items/smoke.c":"static void create() {
varargs void eventSmoke(object who, object what, string id) {
mixed can_smoke_obj(string verb) { return this_player()->CanManipulate(); }
mixed can_smoke_from_obj(string verb) { return this_player()->CanManipulate(); }
mixed do_smoke_obj(object ob) {
mixed do_smoke_from_obj(object ob, string id) {
","/secure/sefun/disable.c":"mixed hobbled(object ob){
","/secure/lib/std/access.c":"void create() {
nomask int check_access(object ob, string fun, string file, string oper) {
nomask int remove_access(string type, string file, string who) {
static void set_access(string type, function f) {
mapping query_access(string type) {
nomask int grant_access(string type, string file, string who) {
","/lib/genetics.c":"int AddVisionBonus(int x){
static void create(){
int GetStatClass(string stat){
varargs static int array SetLightSensitivity(mixed array val...){
int array GetLightSensitivity(){
int GetCustomStats(){ return CustomStats; }
varargs string SetResistance(int type, string level){
int GetBlind(){
static void RemoveBlindness(){
varargs mixed eventBlind(object who, int amt, mixed end){
mixed eventRestoreSight(object who, int amt){
varargs void RemoveStat(string stat){
mapping GetStatsMap(){ return copy(Stats); }
mapping GetResistanceMap(){
varargs void AddStat(string stat, int base, int cls){
varargs mixed GetEffectiveVision(mixed location, int raw_score){
int AddStatPoints(string stat, int x){
static void heart_beat(){
int GetMaxStatPoints(string stat, int level){
int GetBaseStatLevel(string stat){
varargs void RemoveStatBonus(string stat, object ob){
int GetVisionBonus(){
int GetStatLevel(string stat){
int GetStatBonus(string stat){
mixed eventCustomizeStat(string stat, int amount){
void AddStatBonus(string stat, mixed f){
varargs void SetStat(string stat, int level, int classes){
","/lib/combat.c":"mixed eventTurn(object who){
mixed eventBite(object target){
static void heart_beat(){
varargs int eventReceiveDamage(mixed agent, int type, int x, int internal,
static void create(){
int GetMaxCarry(){
int GetLevel(){
void eventEnemyDied(object ob){
varargs int eventDie(mixed agent){
varargs int SetParalyzed(int count, function f){
int GetBaseStatLevel(string stat){
int GetParalyzed(){ return cParalyzed; }
int GetDead(){
static int Destruct(){
void eventDestroyEnemy(object ob){
int SetDead(int i){
int GetInCombat(){
void eventKillEnemy(object ob){
int eventExecuteAttack(mixed target){
int eventWeaponRound(mixed target, mixed val){
void eventWeaponAttack(object target, object weapon, int num){
int eventMeleeRound(mixed target, function f){
void eventMeleeAttack(object target, string limb){
int eventMagicRound(mixed target, function f){
int eventWimpy(int i){
int GetVisibility(){
object array GetEnemies(){
int AddEnemy(object ob){
int RemoveEnemy(object ob){
object SetCurrentEnemy(object ob){
static object ResetCurrentEnemy(){
object GetCurrentEnemy(){
private static void SortEnemies(){
mixed array AddNonTargets(mixed val){
mixed array RemoveNonTargets(mixed val){
object array GetNonTargets(){
int AddHostile(object ob){
object array GetHostiles(){
object array GetSpecialTarget(){
object array SetSpecialTarget(object array cibles){
int eventQuell(){
int eventUnQuell(){
string SetParty(string str){
string GetParty(){
varargs int SetAttack(mixed target, function callback, int type){
string SetWimpyCommand(string cmd){
string GetWimpyCommand(){
int GetMagicChance(int val){
int GetMagicResistance(){
varargs int GetPenalty(object other){
int GetCombatChance(int val){
int GetDefenseChance(int val){
int GetCombatBonus(int level){
static int GetDamage(int power, string skill){
int CanWeapon(object target, string type, int hands, int num){
int CanMelee(object target){
int eventPreAttack(object agent){
varargs int eventReceiveAttack(int speed, string def, object agent){
int RemoveHostile(object ob){
","/secure/sefun/percent.c":"float percent_of(mixed percent, mixed base){
","/lib/comp/container.c":"int SetOpacity(int x){
int GetOpacity(){
int GetRadiantLight(int ambient){
int CanReceive(object ob){
int CanRelease(object ob){
int eventReceiveObject(object ob){
int eventReleaseObject(object ob){
mixed eventPostRelease(object ob){
","/verbs/items/pour.c":"static void create() {
mixed can_pour_from_obj_into_obj(string verb) { return this_player()->CanManipulate(); }
mixed do_pour_from_obj_into_obj(object from, object to) {
mixed can_pour_obj_into_obj(string verb) { return this_player()->CanManipulate(); }
mixed can_pour_obj_in_obj(string verb) { return this_player()->CanManipulate(); }
mixed can_pour_obj_onto_obj(string verb) { return this_player()->CanManipulate(); }
mixed can_pour_obj_on_obj(string verb) { return this_player()->CanManipulate(); }
mixed can_pour_obj_out(string verb) { return this_player()->CanManipulate(); }
mixed can_pour_out_obj(string verb) { return this_player()->CanManipulate(); }
mixed do_pour_from_obj_in_obj(object from, object to) {
mixed do_pour_obj_onto_obj(object from, object to) {
mixed do_pour_obj_on_obj(object from, object to) {
mixed do_pour_obj_in_obj(object from, object to) {
mixed do_pour_obj_into_obj(object from, object to) {
mixed do_pour_obj_out(object from) {
mixed do_pour_out_obj(object from) {
","/verbs/items/turn.c":"static void create() {
mixed do_turn() {
mixed can_turn() {
mixed can_turn_obj(mixed foo) {
mixed can_turn_on_obj(mixed foo) {
mixed can_turn_off_obj(mixed foo) {
mixed can_turn_obj_on(mixed foo) {
mixed can_turn_obj_off(mixed foo) {
varargs mixed do_turn_obj(mixed foo, mixed foo2) {
varargs mixed do_turn_on_obj(mixed foo, mixed foo2) {
mixed do_turn_off_obj(mixed foo) {
varargs mixed do_turn_obj_on(mixed foo, mixed foo2) {
mixed do_turn_obj_off(mixed foo) {
mixed do_turn_on_obj_word_obj(mixed foo, mixed foo2) {
","/lib/events/look.c":"varargs mixed AddItem(mixed item, mixed val){
string array GetItems(){
string SetLong(string str){
mixed SetInvis(mixed val){
static mixed SetItem_func(mixed foo){
static mixed AddItem_func(mixed foo){
mapping SetItems(mapping items){
mapping GetItemsMap(){
string SetExternalDesc(string desc){
varargs mixed eventShow(object who, string component){
mapping SetItem_desc(mapping items){
mapping RemoveItem(mixed item){
mixed direct_look_obj(){
mixed direct_look_at_obj(){
mixed direct_look_on_obj(){
varargs string GetExternalDesc(object who){
mixed direct_look_at_obj_on_obj(object target, object ob,mixed arg, mixed arg2){
mixed direct_look_at_obj_word_obj(){
mixed direct_look_at_str_on_obj(string str, object target){
varargs int GetInvis(object ob){
varargs string GetLong(string str){
","/secure/lib/net/client.c":"int eventDestruct() {
function SetRead(function f) { return (Read = f); }
static void eventWriteCallback(int fd) {
static void eventReadCallback(int fd, mixed val) {
int eventCreateSocket(string host, int port) {
static void eventClose(mixed arg) {
int SetSocketType(int type) { return (SocketType = type); }
static void eventAbortCallback(int fd) {
static void eventSocketClose() { }
static void eventSocketError(string str, int x) {
int SetDestructOnClose(int x) { return (DestructOnClose = x); }
","/verbs/items/swivel.c":"static void create() {
mixed can_swivel(){
mixed can_swivel_obj(){
mixed can_swivel_wrd_obj(){
mixed can_swivel_str_on_obj(){
mixed do_swivel(){
mixed do_swivel_obj(object target){
mixed do_swivel_wrd_obj(string wrd, object target){
varargs mixed do_swivel_str_on_obj(string thing, object target){
","/verbs/items/balance.c":"static void create() {
int eventBalance(object caster, object obj1, object obj2) {
mixed do_balance_obj_to_obj(object obj1, object obj2) {
mixed can_balance_obj_to_obj() {
","/verbs/players/follow.c":"static void create() {
mixed can_follow() { return 1; }
mixed do_follow() {
mixed can_follow_liv() { return 1; }
mixed do_follow_liv(object ob) {
","/verbs/builders/delete.c":"static void create() {
mixed can_delete_obj_from_here(object ob){
mixed can_delete_obj_from_room(object ob){
int eventDeleteExit(string str){
int eventDeleteObject(object ob1, object ob2){
mixed can_delete_exit_str(string str) {
mixed can_delete_enter_str(string str) {
mixed can_delete_room_str(string str) {
mixed can_delete_obj_from_obj(object ob1, object ob2){
mixed do_delete_exit_str(string str) {
mixed do_delete_enter_str(string str) {
mixed do_delete_room_str(string str) {
mixed do_delete_obj(object ob){
mixed do_delete_obj_from_obj(object ob1, object ob2){
mixed do_delete_obj_from_room(object ob){
mixed do_delete_obj_from_here(object ob){
","/secure/lib/net/remote.c":"static void create(int fd, object owner){
void eventRead(string str) {
static void eventSocketClosed(int fd) {
static private void eventProcess(int fd, string str) {
","/lib/comp/surface.c":"void create(){
int eventPutOn(object player, object item){
","/secure/sefun/get_livings.c":"varargs object array get_livings(object ob,int foo){
varargs object get_random_living(object room, int foo){
","/secure/sefun/custom_path.c":"string array query_custom_path(){
string query_custom_command(string str){
","/lib/events/crawl.c":"mixed direct_crawl_str(string str){
mixed direct_crawl_into_str(string str){
","/lib/events/turn.c":"int eventTurn(object who){
varargs mixed CanTurn(object who, object what){
int direct_turn_on_obj_on_obj(object target, object thinger){
int indirect_turn_on_obj_on_obj(object thinger, object target){
int direct_turn_off_obj_on_obj(object target, object thinger){
int indirect_turn_off_obj_on_obj(object thinger, object target){
int direct_turn_obj_on_obj_on(object target, object thinger){
int indirect_turn_obj_on_obj_on(object thinger, object target){
int direct_turn_obj_on_obj_off(object target, object thinger){
int indirect_turn_obj_on_obj_off(object thinger, object target){
mixed eventTurnOn(object ob){
mixed eventTurnOff(object ob){
varargs mixed CanTurnOn(object who, object what){
varargs mixed CanTurnOff(object who, object what){
int direct_turn_obj_off(object target){
","/lib/std/worn_storage.c":"void eventDeteriorate(int type){
string GetItemCondition(){
string array GetSave(){
int eventMove(mixed dest){
mixed CanEquip(object who, string array limbs){
mixed eventEquip(object who, string array limbs){
varargs mixed eventUnequip(object who){
static void create(){
static int Destruct(){
mixed eventShow(object who, string component){
varargs string GetExternalDesc(object who){
int GetRadiantLight(int ambient){
static mixed array AddSave(mixed array vars){
int SetSaveRecurse(int x){
mixed CanSteal(object who){
string array GetRestrictLimbs(){
int GetOpacity(){
varargs mixed CanShowInterior(object who, object target){
int inventory_visible(){
int eventReceiveObject(object ob){
mixed CanGetFrom(object who, object item){
mixed CanPutInto(object who, object what){
int inventory_accessible(){
mixed CanClose(object who, string id){
mixed CanOpen(object who, string id){
mixed CanLock(object who, string id){
mixed CanPick(object who, string id){
mixed CanUnlock(object who, string id, object key){
int GetRetainOnDeath(){ return RetainOnDeath; }
string GetEquippedShort(){
void init(){
int GetRecurseDepth(){
int AddRecurseDepth(int i){
int SetRecurseDepth(int i){
varargs string GetEquippedDescription(object who){
int SetRetainOnDeath(int x ){ return (RetainOnDeath = x); }
mixed CanRepair(object who){
varargs mixed eventRepair(object who, int strength, int type){
int GetMaxRecurseDepth(){
int SetMaxRecurseDepth(int i){
int GetCanClose(){
int SetCanClose(int x){
int GetCanLock(){
int SetCanLock(int x){
void PutCheck(){
mapping GetProtectionMap(){
int SetSize(int x){
int GetFingers(){
void SetKey(string key){
int GetSize(){
int GetMaxProtection(int type){
int SetFingers(int x){
int SetProtection(int type, int amount){
string array SetRestrictLimbs(string array limbs){
int restrict(mixed arg){
mixed GetWear(){
mixed SetWear(mixed val){
","/lib/undead.c":"string GetUndeadType(){
string SetUndeadType(string str){
mixed eventTurn(object who){
mixed eventBite(object target){
static void heart_beat(){
int GetGhost(){
","/verbs/items/smell.c":"static void create() {
mixed can_smell() {
mixed can_smell_obj() {
mixed can_smell_str_word_obj() {
mixed do_smell() {
mixed do_smell_obj(object ob) {
mixed do_smell_str_word_obj(string str, object ob) {
","/secure/sefun/communications.c":"varargs void say(mixed str, mixed ob) {
varargs void shout(mixed str, mixed exclude) {
varargs void tc(string str, string col, object dude){
varargs int debug(mixed msg, mixed val, string color){
varargs int tn(string str, string col, object room, int mclass){
varargs int trr(string str, string col, int mclass){
void write2(mixed str){
varargs void tell_object(object ob, mixed str, int mclass){
varargs void tell_room(mixed ob, mixed str, mixed exclude) {
void tell_player(mixed player, string msg){
varargs int tell_creators(string msg, string color){
","/verbs/builders/pulsecheck.c":"static void create() {
mixed can_pulsecheck_liv(string str) {
mixed do_pulsecheck_liv(object ob){
mixed do_pulsecheck_lvs(object array obs) {
","/secure/sefun/format_page.c":"varargs string format_page(string array items, int columns, int modifier) {
","/verbs/common/yell.c":"static void create() {
string GetHelp(string str) {
mixed do_yell() { return 1; }
mixed can_yell() { return \"Yell what?\"; }
mixed can_yell_str(string str) {
mixed can_yell_in_wrd_str(string lang, string str) {
mixed do_yell_str(string str) {
mixed do_yell_in_wrd_str(string lang, string str) {
","/lib/events/press.c":"string array GetPresses(){
mapping RemovePress(string item){
varargs mapping SetPress(mixed key, mixed desc){
varargs mixed CanPress(object who, string component){
varargs mixed eventPress(object who, string component){
mixed direct_press_obj(object target){
mixed direct_press_str_on_obj(string str, object target){
","/verbs/builders/add.c":"static void create() {
mixed do_add_obj_to_obj(object ob, object ob2) {
mixed can_add_obj_to_obj(string one, string two){
mixed can_add_obj_to_here(string one) { return 1; }
mixed can_add_obj_to_room(string one) { return 1; }
mixed do_add_obj_to_here(object ob){
mixed do_add_obj_to_room(object ob){
","/lib/pole.c":"static void create(){
int GetStrength(){ return PoleStrength; }
mixed CanCast(object who){
mixed AddSave(mixed array vars){ return ({}); }
int SetStrength(int x){ return (PoleStrength = x);  }
int eventBreak(){
mixed eventCatch(object who, string fish){
int SetChance(int x){ return (CatchChance =x); }
int GetChance(){ return CatchChance + GetProperty(\"blessed\"); }
int eventFish(object who){
mixed direct_fish_with_obj(){
mixed direct_cast_obj(){
","/secure/sefun/timestamp.c":"varargs string timestamp(mixed tz){
","/lib/events/consult.c":"varargs mixed eventConsult(object who, string component){
string array GetConsults(){
mapping RemoveConsult(string item){
varargs mapping SetConsult(mixed key, mixed desc){
varargs mixed CanConsult(object who, string component){
mixed direct_consult_obj(object target){
mixed direct_consult_str_on_obj(string str, object target){
","/lib/follow.c":"static void create(){ Leader = 0; }
object GetLeader(){ return Leader; }
mixed direct_follow_liv(){
int IsFollowing(object ob){
varargs mixed CanFollow(object ob){
object SetLeader(object leader){
int eventFollow(object dest, int fC){ return 0; }
","/lib/props/ambiance.c":"int GetAmbientLight(){
int SetAmbientLight(int x){
","/lib/clan.c":"static void create(){
string GetAffectLong(object ob){
static void init(){
string GetLeader(){ return Clan->leader; }
string SetLeader(string str){
mixed CanJoin(object ob){ return 1; }
void eventJoin(object ob){
void eventWelcome(object ob){
string SetClanName(string str){
string GetClanName(){ return Clan->name; }
string SetClanObject(string str){
string GetClanObject(){ return Clan->objectName; }
string SetClanSkill(string str){
string GetClanSkill(){ return Clan->skill; }
int eventBring(string str){
int eventInitiate(string str){
int eventRetire(string str){
void eventUnjoin(object ob){
","/secure/sefun/sockets.c":"string dump_socket_status() {
mixed array socket_names(){
string socket_ip(int fd){
","/lib/std/bot_limb.c":"static void create(){
void init(){
void SetLimb(string limb, string owner, string race){
int eventDecay(){
","/lib/std/corpse.c":"int CanReceive(object ob){ return 1; }
static void create(){
string GetItemCondition(){ return \"\";}
static int Destruct(){
string GetCapName(){
string GetSaveString(){ return 0; }
string GetClass(){
string SetClass(string the_class){
string SetGender(string gender){
mapping GetSkills(){
void SetCorpse(object who){
string GetRace(){ return Race; }
string GetGender(){
mixed direct_resurrect_obj(){ return 1; }
mixed indirect_resurrect_obj(){ return 1; }
string GetHealthShort(){
int isFreshCorpse(){
int GetLevel(){
mapping GetStats(){
string array GetMissingLimbs(){
int SetLevel(int level){
string GetLivingShort(){
int eventDecay(){
mapping SetSkills(mapping skills){
mapping SetStats(mapping stats){
int isCorpse(){
int isPlayer(){
object GetPlayerob(){
string GetBaseFile(){
string GetOwner(){ return Owner; }
string GetLivingLong(){
mapping GetEquipped(){
string SetLivingShort(string short){
string SetLivingLong(string long){
int SetNoDecay(int i){
int GetNoDecay(){
int SetSlowDecay(int i){
int GetSlowDecay(){
int SetCount(int i){
int GetCount(int i){
int direct_animate_obj(){
string SetBaseFile(string file){
string array SetMissingLimbs(string array limbs){
int direct_offer_obj(){
","/lib/cigar.c":"static void create(){
string GetShort(){
varargs string GetLong(string unused){
int GetRadiantLight(int ambient){
mixed eventSmoke(object who, object what){
int GetLastPuff(){
","/verbs/players/nominate.c":"static void create() {
mixed can_nominate_str() {
mixed do_nominate_str( string str ) {
","/verbs/items/unlock.c":"static void create() {
varargs mixed can_unlock_obj_with_obj(object foo, object bar,
varargs mixed do_unlock_obj_with_obj(object ob1, object ob2, mixed args...) {
varargs mixed can_unlock_obj_with_str(mixed ob1, mixed ob2, mixed words...) {
varargs mixed do_unlock_obj_with_str(mixed ob1, mixed ob2, mixed words...) {
","/verbs/items/move.c":"static void create() {
mixed can_move_obj() {
mixed can_move_str_on_obj() {
mixed do_move_obj(object target) {
varargs mixed do_move_str_on_obj(string thing, object target) {
","/verbs/items/bury.c":"static void create() {
static void eventBury(object who, object tool, object what, object check) {
varargs static void eventPrepareBury(object who, object tool, object what) {
mixed can_bury_str_with_obj() {
mixed can_bury_obj_with_obj() {
mixed do_bury_str_with_obj(string str, object tool) {
mixed do_bury_obj_with_obj(object what, object tool) {
","/lib/events/apply.c":"mixed direct_apply_obj_word_obj(){
mixed indirect_apply_obj_word_obj(){
mixed CanApply(object applicant){
","/secure/sefun/mud_info.c":"string architecture() { return MUDOS_ARCH; }
string mud_name() { return MUD_NAME; }
varargs string imc2_mud_name(string name){
string mudlib_version() { return \"2.9a14\"; }
int query_host_port() { return __PORT__; }
string admin_email() { return ADMIN_EMAIL; }
string query_os_type(){
string query_intermud_ip(){
int query_windows(){
","/verbs/players/news.c":"static void create() {
mixed do_news() { return do_news_str(\"general\"); }
mixed can_news() { return can_news_str(\"general\"); }
","/lib/props/description.c":"string GetShort(){
mixed direct_modify_word_str(){
mixed direct_initfix_obj(){
mixed direct_createfix_obj(){
mixed direct_reload_obj(){ return 1; }
mixed indirect_reload_obj(){ return 1; }
mixed direct_reload_word_obj(){ return 1; }
mixed direct_reload_str_obj(){ return 1; }
mixed indirect_reload_str_obj(){ return 1; }
mixed direct_reload_str_word(){ return 1; }
mixed direct_reload_every_str(){ return 1; }
mixed direct_copy_obj_to_obj(){ return 1; }
mixed direct_copy_obj_str(){ return 1; }
mixed direct_add_obj_to_obj(){ return 1; }
mixed indirect_add_obj_to_obj(){ return 1; }
mixed direct_add_obj_to_here(){ return 1; }
mixed direct_add_obj_to_room(){ return 1; }
mixed indirect_delete_obj_from_obj(){
int SetNoModify(int i){
int GetModify(){
int GetNoModify(){
string GetDefiniteShort(){
varargs mixed SetShort(mixed val, int proper){
object array GetDummyItems(){
mixed direct_modify_obj_str(){
mixed indirect_reload_word_obj(){ return 1; }
mixed indirect_reload_str_word(){ return 1; }
mixed indirect_reload_every_str(){ return 1; }
mixed indirect_read_obj_at_obj(){ return 1; }
mixed indirect_delete_obj_from_here(){ return 1; }
mixed direct_delete_obj_from_room(){ return 1; }
mixed indirect_delete_obj_from_room(){ return 1; }
mixed indirect_add_obj_to_here(){ return 1; }
mixed indirect_add_obj_to_room(){ return 1; }
","/verbs/items/judge.c":"static void create() {
mixed can_judge_obj_to_obj() {
int eventJudge(object caster, object obj1, object obj2, int level) {
mixed do_judge_obj_to_obj(object obj1, object obj2) {
","/lib/std/germ.c":"static void create(){
void init(){
string GetType(){
mixed eventCure(object who, int x, string type){
mixed eventInfect(object ob){
mixed eventEncounter(object who){
static void heart_beat(){
mixed GetCure(){
mixed SetCure(mixed val){
int isGerm(){
string GetGermName(){
mixed eventMultiply(){
int GetCommunicable(){
int GetCannotInfect(){
int SetCannotInfect(int i){
int SetGermName(string str){
int SetCommunicable(int x){
function GetInfect(){
function SetInfect(function f){
int GetLifeSpan(){
int SetLifeSpan(mixed x){
void eventSuffer(object ob){
string SetType(string type){
","/verbs/players/learn.c":"static void create()
mixed can_learn_to_str_from_liv(string str, object ob){
mixed do_learn_to_str_from_liv(string spell, object target){
mixed can_learn_str_from_liv(string str, object ob)
mixed do_learn_str_from_liv(string spell, object target){
","/secure/lib/net/ftp_data_connection.c":"int eventDestruct() {
function SetRead(function f) { return (Read = f); }
static void eventWriteCallback(int fd) {
static void eventReadCallback(int fd, mixed val) {
int eventCreateSocket(string host, int port) {
varargs static int eventClose(class data_conn sock, int aborted) {
int SetSocketType(int type) { return (SocketType = type); }
static void eventAbortCallback(int fd) {
static void eventSocketClose() { }
static void eventSocketError(string str, int x) {
int SetDestructOnClose(int x) { return (DestructOnClose = x); }
int SetPassiveMode(int x) { return (PassiveMode = x); }
static void eventListenCallback(int fd)
int eventWriteDestruct() {
function SetWrite(function f) { return (Write = f); }
function SetClose(function f) { return (Close = f); }
","/secure/sefun/events.c":"int event_pending(object ob) {
varargs void add_event(string source, string ob, string fun, mixed array args, int when, int repeat){
varargs void remove_event(int i){
","/lib/events/disarm.c":"varargs mixed eventDisarm(mixed arg){
mixed direct_disarm_obj(){
mixed direct_boobytrap_obj_with_obj(){
mixed indirect_boobytrap_obj_with_obj(){
","/lib/events/bury.c":"mixed direct_bury_obj_with_obj(){
","/verbs/items/remove.c":"static void create() {
mixed can_remove_obj_out_of_obj() {
mixed do_remove_obj_out_of_obj(object targ, object container) {
mixed do_remove_obs_out_of_obj(mixed array res, object container) {
mixed can_remove_obj_from_obj() {
mixed do_remove_obj_from_obj(object targ, object container) {
mixed do_remove_obs_from_obj(mixed array res, object container) {
","/lib/events/get.c":"static void create(){
mixed direct_get_obj(object target){
mixed direct_get_obj_from_obj(object target, object src){
mixed direct_get_obj_out_of_obj(object target, object src){
mixed CanGet(object who){
mixed GetPreventGet(){
mixed SetPreventGet(mixed val){
mixed direct_get_obj_obj(object target, object src){
","/verbs/items/knock.c":"static void create() {
mixed can_knock_obj() {
mixed can_knock_on_obj() {
mixed can_knock_str_on_obj() {
mixed can_knock_on_str_on_obj() {
mixed do_knock_obj(object target) {
mixed do_knock_on_obj(object target) {
varargs mixed do_knock_str_on_obj(string thing, object target) {
varargs mixed do_knock_on_str_on_obj(string thing, object target) {
","/lib/magic.c":"varargs mixed CanCast(object spell){
int GetSpellLevel(string spell){
void SetSpellBook(mapping book){
mapping GetSpellBook(){
static void eventTrainSpell(object spell){
static varargs void eventCast(object spell, string limb, object array targs){
varargs mixed eventPrepareCast(string verb, mixed array args...){
mixed eventLearnSpell(string spell){
","/lib/player.c":"int CanReceive(object ob){ return CanCarry((int)ob->GetMass()); }
int eventReceiveObject(object foo){
int eventReleaseObject(object foo){
static void create(){
static int Destruct(){
string SetShort(string irrelevant){
string GetName(){
string GetCapName(){ return interactive::GetCapName(); }
varargs int eventShow(object who, string str){
varargs string GetLong(string str){
int Setup(){
static void heart_beat(){
int eventMove(mixed dest){
static void net_dead(){
void eventReconnect(){
varargs mixed GetEffectiveVision(mixed location, int raw_score){
mixed eventTurn(object who){
int SetUndead(int x){
string SetClass(string str){
varargs int eventDie(mixed agent){
void eventLoadObject(mixed array value, int recurse){ }
varargs static int AddHealthPoints(int x, string limb, object agent){
int GetLanguageLevel(string lang){
int ResetLevel(){
void eventKillEnemy(object ob){
int AddCurrency(string type, int amount){
int AddBank(string bank, string type, int amount){
string array GetMuffed(){
mixed eventAsk(object who, string what){
string array AddTitle(string title){
string array GetTitles(){ return Titles; }
string array SetMuffed(string array muffed){
string array AddMuffed(string muffed){
string array RemoveMuffed(string unmuffed){
int SetTitleLength(int x){
int GetTitleLength(){ return TitleLength; }
varargs int eventTrain(string skill, int points){
mixed CanUse(){ return 1; }
varargs mixed eventDisplayStatus(int simple){
varargs void eventRevive(int nopenalty){
static mixed eventUse(object used, string cmd){
string array SetTitles(string array titles){
string array RemoveTitle(string title){
mapping array GetDeaths(){
int GetTrainingPoints(){ return TrainingPoints; }
int AddTrainingPoints(int x){
int RemoveTrainingPoints(int x){
static void eventDestroyUndead(object agent){
","/secure/lib/net/ftp_client.c":"int eventDestruct() {
function SetRead(function f) { return (Read = f); }
static void eventWriteCallback(int fd) {
static void eventReadCallback(int fd, mixed val) {
int eventCreateSocket(string host, int port) {
varargs static int eventClose(class client sock, int aborted) {
int SetSocketType(int type) { return (SocketType = type); }
static void eventAbortCallback(int fd) {
static void eventSocketClose() { }
static void eventSocketError(string str, int x) {
int SetDestructOnClose(int x) { return (DestructOnClose = x); }
int eventWriteDestruct() {
function SetWrite(function f) { return (Write = f); }
function SetClose(function f) { return (Close = f); }
","/lib/std/base_dummy.c":"varargs static void create(string array id, mixed long, string array adj){
static int Destruct(){
varargs mixed eventScratch(object who, mixed what){
varargs mixed eventKnock(object who, mixed what){
varargs string array SetId(mixed ids...){
mixed eventMove(mixed dest){
int isDummy(){
","/secure/sefun/tail.c":"int tail(string file) {
","/verbs/items/uninstall.c":"static void create() {
mixed can_uninstall_obj_word_obj(mixed foo) {
varargs mixed do_uninstall_obj_word_obj(mixed foo, mixed foo2, mixed foo3) {
","/lib/manycoins.c":"int PutCoins(object who){
int Payment(object who, int value){
","/verbs/common/say.c":"static void create() {
string GetHelp(string str) {
mixed can_say_to_liv(object ob) {
mixed do_say(mixed args...){
mixed can_say_to_liv_str(object targ, string str) {
mixed can_say_str(string str) {
mixed do_say_to_liv(object ob) { return 1; }
mixed do_say_to_liv_str(object targ, string str) {
mixed do_say_str(string str) { return do_say_to_liv_str(0, str); }
","/lib/events/smoke.c":"mixed CanSmoke(object who){
int direct_smoke_obj(object who, object target){
int direct_smoke_from_obj(object who, object target){
","/lib/props/equip.c":"int GetArmorType(){
static string array SetWorn(string array limbs){
string array GetWorn(){
mixed CanEquip(object who, string array limbs){
int SetArmorType(int x){
mixed CanUnequip(object who){
mixed eventEquip(object who, string array limbs){
static void eventRestoreEquip(string array limbs){
mixed eventUnequip(object who){
string array GetSave(){
","/lib/files.c":"string query_cwd(){ return DIR_TMP; }
","/lib/events/lie.c":"mixed eventReleaseStand(object who){
int CanGet(object who){
object array GetLiers(){
mixed direct_lie_down_word_obj(){
int GetMaxLiers(){
static int SetMaxLiers(int x){
mixed direct_lie_word_obj(){
mixed eventReceiveLay(object who){
","/verbs/items/empty.c":"static void create() {
mixed can_empty_obj(string verb) { return this_player()->CanManipulate(); }
mixed do_empty_obj(object from) {
","/secure/sefun/log_file.c":"void log_file(string fl, string msg) {
","/lib/std/boobytrap_shadow.c":"int eventShadow(object ob){
varargs mixed CanClose(object who, string id){
mixed eventClose(object who){
varargs mixed eventOpen(object who, object tool){
varargs mixed CanOpen(object who, object tool){
void create(){
string GetKeyName(){
string GetShort(){
mixed direct_get_obj(object target){
mixed direct_get_obj_from_obj(object target, object src){
mixed direct_get_obj_out_of_obj(object target, object src){
mixed CanGet(object who){
mixed GetPreventGet(){
mixed direct_get_obj_obj(object target, object src){
mixed GetPreventDrop(){
int GetDestructOnDrop(){
mixed direct_drop_obj(object target){
mixed CanDrop(object who){
mixed CanLock(object who, string id){
mixed CanPick(object who, string id){
mixed direct_pick_str_on_obj_with_obj(string str, object target, object tool,
varargs mixed CanUnlock(object who, string id, object key){
varargs mixed eventLock(object who, mixed arg1, mixed arg2){
varargs mixed eventPick(object who, string str, object tool){
varargs mixed eventUnlock(object who, mixed arg1, mixed arg2){
mixed eventSteal(object who){
mixed CanSteal(object who){
mixed eventEquip(object who, string array limbs){
mixed eventUnequip(object who){
varargs mixed eventDisarm(mixed args...){
varargs mixed SpringTrap(mixed arg1, mixed arg2){
string GetTrapDescription(){
int GetTrapLevel(){
int SetTrapType(int i){
int GetTrapType(){
int SetTrapLevel(int i){
string SetTrapDescription(string str){
int SetAutoResets(int i){
int GetAutoResets(){
","/verbs/items/lock.c":"static void create() {
varargs mixed can_lock_obj_with_obj(mixed ob1, mixed ob2,
varargs mixed do_lock_obj_with_obj(object target, object key, mixed words...) {
varargs mixed can_lock_obj_with_str(mixed ob1, mixed ob2, mixed words...) {
varargs mixed do_lock_obj_with_str(mixed ob1, mixed ob2, mixed words...) {
","/verbs/items/dig.c":"static void create() {
static void eventDig(object who, object tool, object what, object check) {
varargs static void eventPrepareDig(object who, object tool, object what) {
mixed can_dig_with_obj() {
mixed can_dig_str_with_obj() {
mixed can_dig_obj_with_obj() {
mixed do_dig_with_obj(object ob) {
mixed do_dig_str_with_obj(string str, object ob) {
mixed do_dig_obj_with_obj(object what, object ob, string id) {
","/verbs/items/consult.c":"static void create() {
mixed can_consult_str_on_obj() {
mixed can_consult_obj() {
mixed do_consult_obj(object target) {
varargs mixed do_consult_str_on_obj(string thing, object target) {
","/lib/fishing.c":"static void create(){
int CanRelease(object who){
void heart_beat(){
mixed CanCast(object who, string where){
mixed CanStop(object who, string str){
mixed eventCast(object who, object pole, string str){
mixed eventStop(object who, string str){
mapping GetFish(){ return Fish; }
int AddFish(string fish, int x){
mapping SetFish(mapping mp){ return (Fish = mp); }
static void eventCatch(object who, string fish, object pole){
int SetChance(int x){ return (Chance = x); }
int GetChance(){ return Chance; }
mapping RemoveFish(string fish){
mapping SetFishing(object who, object pole){
mapping RemoveFishing(object who){
int SetMaxFishing(int x){ return (MaxFishing = x); }
int GetMaxFishing(){ return MaxFishing; }
int SetSpeed(int x){ return (Speed = x); }
int GetSpeed(){ return Speed; }
","/lib/props/mass.c":"int AddMass(int x){
int GetMass(){
int GetWeight(){
string array GetSave(){
int SetMass(int x){
","/lib/pipe.c":"string GetShort(){
static void create(){
varargs string GetLong(string unused){
int GetRadiantLight(int ambient){
varargs mixed eventLight(object who, object tool){
mixed direct_light_obj(){
mixed eventDarken(){
static void heart_beat(){
int GetBurnRate(){
static int SetBurnRate(int x){
mixed eventSmoke(object who, object what){
int GetLastPuff(){
","/lib/user/autosave.c":"int Setup(){
static void heart_beat(){
nomask int restore_player(string nom){
nomask void save_player(string nom){
nomask void restore_inventory(){
","/lib/vehicle.c":"void create(){
varargs string GetInternalDesc(){
void init(){
int eventMove(mixed dest){
mixed eventMount(object who){
varargs int eventDie(mixed agent){
int inventory_accessible(){
varargs int CanFly(mixed who, mixed where){
object array GetDummyItems(){
varargs void AddItem(mixed item, mixed val, mixed adjectives){
mapping SetItems(mixed items){
mapping GetItemsMap(){
mapping RemoveItem(mixed item){
varargs mixed eventEnter(object who, string what, string verb){
mixed eventGo(object who, string str){
mixed CanGo(object who, string str){
varargs void SetRead(mixed items, mixed arg){
void RemoveRead(mixed item){
void AddRead(mixed item, mixed val){
mixed GetVehicleInterior(){
int eventDrive(string direction){
mixed direct_drive(){
mixed direct_drive_word_str(){
mixed direct_fly(){
mixed direct_fly_word_str(){
int SetVehicleInterior(mixed arg){
","/lib/rifle.c":"static void create(){
void init(){
","/secure/lib/net/http.c":"int eventRead(buffer data) {
void validate(){
void eventBlockIp(){
string GetBoundary(){
string GetHost(){
int GetPort(){
string GetIp(){
void eventSendData(string str){
void eventLogConnection(){
int authenticate(string path){
string GetReferer(){
mapping GetCookie(){
private static void eventError(string name) {
mixed GenerateIndex(string dir, string requested){
void eventRemoveTmp(string file){
varargs private static mixed eventGetFile(string name, string type, string payload) {
","/lib/std/bane.c":"int SetBane(array arr){
string array QueryBane(){
string array GetBane(){
","/secure/sefun/inventory.c":"int query_carrying(object who, mixed thing){
object array containers(object ob){
","/lib/events/lock.c":"string array AddKey(string key){
function SetPick(function f){
varargs string array SetKeys(mixed array args...){
mixed CanLock(object who, string id){
mixed CanPick(object who, string id){
varargs string array GetKeys(string unused){
varargs mixed direct_lock_obj_with_obj(object target, object key, mixed id...){
varargs mixed direct_lock_obj_with_str(object target, mixed key, mixed id...){
varargs mixed direct_pick_str_on_obj_with_obj(string str, object target, object tool,
varargs mixed direct_unlock_obj_with_obj(object target, object key, string id, string key2){
varargs mixed direct_unlock_obj_with_str(object target, object key, string id, string key2){
int GetLocked(){
int SetLocked(int x){
int GetLockStrength(){
int SetLockStrength(int x){
varargs mixed CanUnlock(object who, string id, object key){
varargs mixed eventLock(object who, mixed arg1, mixed arg2){
varargs mixed eventPick(object who, string id, object tool){
varargs mixed eventUnlock(object who, mixed arg1, mixed arg2){
mixed direct_wizlock_obj(){ return 1; }
mixed direct_wizunlock_obj(){ return 1; }
function GetPick(){
string array GetSave(){
","/secure/sefun/legacy.c":"void set(mixed arg1, mixed arg2){
void query(mixed arg1, mixed arg2){
mixed seteuid(mixed args){
mixed getuid(mixed args){
mixed geteuid(mixed args){
void add(mixed arg1, mixed arg2){
string day(){
int date(){
string month(){
int year(){
varargs int minutes(int x){
varargs string season(int x){
varargs int hour(int x){
void personal_log(string str){
void add_sky_event(function f){
varargs mixed dump_variable(mixed foo, mixed bar){
string query_time(){
mixed set_verbs(string array args){
","/verbs/items/use.c":"static void create() {
mixed can_use_obj_to_str(string str) { return 1; }
mixed do_use_obj_to_str(object ob, string str) {
","/secure/sefun/path_file.c":"mixed array path_file(mixed full_path) {
","/secure/sefun/values.c":"int round(string f){
mixed convert_value(string val) {
","/verbs/players/befriend.c":"static void create() {
mixed can_befriend_liv() { return 1; }
mixed do_befriend_liv(object ob) {
","/secure/lib/bboard.c":"void create() {
string GetExternalDesc() {
void init() {
static private int valid_edit(string author) {
int cmd_post(string str) {
static void begin_post(string cmd, string subj, string file, function f) {
void continue_post(string subj, string file) {
void end_post(string subj, string mail) {
int cmd_read(string str) {
void continue_followup(mapping post, string subj, string file) {
void continue_mail(mapping post, string subj, string file) {
static void check_include_text(string ans, string subj, string file, mapping
int cmd_edit(string str) {
void end_edit(string subj, int num) {
void set_board_id(string str) { __BoardID = str; }
string query_board_id() { return __BoardID; }
string query_board_time(int x) {
int cmd_remove(string str) {
int cmd_followup_and_respond(string str) {
","/lib/events/scratch.c":"string array GetScratches(){
mapping RemoveScratch(string item){
varargs mapping SetScratch(mixed key, mixed desc){
varargs mixed CanScratch(object who, string component){
mixed direct_scratch_obj(object target){
mixed direct_scratch_on_obj(object target){
varargs mixed eventScratch(object who, mixed component){
mixed direct_scratch_str_on_obj(string str, object target){
mixed direct_scratch_on_str_on_obj(string str, object target){
","/lib/events/buy.c":"mixed CanSell(object who, string what){
int direct_buy_str_from_liv(string str){
","/lib/steal.c":"static void create(){
mixed eventSteal(object who){
mixed direct_steal_obj_from_liv(){ return CanSteal(this_player()); }
mixed GetPreventSteal(){ return PreventSteal; }
mixed SetPreventSteal(mixed val){ return (PreventSteal = val); }
","/lib/events/smell.c":"mixed direct_smell_str_word_obj(string str){
string array GetSmells(){
varargs mixed eventSmell(object who, string str){
mixed direct_smell_obj(){
mapping GetSmellMap(){
varargs mixed SetSmell(mixed array args...){
mapping RemoveSmell(string item){
","/lib/fuel.c":"static void create(){
varargs string GetLong(string val){
static int SetRefuelable(int x){
int GetMaxFuel(){
int GetRefuelable(){
static int SetMaxFuel(int x){
string GetFuelType(){
static int SetFuelAmount(int x){
int GetFuelAmount(){
mixed eventRefuel(int x){
mixed eventDecreaseFuel(int x){
static string SetFuelType(string str){
","/verbs/builders/createfix.c":"static void create() {
mixed can_createfix_word(string str) { return can_createfix_obj(\"foo\"); }
mixed do_createfix_obj(object ob) {
mixed do_createfix_word(string wrd) {
","/verbs/creators/wizunlock.c":"static void create() {
mixed can_wizunlock_obj(string str) {
mixed do_wizunlock_obj(object ob){
","/lib/std/armor.c":"void eventDeteriorate(int type){
string GetItemCondition(){
string array GetSave(){
int eventMove(mixed dest){
mixed CanEquip(object who, string array limbs){
mixed eventEquip(object who, string array limbs){
varargs mixed eventUnequip(object who){
static void create(){
static int Destruct(){
mixed eventShow(object who, string component){
varargs string GetExternalDesc(object who){
static mixed array AddSave(mixed array vars){
mixed CanSteal(object who){
string array GetRestrictLimbs(){
int GetRetainOnDeath(){ return RetainOnDeath; }
string GetEquippedShort(){
void init(){
varargs string GetEquippedDescription(object who){
int SetRetainOnDeath(int x ){ return (RetainOnDeath = x); }
mixed CanRepair(object who){
varargs mixed eventRepair(object who, int strength, int type){
mapping GetProtectionMap(){
int SetSize(int x){
int GetFingers(){
int GetSize(){
int GetMaxProtection(int type){
int SetFingers(int x){
int SetProtection(int type, int amount){
string array SetRestrictLimbs(string array limbs){
int restrict(mixed arg){
int SetAC(int i){
mixed GetWear(){
mixed SetWear(mixed val){
","/lib/race.c":"string GetRace(){ return Race; }
void NewBody(string race){
static void heart_beat(){
static void create(){
varargs string SetRace(string race, mixed extra){
int GetMaxCarry(){
int SetMaxHealthPoints(int x){
varargs int eventDie(mixed agent){
int GetCarriedMass(){ return 0; }
int GetMaxMagicPoints(){
float GetMaxStaminaPoints(){
int GetAlcohol(){ return body::GetAlcohol(); }
string GetResistance(int type){ return genetics::GetResistance(type); }
int GetHeartRate(){
varargs int GetMaxHealthPoints(string limb){
int GetStatLevel(string stat){ return genetics::GetStatLevel(stat); }
varargs void SetStat(string stat, int level, int classes){
mixed CanDrink(object ob){
mixed eventDrink(object ob){
mixed eventEat(object ob){
string SetGender(string gender){ return (Gender = gender); }
int GetMobility(){
int SetRespiration(int i){
mixed CanEat(object ob){
string GetGender(){ return Gender; }
int GetRespiration(){
varargs int CanBreathe(object what, object where){
string GetTown(){ return Town; }
string SetTown(string str){ return (Town = str); }
int GetLuck(){
","/lib/inventory.c":"static void eventLoadInventory(){
mapping SetInventoryCheck(mapping newmap){
static void eventLoadItem(string file, mixed args, int count){
mapping GetInventory(){
void heart_beat(){
varargs void reset(){
","/lib/bboard.c":"void create(){
string GetExternalDesc(){
void init(){
static private int valid_edit(string author){
int cmd_post(string str){
static void begin_post(string cmd, string subj, string file, function f){
void continue_post(string subj, string file){
void end_post(string subj, string mail){
int cmd_read(string str){
void continue_followup(mapping post, string subj, string file){
void continue_mail(mapping post, string subj, string file){
static void check_include_text(string ans, string subj, string file, mapping
int cmd_edit(string str){
void end_edit(string subj, int num){
void set_board_id(string str){ __BoardID = str; }
string query_board_id(){ return __BoardID; }
string query_board_time(int x){
int cmd_remove(string str){
int cmd_followup_and_respond(string str){
","/lib/props/move.c":"object GetLastEnvironment(){
int eventMove(mixed dest){
","/lib/std/limb.c":"string GetShort(){
int CanReceive(object ob){
void create(){
string GetItemCondition(){
int Destruct(){
int GetSaveString(){
void init(){
string GetRace(){
void SetLimb(string limb, string owner, string race){
string GetLimb(){
int eventDecay(){
string GetOwner(){
int SetNoDecay(int i){
int GetNoDecay(){
int SetSlowDecay(int i){
int GetSlowDecay(){
int SetCount(int i){
int GetCount(int i){
","/lib/detect.c":"int direct_detect_wrd_in_obj(string word){
mixed eventDetect(object who, string str, int ability){
","/secure/sefun/pointers.c":"int ambassadorp(object ob) {
varargs int creatorp(object ob) {
int high_mortalp(object ob) {
int archp(object ob) {
int hiddenp(object ob) {
int leaderp(object ob) {
varargs int newbiep(object ob) {
varargs int playerp(object ob) {
int securep(mixed guy) {
int assistp(mixed guy) {
int elderp(object ob) {
int testp(object ob) {
varargs int wizardp(object ob){
int adminp(object ob){
varargs int estatep(object ob){
int imud_privp(mixed guy) {
int snooperp(mixed guy) {
int builderp(object ob) {
int telnet_privp(mixed guy) {
int councilp(object ob) {
int avatarp(object ob) {
","/lib/events/fall.c":"mixed eventFall(){
","/secure/sefun/query_invis.c":"varargs int query_invis(object lookee, object looker) {
","/secure/sefun/identify.c":"varargs string identify( mixed a )
","/secure/sefun/english.c":"varargs string add_article(string str, int def) {
string cardinal(int x) {
varargs string conjunction(mixed expressions, string coordinator) {
string consolidate(int x, string str) {
varargs string item_list(mixed array items...) {
string nominative(mixed val) {
string objective(mixed val) {
string possessive_noun(mixed val) {
string reflexive(mixed val) { return sprintf(\"%sself\", objective(val)); }
string remove_article(string str) {
string strip_article(mixed val) {
varargs mixed match_command(string verb, int subs){
varargs int ordinalp(string str, int parseflag){
string array explode_list(string list) {
","/verbs/rooms/stop.c":"static void create() {
string GetHelp(string str) {
mixed can_stop_str(string str) {
mixed do_stop_str(string str) {
","/secure/sefun/messaging.c":"string create_message(int pov, string array verb, string message,
void send_messages(mixed verb, string message, object subject, mixed targets,
","/verbs/items/close.c":"static void create() {
varargs mixed do_close_obj(object ob, mixed array args...) {
mixed can_close_obj(string verb) {
","/lib/match.c":"mixed eventStrike(object who){
mixed direct_strike_obj(){
int GetStrikeChance(){
static int SetStrikeChance(int x){
","/lib/living.c":"int GetMaxCarry(){ return combat::GetMaxCarry(); }
int AddCarriedMass(int x){ return carry::AddCarriedMass(x); }
int CanCarry(int amount){ return carry::CanCarry(amount); }
int GetCarriedMass(){
static void create(){
varargs mixed eventShow(object who, string str){
mixed direct_dismount_from_liv(){
int is_living(){ return 1; }
varargs int eventMoveLiving(mixed dest, string omsg, string imsg, mixed dir){
mixed direct_dismount_liv(){
mixed direct_mount_liv(){
mixed direct_ride_word_str(){
mixed direct_ride_str(){
int eventFollow(object dest, int followChance){
int inventory_accessible(){ return 1; }
int SetDead(int i){
int direct_follow_liv(){ return 1; }
int direct_evade_liv(){ return 1; }
int direct_lead_liv(){ return 1; }
int GetNoCondition(){
mixed direct_target_liv(){
mixed direct_target_only_liv(){
mixed direct_target_liv_only(){
mixed direct_bite_liv(){
mixed direct_cast_str_on_obj(){
mixed direct_resurrect_obj(){ return 1; }
mixed indirect_resurrect_obj(){ return 1; }
mixed direct_get_obj(){
mixed direct_get_obj_from_obj(){
mixed direct_show_liv_obj(){
mixed indirect_show_obj_liv(object item){
mixed direct_give_liv_obs(){
mixed indirect_give_obj_liv(object item){
mixed indirect_give_obs_liv(object array items){
mixed direct_backstab_liv(){
mixed direct_heal_str_of_liv(string limb){
mixed direct_regen_str_on_liv(string limb){
mixed direct_teleport_to_liv(){
mixed direct_portal_to_liv(){
mixed direct_resurrect_liv(){
mixed direct_scry_liv(){
mixed indirect_zap_liv(){ return 1; }
mixed indirect_pulsecheck_liv(){ return 1; }
int direct_rockwhip_liv(){ return CanReceiveMagic(1, \"rockwhip\"); }
int direct_acidspray_liv(){ return CanReceiveMagic(1, \"acidspray\"); }
int direct_annihilate_liv(){ return CanReceiveMagic(1, \"annihilate\"); }
int direct_arrow_liv(){ return CanReceiveMagic(1, \"arrow\"); }
int direct_arrow_at_liv(){ return CanReceiveMagic(1, \"arrow\"); }
int direct_blades_at_liv(){ return CanReceiveMagic(1, \"blades\"); }
int direct_blades_liv(){ return CanReceiveMagic(1, \"blades\"); }
int direct_corrupt_liv(){ return CanReceiveMagic(1, \"currupt\"); }
int direct_demonclaw_liv(){ return CanReceiveMagic(1, \"demonclaw\"); }
int direct_dispel_liv(){ return CanReceiveMagic(1, \"dispel\"); }
int direct_drain_at_liv(){ return CanReceiveMagic(1, \"drain\"); }
int direct_drain_liv(){ return CanReceiveMagic(1, \"drain\"); }
int direct_fireball_at_liv(){ return CanReceiveMagic(1, \"fireball\"); }
int direct_fireball_liv(){ return CanReceiveMagic(1, \"fireball\"); }
int direct_frigidus_at_liv(){ return CanReceiveMagic(1, \"frigidus\"); }
int direct_frigidus_liv(){ return CanReceiveMagic(1, \"frigidus\"); }
int direct_holylight_liv(){ return CanReceiveMagic(1, \"holylight\"); }
int direct_missile_liv(){ return CanReceiveMagic(1, \"missile\"); }
int direct_missile_at_liv(){ return CanReceiveMagic(1, \"missile\"); }
int direct_shock_liv(){ return CanReceiveMagic(1, \"shock\"); }
int direct_palm_liv(){ return CanReceiveMagic(1, \"palm\"); }
int direct_immolate_liv(){ return CanReceiveMagic(1, \"immolate\"); }
int direct_gale_liv(){ return CanReceiveMagic(1, \"gale\"); }
int direct_aura_liv(){ return CanReceiveMagic(0, \"aura\"); }
int direct_soulseek_liv(){ return CanReceiveMagic(0, \"soulseek\"); }
int direct_cloak_wrd(){ return CanReceiveMagic(0, \"cloak\"); }
int direct_stealth_wrd(){ return CanReceiveMagic(0, \"stealth\"); }
int direct_backlash_for_liv(){ return CanReceiveMagic(0, \"backlash\"); }
int direct_buffer_liv(){ return CanReceiveMagic(0, \"buffer\"); }
int direct_calm_liv(){ return CanReceiveMagic(0, \"calm\"); }
int direct_cleanse_liv(){ return CanReceiveMagic(0, \"cleanse\"); }
int direct_convert_liv(){ return CanReceiveMagic(0, \"convert\"); }
int direct_shield_liv(){ return CanReceiveMagic(0, \"shield\"); }
int direct_remedy_liv(){ return CanReceiveMagic(0, \"remedy\"); }
int direct_gaze(){ return CanReceiveMagic(0, \"gaze\"); }
int direct_send_str_to_str(){ return CanReceiveMagic(0, \"send\"); }
int direct_connect_str(){ return CanReceiveMagic(0, \"connect\"); }
int direct_heal_liv(){ return CanReceiveMagic(0, \"heal\"); }
int direct_mend_liv(){ return CanReceiveMagic(0, \"mend\"); }
int direct_refresh_liv(){ return CanReceiveMagic(0, \"refresh\"); }
int direct_rejuvinate_liv(){ return CanReceiveMagic(0, \"rejuvinate\"); }
int direct_farsight_liv(){ return 1; }
int direct_bump_liv(){ return 1; }
int direct_marry_liv_to_liv(){ return 1; }
int direct_party_wrd_liv(){ return 1; }
int direct_challenge_liv(){ return 1; }
int direct_ignore_liv(){ return 1; }
mixed eventCure(object who, int amount, string type){
mixed eventInfect(object germ){
varargs mixed eventSteal(object who, mixed what, object target, int skill){
int GetNonCurrencyMass(){
mixed SetAttackable(mixed foo){
mixed GetAttackable(){
int SetNoCondition(int foo){
mixed direct_give_liv_obj(){
mixed direct_give_liv_wrd_wrd(object targ, string num, string curr){
varargs mixed CanCastMagic(int hostile, string spell){
varargs mixed CanReceiveHealing(object who, string limb){
mixed direct_verb_rule(string verb){
mixed direct_attack_liv(){
mixed direct_attack_only_liv(){
mixed direct_attack_liv_only(){
mixed CanAttack(){
mixed indirect_give_obj_to_liv(object item){
mixed direct_give_wrd_wrd_to_liv(string num, string curr){
mixed direct_steal_wrd_from_liv(string wrd){
mixed indirect_steal_obj_from_liv(object item, mixed args...){
mixed direct_capture_liv_word_obj(){
mixed direct_pray_for_str_against_str_for_liv(){
mixed direct_cast_str_against_str(){
mixed direct_cast_str_on_str_of_obj(){
mixed direct_free_liv_from_obj(){
mixed indirect_show_obj_to_liv(object item){
mixed indirect_give_obs_to_liv(object array items){
mixed direct_remedy_str_of_liv(string limb){
int direct_annihilate_at_liv(){ return CanReceiveMagic(1, \"annihilate\"); }
int direct_backlash_for_liv_against_wrd(){ return CanReceiveMagic(0, \"backlash\"); }
int direct_balance_obj_to_obj(){ return CanReceiveMagic(0, \"balance\"); }
int direct_veil_liv_against_wrd_wrd(){ return CanReceiveMagic(0, \"veil\"); }
int direct_ward_liv_against_wrd(){ return CanReceiveMagic(0, \"ward\"); }
int direct_command_str_to_str(){ return CanReceiveMagic(0, \"command\"); }
int indirect_throw_obj_at_obj(){ return 1; }
int indirect_toss_obj_at_obj(){ return 1; }
int indirect_buy_str_from_liv(){ return 1; }
int indirect_sell_obj_to_liv(){ return 1; }
int indirect_marry_liv_to_liv(){ return 1; }
int SetPK(int x){ return (isPK = x); }
int GetPK(){ return isPK; }
","/verbs/items/shoot.c":"static void create() {
varargs mixed eventShoot(mixed device, mixed target, mixed misc...){
mixed can_shoot_obj_at_obj(mixed shooter,mixed target) {
varargs mixed do_shoot_obj_at_obj(mixed args...) {
varargs mixed do_shoot_obj_with_obj(mixed args...) {
mixed can_shoot_liv_with_obj(mixed target,mixed shooter){
mixed can_shoot_obj_at_liv(mixed shooter,mixed target){
varargs mixed do_shoot_obj_at_liv(mixed args...) {
varargs mixed do_shoot_liv_with_obj(mixed args...) {
mixed can_shoot_obj_with_obj(mixed target,mixed shooter) {
","/lib/events/look_in.c":"int SetOpacity(int x){
int GetOpacity(){
mixed direct_look_in_obj(){
varargs mixed CanShowInterior(object who, object target){
string SetInternalDesc(string str){
mixed direct_look_inside_obj(){
varargs mixed eventShowInterior(object who, object target){
string GetInternalDesc(){
mixed inventory_visible(){
mixed indirect_look_at_obj_word_obj(object target){
","/verbs/players/dismount.c":"static void create() {
mixed can_dismount_liv() {
mixed can_dismount_from_liv() {
mixed do_dismount_liv(object ob) {
mixed do_dismount_from_liv(object ob) {
","/lib/virtual/virt_std.c":"object compile_object(string fname){
mixed CreateVirtualObject(string fname){
","/secure/lib/net/oob.c":"static void create(mixed alpha, mixed beta, mixed gamma, mixed delta){
int eventRead(mixed data) {
static private void validate() {
void heart_beat(){
void eventID(string str){
void write_data(mixed arg){
int eventDumpFiles(){
","/lib/comp/seal.c":"varargs mixed eventOpen(object who, object tool){
varargs mixed CanOpen(object who, string id){
mixed CanLock(object who, string id){
void create(){
","/verbs/items/bait.c":"static void create() {
mixed can_bait_obj_with_obj(string verb) { return this_player()->CanManipulate(); }
mixed do_bait_obj_with_obj(object pole, object bait) {
","/lib/std/bot_corpse.c":"void create(){
void init(){
void SetCorpse(object who){
int eventDecay(){
","/lib/events/poison.c":"mixed direct_poison_obj_with_obj(){
int SetPoison(int x){
mixed CanPoison(object who){
mixed eventPoison(object who, object agent, int strength){
int AddPoison(int x){
int GetPoison(){
string array GetSave(){
","/secure/sefun/strings.c":"varargs string arrange_string(string str, int x) {
varargs mixed convert_string(string str, int flag) {
varargs string center(string str, int x) {
string trim(string str) {
varargs string wrap(string str, int x) {
int memberp(mixed array primary, mixed sub){
int grepp(string primary, string sub){
string first(string str, int i){
varargs string last(string str, int i, int significant){
varargs mixed homedir(mixed ob, int cre){
int alphap(mixed arg){
string morse(string msg) {
string unmorse(string msg) {
varargs mixed remove_matching_line(string target, string substring, int i, string exclude){
string truncate(string str, int i){
string path_prefix(string str){
varargs string first_string_element(string str, string delimiter, int stripfirst){
string last_string_element(string str, string delimiter){
string replace_line(string file, string array params, string repl){
int reverse_memberp(string primary, string array sub){
varargs mixed replace_matching_line(string target, string substring, string replace, int i, string exclude){
int starts_with_arr(string primary, string array sub){
string reverse_string(string str) {
varargs string generate_tmp(mixed arg){
string newline_trim(string str) {
varargs mixed read_matching_line(string target, string substring, int i, string exclude){
int numericp(mixed arg){
int basic_punctuationp(mixed arg){
string append_line(string file, mixed params, string repl){
varargs mixed alpha_crypt(mixed arg1, mixed arg2){
string alpha_strip(mixed arg){
int check_string_length(string str){
varargs mixed print_long_string(object who, string str, int catted){
varargs string array chunk_string(string str, int width){
varargs mixed random_numbers(int n, int integer){
string convert_newline(string str){
int clean_newline_file(string str){
string unpinkfish(string str){
string repinkfish(string str){
string web_translate(string str){
string dbz_colors(string str, int annoying){
string space_trim(string str) {
int query_common_ascii(string str){
string to_html(string str) {
","/lib/persist.c":"static mixed array AddSave(mixed array vars){ return (Saved += vars); }
string GetSaveString(){
static int eventConvertObject(mixed val, int recurse){
int eventLoadObject(mixed val, int recurse){
int SetRetain(int i){
static int SetSaveRecurse(int flag){ return (SaveRecurse = flag); }
int GetRetain(){
","/lib/clip.c":"int CanReceive(object ob){
int CanRelease(object ob){
void create(){
varargs mixed eventLoad(object who, object where){
varargs mixed eventUnload(mixed where){
int GetCaliber(){ return caliber; }
int GetMillimeter(){ return millimeter; }
string GetAmmoType(){ return ammotype; }
string GetFirearmType(){ return firearmtype; }
int SetCaliber(int x){ caliber=x; return 1; }
int SetMillimeter(int x){ millimeter=x; return 1; }
int SetMaxAmmo(int i){ MaxAmmo=i; return 1; }
int SetFirearmType(string str){firearmtype=str; return 1; }
int SetAmmoType(string str){ammotype=str; return 1; }
int MinusAmmo(int i){ ammo -= i; return 1; }
int PlusAmmo(int i){ ammo += i; return 1; }
","/secure/sefun/mappings.c":"int mgrepp(string primary, string array sub){
string flat_map(mapping mp) {
mixed mapping_member(mapping Map, string sub){
varargs mapping add_maps(mapping FirstMapping,mapping  SecondMapping, int preference){
","/verbs/items/show.c":"static void create() {
mixed can_show_liv_obj() {
mixed can_show_obj_to_liv(mixed arg1, mixed arg2) {
mixed do_show_liv_obj(object target, object what) {
mixed do_show_obj_to_liv(object what, object target) {
mixed can_show_obj_liv(mixed arg1, mixed arg2) {
mixed do_show_obj_liv(object what, object target) {
","/secure/sefun/fuzzymatch.c":"int damerau_levenshtein_distance(string a, string b) {
","/secure/sefun/light.c":"varargs int effective_light(object ob) {
varargs int total_light(object ob) {
varargs int visibility(object ob) {
mixed check_light(object who) {
","/secure/sefun/security.c":"string file_privs(string file) {
int member_group(mixed who, string grp) {
mixed unguarded(function f) { return (mixed)master()->apply_unguarded(f); }
int check_privs(mixed pretender, mixed target){
int domain_admin(mixed pretender, string domain){
int check_read(string file){
","/lib/cgi.c":"mapping ParsePost(string args){
","/lib/events/knock.c":"string array GetKnocks(){
mapping RemoveKnock(string item){
varargs mapping SetKnock(mixed key, mixed desc){
varargs mixed CanKnock(object who, string component){
mixed direct_knock_obj(object target){
mixed direct_knock_on_obj(object target){
mixed direct_knock_str_on_obj(string str, object target){
varargs mixed eventKnock(object who, mixed component){
mixed direct_knock_on_str_on_obj(string str, object target){
","/verbs/common/ask.c":"static void create() {
mixed can_ask_liv_for_str(string str) { return 1; }
mixed can_ask_liv_str(string str) {
mixed do_ask_liv_to_str(object ob, string str) {
mixed do_ask_str(string str) {
mixed do_ask_liv_for_str(object ob, string str) {
mixed can_ask_liv_about_str(string str) { return 1; }
mixed can_ask_liv_to_str(string str) { return 1; }
mixed can_ask_str(string str) {
mixed do_ask_liv_about_str(object ob, string str) {
mixed do_ask_liv_str(object ob, string str) {
","/verbs/players/vote.c":"static void create() {
mixed can_vote_for_str() {
mixed do_vote_for_str( string str ) {
","/lib/events/bait.c":"string array GetSave(){
int GetBait(){
int SetBait(int x){
int eventBait(object who, object bait){
mixed CanBait(object who){
int AddBait(int x){
mixed direct_bait_obj_with_obj(){
","/verbs/builders/dest.c":"static void create() {
mixed can_dest_obj(string str){
mixed can_dest_str(string str){
mixed do_dest_obj(object ob){
mixed do_dest_obs(object array obs) {
mixed do_dest_str(string str){
","/lib/std/furnace.c":"void create(){
int CanReceive(object ob){
void heart_beat(){
void init(){
","/lib/std/lockpick.c":"void create(){
void init(){
varargs mixed CanPick(mixed who, mixed what){
varargs mixed eventPickLock(mixed who, mixed id, mixed tool){
int GetPickingQuality(){
int SetPickingQuality(int i){
mixed indirect_pick_str_on_obj_with_obj(string str, object target, object tool,
","/verbs/common/shout.c":"static void create() {
string GetHelp(string str) {
mixed can_shout() { return \"Shout what?\"; }
mixed can_shout_str(string str) {
mixed can_shout_in_wrd_str(string lang, string str) {
mixed do_shout() { return 1; }
mixed do_shout_str(string str) {
mixed do_shout_in_wrd_str(string lang, string str) {
","/verbs/items/scratch.c":"static void create() {
mixed can_scratch_on_str_on_obj() {
varargs mixed do_scratch_on_str_on_obj(string thing, object target) {
mixed can_scratch_obj() {
mixed can_scratch_on_obj() {
mixed can_scratch_str_on_obj() {
mixed do_scratch_obj(object target) {
mixed do_scratch_on_obj(object target) {
varargs mixed do_scratch_str_on_obj(string thing, object target) {
","/lib/nmsh.c":"string GetKeyName(){ return 0; }
static void create(){
static int array GetScreen(){ return ({ 79, 24 }); }
static int ReceiveChars(string c){
private static int set_cwd(string str){
private static void pushd(string str){
nomask static int cmd_pwd(){
string get_path(){ return query_cwd(); }
int Setup(){
nomask static int cmd_cd(string str){
int GetCharmode(){
void heart_beat(){
varargs int GetInvis(){ return 0; }
string process_input(string str){
int CancelCharmode(){
nomask static int cmd_nickname(string str){
nomask static int cmd_alias(string str){
nomask static int cmd_nmsh(string str){
nomask static int cmd_pushd(string str){
nomask static int cmd_popd(){
varargs nomask string write_prompt(string str){
nomask static void process_request(string request, string xtra){
static int request_vis(object ob){
nomask private static string do_nickname(string str){
nomask private static string do_alias(string str){
nomask static string replace_nickname(string str){
void reset_prompt(){
varargs nomask string GetPrompt(int withbuff){
int query_mp(){ return 1; }
int query_max_mp(){ return 10; }
int query_hp(){ return 1; }
int query_max_hp(){ return 10; }
int query_sp(){ return 1; }
int query_max_sp(){ return 10; }
nomask static int cmd_unalias(string str){
nomask static int cmd_work(string str){
varargs int erase_prompt(int x){
static string GetCharbuffer(){
static string user_names(object ob){
string query_prev_wd(){ return PreviousWorkingDirectory; }
string SetPrompt(string str){ return Prompt = str; }
static void EchoCommand(string str){
mixed RecalculateHist(int x){
int SetCharmode(int x){
void CheckCharmode(){
","/lib/std/vendor.c":"static void create(){
int CanCarry(int amount){ return 1; }
mixed eventBuy(object who, object array obs){
int indirect_sell_obj_to_liv(){ return 1; }
mixed eventAsk(object who, string str){
mixed CanSell(object who, string what){
int GetValue(object ob, object who){
int GetVendorType(){ return VendorType; }
int SetVendorType(int x){ return (VendorType = x); }
int indirect_sell_obs_to_liv(){ return 1; }
string SetLocalCurrency(string str){ return (LocalCurrency = str); }
string SetStorageRoom(string room){ return (StorageRoom = room); }
int SetMaxItems(int x){ return (MaxItems = x); }
mixed eventSell(object who, mixed what){
int GetMaxItems(){ return MaxItems; }
string GetStorageRoom(){ return StorageRoom; }
mixed direct_buy_str_from_liv(string str){
int cmdBrowse(object who, string args){
int cmdAppraise(object who, string args){
int cmdPrice(object who, string args){
string GetLocalCurrency(){ return LocalCurrency; }
int GetCost(object ob, object who){
int cmdShow(object who, string args){
mixed CanBuy(object who, object array obs){
","/lib/messages.c":"static void create(){
varargs string GetMessage(string msg, mixed arg){
string GetName(){ return 0; }
string SetMessage(string msg, string str){
mapping GetMessages(){ return copy(Messages); }
","/lib/props/save.c":"varargs void create(){
int eventDestruct(){
int GetLastSave(){
void RestoreObject(){
void SaveObject(){
mixed GetPersistentInventory(){
int SetPersistent(int x){
string GetSaveName(){
","/lib/events/show.c":"mixed indirect_show_liv_obj(object target){
mixed direct_show_obj_liv(){
mixed direct_show_obj_to_liv(){
","/lib/blank_pile.c":"string GetShort(){
static void create(){
string array GetId(){
","/secure/sefun/query_time_of_day.c":"string query_time_of_day() { return SEASONS_D->GetTimeOfDay(); }
","/lib/events/manipulate.c":"varargs mixed CanManipulate(object who, string component){
varargs mixed eventManipulate(object who, string component){
string array GetManipulates(){
mapping RemoveManipulate(string item){
varargs mapping SetManipulate(mixed key, mixed desc){
mixed direct_move_obj(object target){
mixed direct_move_str_on_obj(string str, object target){
","/verbs/items/extinguish.c":"static void create() {
mixed can_extinguish_obj() {
mixed do_extinguish_obj(object target) {
mixed do_extinguish_obs(mixed array targs) {
","/verbs/items/pick.c":"static void create() {
mixed can_pick_str_on_obj_with_obj(string str) {
mixed do_pick_str_on_obj_with_obj(string wrd, object ob, object tool,
mixed can_pick_obj() {
mixed do_pick_obj(object ob, string id) {
","/lib/lvs/abilities.c":"static void create(){
void AddSkillBonus(string skill, mixed f){
int GetSkillClass(string skill){
string array GetPrimarySkills(){
mapping GetSkillsMap(){
int GetBaseSkillLevel(string skill){
int GetSkillBonus(string skill){
varargs void RemoveSkillBonus(string skill, object ob){
int GetMaxSkillPoints(string skill, int level){
varargs void SetSkill(string skill, int level, mixed cls){
int ResetLevel(){
int GetLevel(){
int GetSkillLevel(string skill){
int AddSkillPoints(string name, int x){
int SetLevel(int x){
","/secure/lib/file.c":"varargs static void create(string file) {
int eventDestruct() {
mixed eventWrite(mixed val) {
int GetSize() {
mixed eventDelete() {
string GetLine() {
int isFile() {
int isTemporary() {
string GetCharacters(int start, int length) {
string array GetDirectoryList() {
mixed array GetDirectoryShort() {
string GetFileName() {
int GetLastModified() {
varargs string GetLines(int arg1, int arg2) {
string GetString() {
mixed eventCreateDirectory() {
varargs mixed eventRename(string name, int clobber) {
int isDirectory() {
","/secure/sefun/duplicates.c":"object array get_dupes(object ob, object where){
int query_dupes(object ob1,object ob2){
","/lib/std/item.c":"void eventDeteriorate(int type){
string GetItemCondition(){
string array GetSave(){
int eventMove(mixed dest){
static void create(){
varargs mixed direct_get_obj_from_obj(object item, mixed gamma,mixed alfa, mixed beta, mixed epsilon){
static int Destruct(){
mixed eventShow(object who, string component){
string GetExternalDesc(object who){
static mixed array AddSave(mixed array vars){
mixed CanSteal(object who){
int GetRetainOnDeath(){
mixed direct_cast_str_on_obj(){
int SetNoCondition(int i){
void init(){ }
mixed indirect_balance_obj_to_obj(){
mixed direct_compare_obj_to_obj(){
mixed indirect_compare_obj_to_obj(){
mixed indirect_judge_obj_to_obj(){
mixed direct_throw_obj_word_obj(){
mixed indirect_throw_obj_into_obj(){
int direct_sacrifice_obj_to_str(string deus){
string SetQuestId(string name){
string GetQuestId(){
int SetRetainOnDeath(int x){
mixed CanRepair(object who){
varargs mixed CanThrow(object who, object target){
void eventRemoveBlessing(){
int eventBless(int amount, int time){
mixed eventThrow(object who, object target){
varargs mixed eventRepair(object who, int strength, int type){
mixed direct_use_obj_to_str(){
mixed direct_bless_obj(){
mixed direct_curse_obj(){
mixed direct_cast_str_on_str_of_obj(){
","/lib/teller.c":"static void create(){
mixed GetCurrencies(){ return copy(Currencies); }
string SetLocalCurrency(string str){ return (LocalCurrency = str); }
int eventBalance(object who){
int eventWithdraw(object who, string currency, int amount){
string GetLocalCurrency(){ return LocalCurrency; }
string SetBankName(string str){ return (BankName = str); }
int SetLocalFee(int x){ return (LocalFee = x); }
int SetNonLocalFee(int x){ return (NonLocalFee = x); }
int SetOpenFee(int x){ return (OpenFee = x); }
float SetExchangeFee(float x){ return (ExchangeFee = x); }
mixed SetCurrencies(mixed var){
int GetLocalFee(){ return LocalFee; }
int GetNonLocalFee(){ return NonLocalFee; }
int GetExchangeFee(){ return ExchangeFee; }
int GetOpenFee(){ return OpenFee; }
string GetBankName(){ return BankName; }
int AddSurcharge(object who, string currency, int amount){
int eventDeposit(object who, string currency, int amount){
int eventExchange(object who, int amount, string str1, string str2){
int eventOpenAccount(object who){
int cmdParse(object who, string cmd, string str){
mixed CanBank(object who){
","/secure/sefun/reaper.c":"varargs void reap_other(string s1){
mixed reap_list(){
","/verbs/players/sleep.c":"static void create() {
mixed can_sleep() {
mixed do_sleep() {
","/lib/shadow.c":"int eventUnshadow(){
int eventShadow(object ob){
string GetShadowedName(){
object GetShadowedObject(){
","/verbs/players/kneel.c":"static void create() {
mixed can_kneel_down() {
mixed can_kneel_word_obj() {
mixed can_kneel_down_word_obj() {
mixed do_kneel_down() {
mixed do_kneel_word_obj(string word, object target) {
mixed do_kneel_down_word_obj(string word, object target) {
","/lib/remote.c":"static void create() {
string eventWriteFile(string file, string str) {
string eventReadFile(string file) {
string eventCommand(string cmd, string arg) {
","/verbs/items/disarm.c":"static void create() {
varargs mixed can_disarm_obj(mixed args...) {
varargs mixed do_disarm_obj(object target) {
","/lib/events/lock_with.c":"varargs mixed indirect_lock_obj_with_obj(object target, object key, mixed id){
varargs mixed indirect_lock_obj_with_str(object target, mixed key, mixed id...){
mixed indirect_unlock_obj_with_obj(object target, object key, mixed id...){
varargs mixed indirect_unlock_obj_with_str(object target, mixed key, mixed id){
int GetDisabled(){
int GetDisableChance(){
mixed eventUnlockLock(object who, object what){
int SetDisabled(int x){
mixed eventLockLock(object who, object what){
int SetDisableChance(int x){
mixed array GetSave(){
","/secure/sefun/minimap.c":"varargs string simple_map(mixed arg){
string query_door(object what, string direction){
","/verbs/builders/reload.c":"static void create() {
void unQuiet(){
mixed can_reload_obj(string str) {
mixed can_reload_every_str(string str){
mixed can_reload_str_obj(string str){
mixed can_reload_word(string str){
mixed can_reload_str_word(string str, string str2){
mixed do_reload_obj(object ob) {
mixed do_reload_str_obj(string str, object ob) {
mixed do_reload_word(string wrd) {
mixed do_reload_str_word(string wrd1, string wrd2) {
mixed do_reload_every_str(string str){
","/lib/props/id.c":"string array parse_command_plural_id_list(){
string array parse_command_adjectiv_id_list(){
string GetName(){
string array GetId(){
string GetKeyName(){
string array GetAdjectives(){
string array GetCanonicalId(){
varargs void eventAnnounceCanonicalId(object env){
string GetUniqueId(){
varargs void ReceiveCanonicalId(mixed foo, int leaving){
varargs string array SetAdjectives(mixed adjs...){
int SetMatching(int i){
string SetCapName(string str){
int GetMatching(){
varargs string array SetId(mixed val...){
string GetCapName(){
string array parse_command_id_list(){
string SetKeyName(string nom){
","/secure/sefun/copy.c":"","/secure/lib/net/server.c":"varargs static void create(int port, int type, string socket_obj) {
int eventDestruct() {
varargs int eventWrite(object owner, mixed val, int close) {
int eventCreateSocket(int port) {
static int eventClose(mixed sock) {
static int SetSocketType(int x ) {
static void eventSocketError(string msg, int code) {
static int SetDestructOnClose(int x) {
static void eventServerAbortCallback(int fd) {
static void eventServerListenCallback(int fd) {
int eventShutdown() {
int GetDestructOnClose() {
int GetSocketType() {
static void eventServerReadCallback(int fd, mixed val) {
static void eventNewConnection(object socket) {
static void eventServerWriteCallback(int fd) {
","/lib/props/clean.c":"int eventDestruct(){
static int SetNoClean(int x){
int GetNoClean(){
int clean_up(int ref_exists){
","/secure/sefun/economy.c":"float currency_inflation(string type) {
float currency_rate(string type) {
int currency_mass(int x, string type) {
int currency_value(int x, string str) {
string array mud_currencies() { return (string array )ECONOMY_D->__QueryCurrencies(); }
string query_base_currency(){
int query_base_rate(){
int query_player_money(object who) {
int query_base_value(string currency, int amount){
int valid_currency(string str){
int query_value(int amount,string from_currency, string to_currency){
","/verbs/players/target.c":"static void create() {
mixed can_target_liv(object target) {
mixed do_target_liv(object target) {
varargs mixed do_target_lvs(mixed array targets, int exclusive) {
mixed can_target_only_liv(object target){
mixed can_target_liv_only(object target){
mixed do_target_only_liv(object target){
mixed do_target_liv_only(object target){
","/lib/cedit.c":"void create(){
static int array GetScreen(){ return ({ 79, 24 }); }
static varargs int CeditSave(string file){
static int ReceiveChar(string c){
static int CeditCollate(){ /* when lines need to be resorted array /
varargs int StatReport(string str){
int GetCediting(){
varargs int SetCediting(int x, string file){
varargs int RedrawScreen(int topline){
","/verbs/rooms/enter.c":"static void create() {
mixed can_enter_obj() {
mixed can_enter_into_obj() {
mixed do_enter_obj(object targ, string what) {
mixed do_enter_into_obj(object targ, string what) {
","/lib/lead.c":"static void create(){
varargs mixed CanLead(object ob){
int GetFollowBonus(object follower){
object array RemoveFollower(object follower){
object array GetFollowers(){ return filter(keys(Followers), (: $1 :)); }
int AddFollowBonus(object follower, int bonus){
mixed direct_evade_liv(){
int GetFollowed(object follower){
varargs mixed CanEvade(object ob){
object array AddFollower(object follower){
int SetFollowed(object follower, int followed){
int eventMoveFollowers(object dest){
mixed direct_lead_liv(){
int eventEvade(object ob){
mapping GetFollowerMap(){ return copy(Followers); }
","/verbs/items/boobytrap.c":"static void create() {
mixed can_boobytrap_obj_with_obj(string verb) {
varargs mixed do_boobytrap_obj_with_obj(object target, object trap, mixed array words...) {
","/secure/sefun/interface.c":"string strip_colours(string str){
string strip_colors(string str){
string strip_colors_old(string str){
","/lib/daemons/verb.c":"static void create(){
string GetVerb(){ return Verb; }
string array GetVerbs(){ return ({ Verb }); }
string GetErrorMessage(){ return ErrorMessage; }
static string SetErrorMessage(string str){ return (ErrorMessage = str); }
string array GetRules(){ return copy(Rules); }
varargs static string array SetRules(mixed array args...){
string array GetSynonyms(){ return copy(Synonyms); }
static string SetVerb(string str){
varargs static string array SetSynonyms(mixed array args...){
","/verbs/items/equate.c":"static void create() {
mixed can_judge_obj_to_obj() {
int eventJudge(object caster, object obj1, object obj2, int level) {
mixed do_judge_obj_to_obj(object obj1, object obj2) {
","/secure/sefun/time.c":"int query_date(int x) { return (int)SEASONS_D->GetDay(x); }
string query_day_name(int x) { return (string)SEASONS_D->GetDayName(x); }
int query_hour(int x) { return (int)SEASONS_D->GetHour(x); }
int query_minutes(int x) { return (int)SEASONS_D->GetMinutes(x); }
string query_month(int x) { return (string)SEASONS_D->GetMonth(x); }
int query_night() { return ((string)SEASONS_D->GetTimeOfDay() == \"night\"); }
string query_season(int x) { return (string)SEASONS_D->GetSeason(x); }
int query_year(int x) { return (int)SEASONS_D->GetYear(x); }
function time_event(string tod, function f) {
varargs string time_elapsed(int arg1, int arg2){
","/verbs/common/speak.c":"static void create() {
string GetHelp(string str) {
mixed can_speak() { return \"Speak what? In what language?\"; }
mixed can_speak_in_wrd(string str) {
mixed can_speak_str(string str) {
mixed can_speak_in_wrd_str(string lang, string str) {
mixed do_speak() { return 1; }
mixed do_speak_in_wrd(string str) {
mixed do_speak_str(string str) {
mixed do_speak_in_wrd_str(string lang, string str) {
","/verbs/rooms/jump.c":"static void create() {
mixed can_jump_word_obj() {
mixed can_jump_word_word_obj() {
varargs mixed do_jump_in_obj(object ob, mixed array args...) {
varargs mixed do_jump_into_obj(object ob, mixed array args...) {
varargs mixed do_jump_off_obj(object ob, mixed array args...) {
varargs mixed do_jump_from_obj(object ob, mixed array args...) {
varargs mixed do_jump_through_obj(object ob, mixed array args...) {
varargs mixed do_jump_across_obj(object ob, mixed array args...) {
varargs mixed do_jump_over_obj(object ob, mixed array args...) {
varargs mixed do_jump_onto_obj(object ob, mixed array args...) {
varargs mixed do_jump_on_obj(object ob, mixed array args...) {
varargs mixed do_jump_off_of(object ob, mixed array args...) {
","/lib/enter.c":"static void create(){
varargs void SetDoor(string door, string side){
varargs mixed eventEnter(object who, string what, string verb){
string GetDoor(){
mixed eventClose(object who){
mixed direct_open_obj_with_obj(object target, object ob){
varargs mixed direct_lock_obj_with_obj(object target, object tool){
mixed direct_pick_str_on_obj_with_obj(string str, object ob, object w,
mixed direct_unlock_obj_with_obj(object target, object w){
varargs mixed eventOpen(object who, object tool){
mixed direct_close_obj(object target){
varargs mixed eventLock(object who, mixed arg1, mixed arg2){
varargs mixed eventPick(object who, string str, object tool){
mixed eventUnlock(object who, object key){
mixed direct_wizlock_obj(){ return 1; }
mixed direct_wizunlock_obj(){ return 1; }
varargs void SetEnter(string dest, function pre, function post){
string GetEnter(){
string ResolveObjectName(string file){
varargs mixed eventScratch(object who, object tool){
mixed direct_enter_into_obj(){
mixed direct_enter_obj(){
varargs mixed eventKnock(object who, mixed what){
string GetDoorSide(){
void SetDoorSide(string doorside){
","/lib/props/properties.c":"mixed GetProperty(string prop){
mapping SetProperties(mapping props){
mapping GetProperties(){
int RemoveProperty(string prop){
mixed AddProperty(string prop, mixed val){
mixed SetProperty(string prop, mixed val){
","/lib/bonus.c":"mixed CanDrop(object who){ return 0; }
void create(){
mixed CanGet(object who){ return 0; }
int eventDestruct(){
mixed CanPut(object who){ return 0; }
mixed CanSell(object who){ return 0; }
void init(){
mapping GetSkills(){
mixed CanGive(object who){ return 0; }
string GetBonusName(){
void heart_beat(){
mapping GetStats(){
int AddBonusDuration(int i){
int GetBonusDuration(){
mapping SetSkills(mapping arg){
mapping SetStats(mapping arg){
string SetBonusName(string name){
int SetBonusDuration(int i){
int RemoveBonuses(){
int SetBonuses(){
mapping SetPoints(mapping arg){
mapping GetPoints(){
","/verbs/items/touch.c":"static void create() {
mixed can_touch_obj() {
mixed can_touch_str_word_obj() {
mixed do_touch_obj(object ob) {
mixed do_touch_str_word_obj(string str, object ob) {
","/lib/events/stop.c":"varargs mixed CanStop(object who, string what, mixed args){
varargs mixed eventStop(object who, string what, mixed args){
","/lib/events/describe.c":"void eventDescribeEnvironment(int brief){
","/lib/props/addstuff.c":"varargs int AddStuff(string array str, int q){
","/verbs/builders/modify.c":"static void create() {
mixed can_modify_obj_str(string str) {
mixed can_modify_word_str(string str) { return can_modify_obj_str(\"foo\"); }
mixed do_modify_obj_str(object ob, string str) {
mixed do_modify_word_str(string wrd, string str) {
","/lib/events/install.c":"int direct_install_obj_word_obj(object thingus, object target){
int indirect_install_obj_word_obj(object target, object thingus){
int direct_uninstall_obj_word_obj(object thingus, object target){
int indirect_uninstall_obj_word_obj(object one, object two, object three){
varargs mixed CanUninstall(object who, object what){
varargs mixed CanInstall(object who, object what){
varargs mixed eventInstall(object what, object where){
varargs mixed eventUninstall(object what, object where){
","/secure/sefun/reload.c":"varargs mixed reload(mixed ob, int recursive, int quiet){
","/verbs/items/eat.c":"static void create() {
void eventEat(object who, object what) {
mixed can_eat_obj() {
mixed do_eat_obj(object ob) {
","/lib/interface.c":"static void create(){
int GetClient(){ return Client; }
int Setup(){
static string process_input(string str){
string GetKeyName(){ return 0; }
varargs int eventPrint(string msg, mixed arg2, mixed arg3){
int array GetScreen(){ return Screen; }
int GetBlocked(string type){ return (Blocked[\"all\"] || Blocked[type]); }
varargs int eventReceive(string message, int noprompt, int noerase){
void receive_message(mixed msg_class, string msg){
int eventFlushQueuedMessages(){
string GetTerminal(){ return Terminal; }
static void terminal_type(string str){
static void window_size(int width, int height){ SetScreen(width, height); }
static void receive_snoop(string str){ receive_message(\"snoop\", \"%\"+str); }
varargs int SetBlocked(string type, int flag){
int SetClient(int x){
int SetLogHarass(int x){
int GetLogHarass(){ return LogHarass; }
string SetTerminal(string terminal){
varargs int eventPauseMessages(int x, int exceptions){
int SetAnnoyblock(int i){
int GetAnnoyblock(){
","/verbs/items/steal.c":"static void create() {
static void eventSteal(object who, mixed what, object target) {
mixed can_steal_wrd_from_liv(string wrd) {
mixed can_steal_obj_from_liv() {
mixed do_steal_wrd_from_liv(string wrd, object liv) {
mixed do_steal_obj_from_liv(object item, object liv) {
mixed do_steal_obs_from_liv(mixed array res, object liv) {
","/lib/props/deterioration.c":"int GetBroken(){
int SetBroken(int x){
int SetDamagePoints(int x){
int GetDamagePoints(){
int GetDeterioration(){
string GetItemCondition(){
int eventReceiveDamage(mixed agent, int type, int amt, int i, mixed array l){
string array GetSave(){
","/lib/command.c":"static void create(){
static int cmdAll(string args){
string array GetSearchPath(){ return SearchPath; }
int eventExecuteQueuedCommands(){
string GetCommandFail(){ return CommandFail; }
int GetClient(){ return 0; }
string array RemoveSearchPath(mixed val){
string array AddSearchPath(mixed val){
int LimbCertain(string str){
int DoneTrying(){
int eventQueueCommand(string line){
int eventForceQueuedCommand(string cmd){
int cmdDebugAll(string args){
int direct_force_liv_to_str(){ return 1; }
int direct_force_liv_str(){ return 1; }
string GetCurrentCommand(){
int SetPlayerPaused(int i){
int GetPlayerPaused(){
int GetForced(){ return Forced; }
int Setup(){
string SetCommandFail(string str){
varargs int eventRetryCommand(string lastcmd, int errtype, mixed args){
static string process_input(string cmd){
","/lib/events/close.c":"int SetOpen(int x){
int GetOpen(){
varargs mixed CanClose(object who, string id){
mixed eventClose(object who){
mixed direct_open_obj_with_obj(object target, object tool){
int SetClosed(int x){
varargs mixed eventOpen(object who, object tool){
mixed direct_close_obj(object target){
int GetClosed(){
int inventory_visible(){
varargs mixed CanOpen(object who, object tool){
int inventory_accessible(){
","/secure/lib/net/ftp.c":"static void create(int fd, object owner){
void Destruct(){
private void eventReadFtpData(mixed text){
nomask static int check_privs(string file, string oper) {
string GetKeyName(){ return Session->user; }
void StartService(){
private void eventCmdRmd(string arg) {
void eventCmdPwd(string arg){
private void eventCmdMkd(string arg){
private void eventCmdCwd(string arg){
private void eventCmdSyst(string arg) {
private void eventCmdStou(string arg){
private void eventCmdRnto(string arg) {
private void eventCmdRnfr(string arg) {
private void eventCmdDele(string arg){
void eventCmdNoop(string arg){
private void eventCmdPort(string arg){
private void eventCmdType(string arg){
private void eventCmdQuit(string arg){
private void eventCmdCdup(string arg){ eventCmdCwd(\"..\"); }
private void eventCmdList(string arg){
private void eventCmdNlst(string arg){
private void eventCmdStor(string arg){
private void eventCmdRetr(string arg){
private void eventCmdUser(string arg){
private string find_flags(string arg){
private string strip_flags(string arg){
string FindPrevDir( string path ) {
private void idle_time_out(){
private string GetFtpWelcomeMsg(){
string GetUniqueFileName(string arg){
private void eventDestructDataPipe(mixed f){
private void eventCmdPswd(string arg){
string RetrieveCmdCallback(object ob){
private void do_list( string arg, int ltype){
","/lib/cylinder.c":"void create(){
","/lib/events/shoot.c":"varargs mixed direct_shoot_obj_with_obj(mixed args...){
varargs mixed indirect_shoot_obj_with_obj(mixed args...){
varargs mixed indirect_shoot_obj_at_obj(mixed args...){
varargs mixed direct_shoot_liv_with_obj(mixed args...){
varargs mixed indirect_shoot_liv_with_obj(mixed args...){
varargs mixed indirect_shoot_obj_at_liv(mixed args...){
int MustCarry(int i){
int MustWield(int i){
mixed CanShoot(object shooter, mixed target){
mixed eventShoot(mixed shooter, mixed target){
","/lib/combatmsg.c":"static mixed GetMissData(object targ, int type, string limb){
mixed GetCombatVerbs(string type, int damage){
varargs void SendWeaponMessages(object target, int x, object weapon, string limb){
mixed GetCombatMove(string type, int skill){
varargs void SendMeleeMessages(object target, int x, string targlimb, string limb){
static void eventSendMissMessages(object target, int x, string limb){
","/verbs/items/give.c":"static void create() {
mixed can_give_liv_obj(mixed args...) {
mixed can_give_obj_to_liv(mixed args...) {
mixed can_give_liv_wrd_wrd(object targ, string num, string curr) {
mixed can_give_wrd_wrd_to_liv(string num, string curr, object targ) {
mixed do_give_liv_obj(mixed args...) {
mixed do_give_obj_to_liv(mixed args...) {
mixed do_give_liv_wrd_wrd(object target, string num, string curr) {
mixed do_give_wrd_wrd_to_liv(string num, string curr, object target) {
mixed do_give_liv_obs(object target, mixed array items) {
mixed do_give_obs_to_liv(mixed array items, object target) {
mixed can_give_obj_liv(mixed args...) {
mixed do_give_obj_liv(mixed args...) {
mixed do_give_obs_liv(mixed array items, object target) {
","/lib/events/listen.c":"mixed direct_listen_to_str_word_obj(string str){
varargs mixed eventListen(object who, string str){
mixed direct_listen_to_obj(){
mixed direct_listen_obj(){
string array GetListens(){
mapping GetListenMap(){
varargs mixed SetListen(mixed array args...){
mapping RemoveListen(string item){
","/lib/props/damage.c":"int SetDamageType(int x ){
int GetMaxClass(){
int GetClass(){
int eventStrike(object ob){
int GetDamageType(){
int SetClass(int x){
string array GetSave(){
","/secure/sefun/get_cmds.c":"string array get_cmds(){
","/verbs/rooms/cast.c":"static void create() {
string GetHelp(string str) {
mixed can_cast_obj(object ob) {
mixed do_cast_obj(object ob) {
","/verbs/items/throw.c":"static void create() {
void eventThrow(object who, object what, object where) {
mixed do_throw_obj_word_obj(object what, string word, object where) {
mixed can_throw_obj() {
mixed can_throw_obj_word_obj() {
","/verbs/players/drive.c":"static void create() {
mixed can_drive_into_str(string str) {
mixed can_drive_str(string str) {
mixed do_drive_str(string str) {
mixed do_drive_into_str(string str) {
","/lib/burn.c":"static void create(){
mixed eventLight(object who, object what){
mixed direct_light_obj(){
static void heart_beat(){
mixed indirect_burn_obs_with_obj(object array targets, object source){
mixed direct_burn_obj_with_obj(){
mixed indirect_light_obs_with_obj(object array targets, object source){
mixed indirect_light_obj_with_obj(object target, object source){
mixed indirect_burn_obj_with_obj(object target, object source){
static int SetHeat(int x){
mixed CanBurn(object who){
int GetHeat(){
mixed eventExtinguish(){
int GetBurning(){
int GetBurnRate(){
static int SetBurnRate(int x){
int GetBurntValue(){
static int SetBurntValue(int x){
int GetFuelRequired(){
static int SetFuelRequired(int x){
int GetMinHeat(){
static int SetMinHeat(int x){
mixed CanExtinguish(object who){
mixed direct_extinguish_obj(){
mixed eventBurnOut(){
","/lib/quest.c":"void create(){
void AddPartyQuest(string title, string desc){
void AddQuest(string title, string desc){
int SetQuestPoints(int i){
int GetQuestPoints(){ return QuestPoints; }
int AddQuestPoints(mixed x){
void AddQuestSkillPoints(string skill, int amount){
void AddQuestStatPoints(string stat, int amount){
void AddQuestCurrency(string type, int amount){
mixed array GetQuests(){
mapping RemoveQuest(string str){
","/secure/sefun/get_verbs.c":"string array get_verbs(){
","/secure/lib/net/web_client.c":"","/lib/std/wound.c":"void create(){
string GetAffectLong(object ob) {
mixed CanGet(object ob) { return \"#Your hands slip on the gunshot wounds.\";}
mixed CanDrop(object ob) { return \"#Your hands slip on the gunshot wounds.\";}
void heart_beat(){
string WoundLong(){
","/verbs/items/fill.c":"static void create() {
mixed can_fill_obj_with_obj(string verb) { return this_player()->CanManipulate(); }
mixed can_fill_obj_from_obj(string verb) { return this_player()->CanManipulate(); }
mixed do_fill_obj_with_obj(object to, object from) {
mixed do_fill_obj_from_obj(object to, object from) {
","/verbs/builders/copy.c":"static void create() {
mixed do_copy_obj_str(object ob, string str) {
mixed can_copy_obj_str(object ob, string str) { return 1; }
mixed can_copy_str(string str) { return 1; }
mixed do_copy_str(string str) {
","/verbs/items/free.c":"static void create() {
mixed can_free_liv_from_obj() {
mixed do_free_liv_from_obj(object target, object tool) {
","/lib/flask.c":"static void create(){
string GetExternalDesc(){
mixed CanDrink(object who, string what){
varargs mixed eventDrink(object who, object target, string foo){
mixed GetStrength(){ return FlaskStrength; }
int GetMealType(){ return MealType; }
int SetMealType(int x){ return (MealType = x); }
int SetStrength(int x){ return (FlaskStrength = x); }
mixed eventPour(object who, object from){
varargs mixed eventEmpty(object who){
mixed eventFill(object who, object from){
int direct_pour_obj_out(){ return 1;}
int direct_pour_out_obj(){ return 1;}
int direct_empty_obj(){ return 1;}
mixed indirect_drink_from_obj(){
int CanFillMe(){
int CanFillOther(){
int SetTapped(int x){ return (Tapped = x); }
mixed GetTapped(){ return Tapped; }
int SetFlaskUses(int x){ return (FlaskUses = x); }
int GetFlaskUses(){ return FlaskUses; }
int SetEverFill(int x){ return (EverFill = x); }
int GetEverFill(){ return EverFill; }
int SetMaxFlask(int x){ return (MaxFlask = x); }
int GetMaxFlask(){ return MaxFlask; }
string GetFlaskContents(){ return FlaskContents; }
string SetFlaskContents(string str){
int indirect_fill_obj_with_obj(){ return 1;}
int direct_fill_obj_from_obj(){ return 1;}
int indirect_pour_obj_into_obj(){ return 1;}
int indirect_fill_obj_from_obj(){ return 1;}
int direct_pour_from_obj_into_obj(){ return 1;}
int indirect_pour_from_obj_into_obj(){ return 1;}
","/lib/round.c":"void create(){
varargs mixed eventLoad(object who, object where){
varargs mixed eventUnload(object where){
int GetCaliber(){ return caliber; }
int GetMillimeter(){ return millimeter; }
string GetAmmoType(){ return ammotype; }
string GetFirearmType(){ return firearmtype; }
int SetCaliber(int x){ caliber=x; return 1; }
int SetMillimeter(int x){ millimeter=x; return 1; }
int SetFirearmType(string str){firearmtype=str; return 1; }
int SetAmmoType(string str){ammotype=str; return 1; }
int SetRifleType(string str){rifletype=str; return 1; }
string GetRifleType(){ return rifletype; }
","/verbs/items/judge1.c":"static void create() {
mixed can_judge_obj_to_obj() {
int eventJudge(object caster, object obj1, object obj2, int level) {
mixed do_judge_obj_to_obj(object obj1, object obj2) {
","/secure/sefun/expand_keys.c":"mapping expand_keys(mapping mp) {
","/verbs/rooms/swim.c":"static void create() {
mixed do_swim() {
int StaminaCost(){
mixed can_swim() {
mixed can_swim_str(string str) {
mixed can_swim_into_str(string str) {
mixed do_swim_str(string str) {
mixed do_swim_into_str(string str) {
","/verbs/players/abandon.c":"static void create() {
mixed can_abandon_liv() { return 1; }
mixed do_abandon_liv(object ob) {
","/lib/events/give.c":"mixed direct_give_obj_liv(object what, object target){
mixed indirect_give_liv_obj(object target){
mixed direct_give_obj_to_liv(object what, object target){
","/verbs/items/wear.c":"static void create() {
mixed can_wear_obj() {
mixed can_wear_obj_on_str(string str) {
mixed do_wear_obj(object ob) {
mixed do_wear_obj_on_str(object ob, string str) {
mixed do_wear_obs(object array armors) {
","/lib/interactive.c":"string GetShort(){
int GetRadiantLight(int ambient){
static void create(){
int eventDestruct(){
string SetShort(string str){
string GetName(){ return object::GetName(); }
string array GetId(){ return UserId; }
string GetKeyName(){ return object::GetKeyName(); }
string SetCapName(string str){
varargs string array SetId(string array bogus){
string SetKeyName(string str){
string SetLong(string str){
varargs int GetInvis(object ob){ return object::GetInvis(ob); }
varargs string GetLong(){
int Setup(){
string query_cwd(){ return interface::query_cwd(); }
int eventMove(mixed dest){
static void net_dead(){
void eventReconnect(){
string get_path(){
mixed array GetCommands(){
int GetBriefMode(){ return Brief; }
int cmdQuit(){
mixed CanGet(){
void SetLastError(mapping m){
mapping GetLastError(){
int GetAge(){
void SetNews(string type, int sz){ News[type] = sz; }
int GetNews(string type){ return News[type]; }
void SetRank(string str){ Rank = str; }
string GetRank(){ return Rank; }
mixed CanDivorce(){
mixed CanMarry(){
mixed eventDivorce(){
mixed eventMarry(object who, object to_whom){
void cmdParseRefresh(){
int GetBirth(){ return BirthTime - (YEAR array  18); }
void SetEmail(string str){
string GetEmail(){
int GetLoginTime(){ return LoginTime; }
void SetPassword(string str){
string GetPassword(){
void SetRealName(string str){
string GetRealName(){ return RealName; }
int SetBriefMode(int x){ return (Brief = x); }
int SetWhereBlock(){ return (WhereBlock = !WhereBlock); }
int GetWhereBlock(){ return WhereBlock; }
void move_or_destruct(){
string GetSpouse(){
int SetRescueBit(int i){
string GetHostSite(){
string GetWebPage(){
string SetWebPage(string page){
","/secure/sefun/wipe_inv.c":"int wipe_inv(mixed dude){
","/secure/sefun/user_exists.c":"int user_exists(string str) { return (int)master()->player_exists(str); }
","/secure/sefun/names.c":"string convert_name(string str) {
string array query_names(object whom) {
int answers_to(string name, object what){
varargs string query_unique_name(mixed ob, int cloned){
","/lib/events/wear.c":"mixed direct_remove_obj(){
mixed direct_wear_obj(){
mixed direct_wear_obj_on_str(object target, string str){
","/verbs/creators/codesay.c":"static void create() {
string GetHelp(string str) {
mixed can_codesay() { return \"Say what?\"; }
mixed can_codesay_str(string str) {
varargs mixed do_codesay_str(string str) {
","/verbs/items/install.c":"static void create() {
mixed can_install_obj_word_obj(mixed foo) {
mixed do_install() {
varargs mixed do_install_obj(mixed foo) {
varargs mixed do_install_obj_word_obj(mixed foo, mixed wort, mixed foo2) {
","/lib/virtual/virt_sky.c":"varargs static void create(int x, int y,int z){
mixed eventReceiveObject(object ob){
mixed CanFly(object who, string dir){
mixed eventFly(object who, string dir){
varargs static void Setup(int x, int y,int z){
string GetGround(){
string SetGround(string str){
mixed GetPreventLand(){
mixed SetPreventLand(mixed val){
","/verbs/rooms/climb.c":"static void create() {
mixed do_climb_word_obj(string word, object ob) {
mixed can_climb_obj() {
mixed can_climb_word_obj() {
mixed can_climb_out_of_obj() {
mixed do_climb_obj(object ob) {
mixed do_climb_out_of_obj(object ob) {
","/verbs/rooms/fish.c":"static void create() {
mixed can_fish_with_obj() {
mixed do_fish_with_obj(object ob) {
","/verbs/items/poison.c":"static void create() {
void eventPoison(object who, object target, object agent) {
mixed can_poison_obj_with_obj(string verb) { return this_player()->CanManipulate(); }
mixed do_poison_obj_with_obj(object target, object agent) {
","/secure/sefun/parse_objects.c":"object parse_objects(object where, string str) {
","/lib/props/body_mass.c":"int GetMass(){
int GetBodyMass(){
int AddBodyMass(int x){
int SetBodyMass(int x){
int GetWeight(){
","/lib/events/activate.c":"int direct_activate_obj_on_obj(object target){
int direct_deactivate_obj_on_obj(object target){
","/secure/lib/net/socket.c":"static void create(int fd, object owner) {
int eventDestruct(){
varargs static int eventWrite(mixed data, int close) {
int eventRead(mixed data) {
int GetDescriptor() {
int eventSocketClosed() {
string GetAddress() {
static int eventCloseSocket() {
","/secure/sefun/translate.c":"string translate(string str, int prof) {
","/secure/sefun/local_time.c":"string set_tz(string str){
varargs mixed local_time(mixed val){
mixed local_ctime(int i){
int valid_timezone(string str){
varargs string system_month(int i, int abbr){
varargs string system_day(int i, int abbr){
string query_tz(){
","/lib/comp/holder.c":"int SetOpacity(int x){
int GetOpacity(){
varargs string GetInternalDesc(){
mixed inventory_visible(){
int CanReceive(object ob){
int eventReceiveObject(object ob){
int eventReleaseObject(object ob){
static void eventLoadInventory(){
static void create(){
static mixed array AddSave(mixed array vars){
int SetSaveRecurse(int x){
int isBag(){
","/lib/door.c":"static void create(){
varargs mixed eventClose(object who){
varargs int eventOpen(object who, object tool){
string GetDefiniteShort(){
varargs string array SetKeys(string side, mixed array args...){
mixed CanLock(object who, string foo){
string array GetKeys(string side){ return Sides[side][\"Keys\"]; }
mixed CanUnlock(object who){
varargs mixed eventLock(object who, mixed key, mixed foo){
mixed eventUnlock(object who, object key){
varargs mixed eventKnock(object who, mixed what){
varargs mixed eventScratch(object who, mixed what){
mixed SetLong(string side, mixed long){
void SetSide(string side, mapping mp){
string array GetId(string side){
varargs string GetShort(string side){
int SetOpacity(int x){
int GetOpacity(){
int GetHiddenDoor(){
varargs string array SetId(string side, mixed array args...){
int eventRegisterSide(string side){
mixed SetShort(string side, mixed short){
string GetLong(string side){
int CanPeer(){
string array GetSides(){
int SetLockable(string side, int x){
int GetLockable(string side){
object array GetRooms(string side){ return Sides[side][\"Rooms\"]; }
int GetPerforated(){
int SetPerforated(int x){
int SetHiddenDoor(int i){
int get_closed(){ return GetClosed(); }
","/lib/fish.c":"static void create(){
string GetFood(){ return Food; }
string SetFood(string str){ return (Food = str); }
int eventCatch(object who){ return 1; }
int SetFight(int x){ return (Fight = x); }
int GetFight(){ return Fight; }
","/lib/events/jump.c":"varargs mixed AddJump(string name, mixed saute, int type){
varargs mixed direct_jump_word_word_obj(mixed args...){
mixed CanJump(object who, string id, int type){
mixed eventJump(object who, string id, int type){
mapping GetJumps(){
mixed direct_jump_word_obj(string prep, object target, string id){
","/lib/post_office.c":"static void create(){
int CanReceive(object ob){
int eventReleaseObject(object foo){
mixed CanMail(object who, string args){
mixed eventMail(object who, string args){
","/verbs/players/backstab.c":"static void create() {
mixed can_backstab_liv() {
mixed do_backstab_liv(object ob) {
int eventBackstab(object backstabber, object target) {
int eventStab(object backstabber, object target, object weapon) {
int eventPrintDamage(object backstabber, object target, object weapon, int percentDamage) {
","/verbs/items/skin.c":"static void create() {
static void eventSkin(object who, object tool, object target, object check) {
varargs static void eventPrepareSkin(object who, object tool, object what) {
mixed can_skin_with_obj(object tool) {
mixed can_skin_obj_with_obj(object corpse, object tool) {
mixed do_skin_obj_with_obj(object what, object ob, string id) {
","/verbs/players/stealth.c":"static void create() {
mixed do_stealth() {
mixed can_stealth() {
mixed can_stealth_wrd() {
mixed do_stealth_wrd(string args) {
int eventStealth(object caster, string args, int skill) {
","/verbs/items/drop.c":"static void create() {
mixed can_drop_obj(object ob) { return this_player()->CanManipulate(); }
mixed can_drop_wrd_wrd(mixed args...) {
mixed do_drop_obj(object ob) {
mixed do_drop_obs(mixed array res) {
mixed do_drop_wrd_wrd(mixed args...) {
","/lib/virtual/virt_subsurface.c":"varargs static void create(int x, int y,int z){
mixed eventReceiveObject(object ob){
varargs static void Setup(int x, int y,int z){
string GetGround(){
string SetGround(string str){
","/verbs/players/lead.c":"static void create() {
mixed can_lead_liv() { return 1; }
mixed do_lead_liv(object ob) {
","/lib/events/touch.c":"static void create(){
mixed direct_touch_str_word_obj(string str){
string array GetTouches(){
varargs mixed eventTouch(object who, string str){
mixed direct_touch_obj(){
varargs mixed SetTouch(mixed array args...){
mapping RemoveTouch(string item){
","/verbs/players/sit.c":"static void create() {
mixed do_sit(){
mixed can_sit_down() {
mixed can_sit_up() {
mixed can_sit_word_obj() {
mixed can_sit_down_word_obj() {
mixed do_sit_down() {
mixed do_sit_up() {
mixed do_sit_word_obj(string word, object target) {
mixed do_sit_down_word_obj(string word, object target) {
","/lib/std/daemon.c":"static void create(){
int eventDestruct(){
string GetSaveFile(){
static string SetSaveFile(string str){
varargs int eventSave(int save_zero_values){
varargs int eventRestore(int do_not_zero_out){
","/lib/sentient.c":"static void create(){
static void heart_beat(){
static int ContinueHeart(){
mixed eventTalkRespond(object who, object targ, int cls, string msg, string lang){
mixed AddConsultResponse(string str, mixed val){
mapping GetConsultResponses(){
int RemoveConsultResponse(string str){
mapping SetConsultResponses(mapping mp){
mixed AddCommandResponse(string str, mixed val){
mapping GetCommandResponses(){
int RemoveCommandResponse(string str){
mapping SetCommandResponses(mapping mp){
mixed AddEmoteResponse(string verb, mixed val){
mapping GetEmoteResponses(){
int RemoveEmoteResponse(string verb){
mapping SetEmoteResponses(mapping mp){
mixed AddRequestResponse(string str, mixed val){
mapping GetRequestResponses(){
int RemoveRequestResponse(string str){
mapping SetRequestResponses(mapping mp){
mixed AddTalkResponse(string str, mixed val){
int RemoveTalkResponse(string str){
mapping GetTalkResponses(){
mapping SetTalkResponses(mapping mp){
int SetSpellChance(int i){
int GetSpellChance(){
varargs int SetWander(int speed, mixed array path, int recurse){
mixed array GetWanderPath(){
mixed array SetWanderPath(mixed array path){
int GetWanderRecurse(){
int SetWanderRecurse(int x){
int GetWanderSpeed(){
int SetWanderSpeed(int x){
int SetPermitLoad(mixed i){
int GetPermitLoad(){
mixed eventAsk(object who, string str){
mixed eventConsult(object who, string str){
mixed eventRequest(object who, string str){
mixed eventWander(){
varargs mixed eventReceiveEmote(object who, string verb, string info){
","/verbs/items/wield.c":"static void create() {
string array GetFreeLimbs(object who) {
mixed can_wield_obj() {
mixed can_wield_obj_word_str() {
mixed do_wield_obj(object ob) {
mixed do_wield_obj_word_str(object ob, string word, string str) {
mixed do_wield_obs(mixed array targs) {
","/lib/trainer.c":"static void create(){
static void init(){
int eventTrain(object who, string verb, string skill){
int SetNoSpells(int i){
mixed AddTrainingSkills(string array args){
int eventComplete(object who, string skill){
mapping GetStudents(){ return copy(Students); }
int eventHelp(object who, string unused){
int eventStart(object who, string skill){
int eventContinue(object who, string skill, int x){
string Expertise(){
mixed RemoveTrainingSkills(string array args){
string array GetTrainingSkills(){ return copy(TrainingSkills); }
static int ContinueTraining(object who, string skill, int x){
int GetNoSpells(){
","/secure/sefun/wild_card.c":"string array wild_card(string str) {
nomask int remove_dots(string str){
","/lib/props/carry.c":"int GetMaxCarry(){
int AddCarriedMass(int x){
int SetMaxCarry(int x){
int GetLivingMaxCarry(){
int CanCarry(int amount){
int GetCarriedMass(){
int GetCarriedWeight(){
","/lib/meal.c":"string GetShort(){ return item::GetShort(); }
static void create(){
int eventDestruct(){ return item::eventDestruct(); }
static mixed AddSave(mixed array vars){ return item::AddSave(vars); }
int GetValue(){
int eventPoison(object who, object agent, int x){
mixed eventDrink(object who){
mixed eventEat(object who){
int GetStrength(){ return MealStrength; }
int GetMealType(){ return MealType; }
int SetMealType(int x){
int SetStrength(int x){ return (MealStrength = x); }
string GetEmptyName(){ return EmptyName; }
string SetEmptyName(string str){ return (EmptyName = str); }
string GetEmptyItem(){ return EmptyItem; }
string SetEmptyItem(string file){ return (EmptyItem = file); }
mixed direct_eat_obj(){
mixed SetEmptyShort(mixed val){ return (EmptyShort = val); }
mixed GetEmptyShort(){ return EmptyShort; }
mixed SetEmptyLong(mixed val){ return (EmptyLong = val); }
mixed GetEmptyLong(){ return EmptyLong; }
varargs void SetMealMessages(mixed array val...){
int SetMealAction(function f){
mixed array GetMealMessages(){ return ({ MyMessage, OtherMessage }); }
mixed direct_drink_obj(){
mixed direct_drink_from_obj(){
","/lib/std/table.c":"int CanGet(object who){
void create(){
void init(){
","/verbs/items/open.c":"static void create() {
mixed can_open_obj_with_obj(string verb, string id1, string id2) {
varargs mixed do_open_obj(object ob, mixed array args...) {
varargs mixed do_open_obj_with_obj(object ob, object with, mixed array args...) {
","/secure/lib/net/telnet_client.c":"static void create()
void init()
string help()
void write_callback( int fd )
void read_callback( int fd, mixed message )
void close_callback( int fd )
int do_connect(string args)
int do_reset( string args )
int do_reconnect()
int parse_comm( string str )
","/lib/events/drop.c":"mixed GetPreventDrop(){
mixed SetPreventDrop(mixed val){
int GetDestructOnDrop(){
int SetDestructOnDrop(int val){
mixed direct_drop_obj(object target){
mixed CanDrop(object who){
","/lib/props/inventory.c":"static void eventLoadInventory(){
mapping SetInventoryCheck(mapping newmap){
static void eventLoadItem(string file, mixed args, int count){
mapping GetInventory(){
void heart_beat(){
varargs void reset(){
","/lib/domesticate.c":"mixed direct_untrain_liv_to_str(){
mixed direct_command_liv_to_str(){
object GetMountOwner(){
int CanTrain(){
mixed direct_train_liv_to_str(){
mixed direct_befriend_liv(){
object SetMountOwner(object who){
int SetCanBefriend(int i){
int SetCanTrain(int i){
int CanAbandon(object who){
mixed direct_abandon_liv(){
int CanUnTrain(){
int SetCanCommand(int i){
int eventBefriend(object who){
int eventAbandon(object who){
varargs int eventTrainLiving(object who, string what){
varargs int eventUnTrainLiving(object who, string what){
string array GetTrainedSkilles(){
string array SetTrainedSkills(string array skills){
string eventCommandNPC(object who, string cmd){
","/lib/events/dig.c":"mixed CanDig(object who){
int RemoveDig(){
mixed eventDig(object who, object tool){
mixed direct_dig_obj_with_obj(){
mixed SetDig(mixed val){
mixed GetDig(){
","/verbs/builders/initfix.c":"static void create() {
mixed can_initfix_obj(string str) {
mixed do_initfix_obj(object ob) {
mixed do_initfix_word(string wrd) {
mixed can_initfix_word(string str) { return can_initfix_obj(\"foo\"); }
","/verbs/items/put.c":"static void create() {
mixed can_put_wrd_wrd_word_obj(mixed args...) {
mixed can_put_obj_word_obj(object target, string wrd, object storage) {
mixed do_put_obj_word_obj(object what, string wrd, object storage) {
mixed do_put_obs_word_obj(mixed array res, string wrd, object storage) {
mixed can_put_obs_word_obj(object array foo1, string wrd, object foo2) {
mixed can_put_obs_obj(object array foo1, string wrd, object foo2){
mixed can_put_obj_obj(object target, string wrd, object storage){
mixed do_put_obj_obj(object what, object storage){
mixed do_put_obs_obj(mixed array res, object storage){
mixed do_put_wrd_wrd_word_obj(mixed args...) {
mixed eventCheckLight(object who) {
","/lib/bank.c":"static void create(){
void init(){
mixed teller_check(){
int HandleTeller(string str){
","/secure/sefun/dummy.c":"","/lib/events/swim.c":"mixed direct_swim_into_str(string str){
mixed direct_swim_str(string str){
","/lib/pager.c":"static int Page(mixed tmpfile){
string GetHelp(string str){
varargs mixed eventPage(mixed val, mixed msg_class, function f,mixed args...){
varargs static private void RazzleDazzle(mixed args...){
static private string GetPagerPrompt(mapping file){
mixed more(mixed val, string cl, function f, mixed args){
static void cmdPage(string str, mapping file){
","/verbs/players/stand.c":"static void create() {
mixed can_stand_up() {
mixed do_stand_up() {
","/verbs/items/donate.c":"static void create() {
mixed can_donate_str_str_to_str(string amount, string currency, string foo){
mixed do_donate_str_str_to_str(string amount, string currency, string foo){
","/lib/flashlight.c":"string GetShort(){
int CanReceive(object ob){
void heart_beat(){
void create(){
void init(){
int eventTurnOn(object ob){
varargs mixed eventTurnOff(string str){
int eventDie(){
int eventUse(int i){
int SetHB(int i){
int flicker(){
mixed eventExtinguish(){
mixed eventLight(){
int GetHB(){
void regetID(){
void SetLightLevel(int i){
int eventRadiate(int i){
int SetMaxCells(int i){ maxcells = i; return i; }
int GetMaxCells(){ return maxcells; }
int SetMinCells(int i){ mincells = i; return i; }
int GetMinCells(){ return mincells; }
int SetCellType(string str){celltype=str; return 1; }
string GetCellType(){ return celltype; }
int SetDrainRate(int i){
int CheckPower(){
int GetLightLevel(){
","/lib/lvs/level.c":"int collect_moduli(int mod, int array range){
varargs int ChangeLevel(int i){
","/verbs/players/pray.c":"static void create() {
mixed can_pray_for_str_against_str(string spell) {
mixed can_pray_for_str_for_obj(string spell) {
mixed can_pray_for_str_against_str_for_liv(string spell) {
mixed do_pray_for_str_against_str(string spell, string ag) {
mixed do_pray_for_str_against_str_for_liv(string spell, string ag, object tg) {
mixed parse_spell(string spell){
mixed do_pray_for_str_for_obj(string spell, object ob) {
","/secure/sefun/findobs.c":"mixed array findobs(mixed arg){
mixed find_inheritors(mixed arg){
mixed find_deep_inheritors(mixed arg){
","/secure/lib/net/h_ftpd.c":"static void create(int fd, object owner){
void Destruct(){
private void eventReadFtpData(mixed text){
nomask static int check_privs(string file, string oper) {
string GetKeyName(){ return Session->user; }
void StartService(){
private void eventCmdRmd(string arg) {
void eventCmdPwd(string arg){
private void eventCmdMkd(string arg){
private void eventCmdCwd(string arg){
private void eventCmdSyst(string arg) {
private void eventCmdStou(string arg){
private void eventCmdRnto(string arg) {
private void eventCmdRnfr(string arg) {
private void eventCmdDele(string arg){
void eventCmdNoop(string arg){
private void eventCmdPort(string arg){
private void eventCmdType(string arg){
private void eventCmdQuit(string arg){
private void eventCmdCdup(string arg){ eventCmdCwd(\"..\"); }
private void eventCmdList(string arg){
private void eventCmdNlst(string arg){
private void eventCmdStor(string arg){
private void eventCmdRetr(string arg){
private void eventCmdUser(string arg){
private string find_flags(string arg){
private string strip_flags(string arg){
string FindPrevDir( string path ) {
private void idle_time_out(){
private string GetFtpWelcomeMsg(){
string GetUniqueFileName(string arg){
private void eventDestructDataPipe(mixed f){
private void eventCmdPswd(string arg){
string RetrieveCmdCallback(object ob){
private void do_list( string arg, int ltype){
private void eventCmdPasv(string arg)
","/secure/sefun/sefun.c":"varargs string socket_address(mixed arg, int foo){
string base_name(mixed val){
int destruct(object ob) {
object query_snoop(object ob) {
object query_snooping(object ob) {
mixed copy(mixed val){
int exec(object target, object src) {
object array livings() {
void write(string str) {
string debug_info(int debuglevel, mixed arg){
void set_eval_limit(int i){
string array groups(){
string array efuns(){
string array sefuns(){
void set_privs(object ob, string str) { return; }
varargs void shutdown(int code) {
string array query_local_functions(mixed arg){
int efun_exists(string str){
int sefun_exists(string str){
varargs mixed present_bonus(mixed str, mixed ob, int i){
mixed array users(){
varargs int call_out(mixed fun, mixed delay, mixed args...){
varargs object clone_object(string name, mixed args...){
varargs string read_file(string file, int start_line, int number_of_lines){
string check_memory(int flag){
string dump_file_descriptors(){
void reset_eval_cost(){
string query_ip_name(object ob){
object find_object( string str ){
object find_player( string str ){
int valid_snoop(object snooper, object target){
void notify_fail(string str) {
string capitalize(mixed str) {
int query_charmode(object ob){
varargs void input_to(mixed fun, int flag, mixed args...){
varargs mixed file_present_logic(string str, object ob, int i){
varargs mixed present_file(mixed str, mixed ob, int i){
mapping rusage(){
varargs mixed objects(mixed arg1, mixed arg2){
","/lib/props/value.c":"int GetDestroyOnSell(){
int SetDestroyOnSell(int x){
varargs int GetValue(string str){
int SetValue(mixed y){
varargs mixed SetBaseCost(mixed arg, int i){
int GetVendorType(){
int SetVendorType(int x){
int GetBaseCost(string str){
int SetDollarCost(int x){
string array GetSave(){
","/lib/std/boobytrap_object.c":"void create(){
void init(){
string GetShadowObject(){
varargs int eventBoobytrap(object who, mixed target, mixed trap){
varargs mixed CanBoobytrap(object who, mixed what){
string SetShadowObject(string str){
int SetTrapType(int i){
int GetTrapType(){
int SetAutoResets(int i){
int GetAutoResets(){
","/verbs/players/cast.c":"static void create() {
mixed can_cast_str_against_str(string spell) {
mixed can_cast_str_on_str_of_str(string spell) {
mixed do_cast_str_on_str_of_obj(string spell, string limb, object target) {
mixed can_cast_str_on_obj(string spell) {
mixed do_cast_str_on_obj(string spell, object target) {
mixed do_cast_str_against_str(string spell, object target) {
","/verbs/items/roll.c":"static void create() {
mixed do_roll() {
mixed can_roll() {
mixed can_roll_obj_here() {
varargs mixed can_roll_obj_on_obj(mixed arg1, mixed arg2, mixed arg3, mixed arg4) {
varargs mixed can_roll_obj_on_str(mixed arg1, mixed arg2, mixed arg3, mixed arg4) {
varargs mixed can_roll_str_on_obj(string foo, object where, string arg1, string arg2) {
varargs mixed do_roll_obj(mixed arg1, mixed arg2, mixed arg3, mixed arg4) {
varargs mixed do_roll_obj_here(mixed arg1, mixed arg2, mixed arg3, mixed arg4) {
varargs mixed do_roll_obj_on_obj(mixed arg1, mixed arg2, mixed arg3, mixed arg4) {
varargs mixed do_roll_obs(mixed arg1, mixed arg2, mixed arg3, mixed arg4){
varargs mixed do_roll_obs_here(mixed arg1, mixed arg2, mixed arg3, mixed arg4) {
varargs mixed do_roll_obs_on_obj(mixed arg1, mixed arg2, mixed arg3, mixed arg4){
varargs mixed do_roll_obj_on_str(mixed arg1, mixed arg2, mixed arg3, mixed arg4) {
varargs mixed do_roll_obs_on_str(mixed arg1, mixed arg2, mixed arg3, mixed arg4){
varargs mixed do_roll_str_on_obj(string foo, object where, string arg1, string arg2) {
","/lib/torch.c":"static void create(){
string GetShort(){
varargs string GetLong(string unused){
int GetRadiantLight(int ambient){
int direct_pray_for_str_for_obj(){ return 1; }
","/lib/mount.c":"int GetMount(){ return Mount; }
mixed direct_dismount_from_liv(){
mixed eventBuck(object who){
mixed eventMount(object who){
int SetMount(int x){
object array RemoveRider(object ob){
object array AddRider(object ob){
int eventRide(string direction){
mixed direct_dismount_liv(){
mixed direct_mount_liv(){
mixed direct_ride_word_str(){
mixed direct_ride_str(){
object array GetRiders(){
mixed eventDismount(object who){
","/secure/sefun/domains.c":"int domain_exists(string dmn) {
object domain_master(mixed val) {
","/lib/history.c":"static string Push(string cmd){
string GetLastCommand(){
mapping GetHistoryList(){
static string eventHistory(string str){
mapping GetCommandHist(){
int GetCommandNumber(){
int SetHistorySize(int x){
int GetMaxCommandHistSize(){
int SetMaxCommandHistSize(int i){
","/verbs/items/pull.c":"static void create() {
mixed can_pull_obj() {
mixed can_pull_str_on_obj() {
mixed can_pull_str_from_obj() {
mixed do_pull_obj(object target) {
varargs mixed do_pull_str_on_obj(string thing, object target) {
varargs mixed do_pull_str_from_obj(string thing, object target) {
","/lib/std/room.c":"static void create(){
string GetInternalDesc(){
int inventory_visible(){
int CanReceive(object ob){
int eventReceiveObject(object ob){
int eventReleaseObject(object ob){
mixed eventPostRelease(object ob){
mixed CanFly(object who, string dest){
varargs void SetSearch(mixed items, mixed arg){
varargs mixed GetSearch(){
varargs void RemoveSearch(mixed item){
object array GetDummyItems(){
void heart_beat(){
varargs void reset(int count){
varargs void AddItem(mixed item, mixed val, mixed adjectives){
string SetLong(string str){
mapping SetItems(mixed items){
mapping GetItemsMap(){
varargs int eventShow(object who, string args){
mapping RemoveItem(mixed item){
string GetLong(){
mixed SetProperties(mapping mp){
mixed SetProperty(string prop, mixed val){
int GetAmbientLight(){
varargs void SetRead(mixed items, mixed arg){
void RemoveRead(mixed item){
string array GetId(){ return ({}); }
varargs int eventPrint(string msg, mixed arg2, mixed arg3){
string GetClimate(){ return Climate; }
static void init(){
int GetNightLight(){
int GetDayLight(){
int GetShade(){
varargs mixed DestructEmptyVirtual(object ob){
mixed direct_delete_exit_str(){
void CheckActions(){
void SetAction(int chance, mixed val){
mapping GetActionsMap(){
mapping SetActionsMap(mapping ActMap){
int SetFrequency(int tick){
int GetFrequency(){
int GetTerrainType(){
int SetTerrainType(int i){
int AddTerrainType(int i){
int RemoveTerrainType(int i){
static string GetExtraLong(){
mixed CanSwim(object who, string dest){
mixed CanSit(object who, string dest){
int GetResetNumber(){
string GetFlyRoom(){
string GetSinkRoom(){
mixed indirect_delete_exit_str(){
varargs void AddRead(mixed item, mixed val, string lang){
static int SetNightLight(int x){
static int SetDayLight(int x){
int eventMove(){ return 0; }
function SetBury(function what){
function GetBury(){
string SetDayLong(string str){ return (DayLong = str); }
string GetDayLong(){ return DayLong; }
string SetNightLong(string str){ return (NightLong = str); }
string GetNightLong(){ return NightLong; }
string SetClimate(string str){
float SetGravity(float h){ return (Gravity = h); }
float GetGravity(){ return Gravity; }
mapping GetSmellMap(){
mapping GetListenMap(){
mapping QueryMap(string str){
varargs void SetSmell(mixed items, mixed arg){
varargs void SetListen(mixed items, mixed arg){
varargs void AddListen(mixed item, mixed val){
varargs void RemoveListen(mixed item){
int SetMedium(int medium){
int GetMedium(){
int GetClimateExposed(){
int SetNoReplace(int x){ return (NoReplace = x); }
int GetNoReplace(){ return NoReplace; }
int GetPlayerKill(){
int SetPlayerKill(int x){
int AddPoisonGas(int x){
int GetPoisonGas(){
int SetPoisonGas(int x){
static int SetShade(int x){
varargs void AddSearch(mixed item, mixed val){
varargs void AddSmell(mixed item, mixed val){
varargs void RemoveSmell(mixed item){
varargs void AddTouch(mixed item, mixed val){
varargs void SetTouch(mixed items, mixed arg){
varargs void RemoveTouch(mixed item){
int CanAttack( object attacker, object who ){
mixed eventBuryItem(object who, object tool, object what){
varargs mixed eventHearTalk(object who, object target, int cls, string verb,
int inventory_accessible(){
int SetNoDefaultExits(int i){
int SetDefaultExits(int i){
int SetCanFly(int i){
int SetCanSwim(int i){
int SetCanStand(int i){
int SetCanSit(int i){
int SetCanKneel(int i){
int SetNoObviousExits(int i){
int GenerateObviousExits(){
string SetFlyRoom(string str){
string SetSinkRoom(string str){
int SetFlowLimit(int i){
int GetFlowLimit(){
int SetRespirationType(int i){
int GetRespirationType(){
void CompileNeighbors(mixed coords){
mixed GetNeighbors(){
mixed GetNeighborCoords(){
mixed GetCoords(){
string GetTown(){ return Town; }
string SetTown(string town){ return (Town = town); }
","/verbs/players/describe.c":"static void create() {
mixed do_describe_str(string str) {
mixed can_describe_str(string str) {
","/verbs/common/body.c":"static void create() {
string GetHelp(string str) {
int livings_are_remote() { return 1; }
mixed do_body() {
mixed can_body() {
mixed can_body_liv() {
mixed do_body_liv(object ob) {
varargs void eventCheckBody(object ob, object receiver) {
","/lib/std/book.c":"void create(){
void init(){
void SetTitle(string title){
void SetSource(string source){
void LoadBook(){
string ReadBook(mixed args...){
string ReadBookIndex(){
mixed GetTitle(){
string GetSource(){
mixed array eventLoadChapters(){
string eventLoadIndex(){
","/secure/lib/net/echo_server.c":"void create(){
static mixed read_callback(int fd, mixed data){
static void close_callback(int fd){
void StartServer(){
static void listen_callback(int fd){
","/lib/spell.c":"static void create(){
string array GetSkills(){
static int SetMorality(int x){
varargs string array GetMessage(int damage, int healing){
string GetVerb(){
varargs int CanCast(object who, int level, string limb, object array targets){
string GetErrorMessage(){
int GetMorality(){
string array GetRules(){
varargs static string array SetRules(mixed args...){
int GetDamageType(){
varargs int eventCast(object who, int level, mixed limb, object array targets){
string GetSpell(){
int GetRequiredMagic(){
int GetRequiredStamina(){
varargs mixed eventParse(object who, mixed array args...){
varargs object array GetTargets(object who, mixed args...){
int GetAutoHeal(){
int GetSpellType(){
int GetRequiredSkill(string skill){
static string SetVerb(string verb){
static mapping SetSkills(mapping mp){
int GetAutoDamage(){
static int SetAutoDamage(int x){
static int SetAutoHeal(int x){
string GetConjure(){
static string SetConjure(string str){
varargs static void SetDamage(int type, mixed array rest...){
int GetDifficulty(){
static int SetDifficulty(int x){
int GetHealing(){
static varargs int array SetHealing(mixed args...){
int GetMagicCost(){
static varargs int array SetMagicCost(mixed args...){
static mixed array SetMessages(mixed array messages){
string array GetReligions(){
varargs static string array SetReligions(string array religions...){
int GetRemoteTargets(){
static int SetRemoteTargets(int x){
static int SetRequiredMagic(int x){
static int SetRequiredStamina(int x){
static string SetSpell(string str){
static int SetSpellType(int x){
int GetStaminaCost(){
static varargs int array SetStaminaCost(mixed args...){
static int SetTrainingModifier(int modifier){
int GetTrainingModifier(){
static int CanSpellAttack(object who, object array enemies, int power){
","/verbs/items/listen.c":"static void create() {
mixed can_listen_to_str_word_obj() {
mixed do_listen_to_str_word_obj(string str, object ob) {
mixed can_listen_obj() {
mixed can_listen_to_obj() {
mixed do_listen_obj(object ob) {
mixed do_listen_to_obj(object ob) {
","/lib/events/dig_with.c":"mixed eventBuryWith(object who, object what){
varargs mixed eventDigWith(object who, object what){
varargs mixed CanDigWith(object who, object what){
mixed direct_dig_with_obj(){
mixed direct_dig_str_with_obj(string what){
mixed direct_bury_str_with_obj(string str){
mixed indirect_bury_obj_with_obj(object what){
mixed indirect_dig_obj_with_obj(object what){
varargs mixed CanBuryWith(object who, object what){
","/verbs/items/deactivate.c":"static void create() {
mixed can_deactivate_obj_on_obj(mixed foo) {
varargs mixed do_deactivate_obj_on_obj(mixed foo, mixed foo2) {
","/lib/events/search.c":"varargs mixed eventSearch(object who, string str){
mapping FoundTraps(){
mixed direct_search_obj(){
string array GetSearches(){
varargs mixed SetSearch(mixed array args...){
mapping GetTraps(){
mapping RemoveSearch(string item){
mixed direct_search_str_word_obj(string str){
","/lib/events/roll.c":"varargs mixed CanRoll(object target, object where){
mixed indirect_roll_obj_on_obj(object target, object where){
mixed indirect_roll_obs_on_obj(mixed target, object where){
mixed direct_roll_obj_here(object target){
mixed direct_roll_obj_on_str(object target, string where){
varargs mixed eventRoll(object ob){
varargs mixed eventResults(mixed args){
","/lib/creator.c":"void eventDescribeEnvironment(int verbose){
int inventory_visible(){ return 1; }
int eventReceiveObject(object foo){
int eventReleaseObject(object foo2){
static void create(){
static int Destruct(){
string GetName(){
varargs int eventShow(object who, string str, string on_id){
mixed direct_look_obj(){ return 1; }
mixed direct_look_at_obj(){ return 1; }
varargs string GetLong(string str){
int Setup(){
static void net_dead(){
void eventReconnect(){
int eventForce(string cmd){
varargs mixed GetEffectiveVision(mixed location, int raw_score){
int inventory_accessible(){ return 1; }
int CanCarry(int amount){ return 1; }
int is_living(){ return 1; }
int eventDie(mixed agent){
varargs mixed CanCast(mixed spell...){
mapping GetSpellBook(){
mixed direct_give_liv_obs(){
mixed direct_marry_liv_to_liv(){
mixed direct_give_liv_obj(){
mixed direct_verb_rule(string verb){
mixed indirect_give_obj_to_liv(object item){
mixed indirect_give_obs_to_liv(object array item){
mixed indirect_marry_liv_to_liv(){
int GetWizVision(){
string GetLivingShort(){
int GetVisibleGrid(){
int GetCreatorBirth(){ return CreatorBirth; }
int GetCreatorAge(){
int SetWizVision(int i){
int SetVisibleGrid(int i){
","/lib/die.c":"int eventMove(mixed dest){
static void create(){
string SetLong(string str){
void init(){
varargs mixed eventRoll(object where){
varargs mixed eventResults(mixed args){
varargs mixed eventShake(object dude, string foo){
varargs mixed CanShake(object who, string component){
varargs mixed eventConsult(object dude, string foo){
varargs mixed CanConsult(object who, string component){
int doRoll(){
int SetDenominator(int denom){
","/lib/events/pull.c":"varargs mixed eventPull(object who, string component){
string array GetPulls(){
varargs mixed CanPull(object who, string component){
mapping RemovePull(string item){
varargs mapping SetPull(mixed key, mixed desc){
mixed direct_pull_str_from_obj(string str, object target){
mixed direct_pull_str_on_obj(string str, object target){
mixed direct_pull_obj(object target){
","/lib/std/barkeep.c":"static void create(){
int CanCarry(int cmt){
int indirect_sell_obj_to_liv(){
mixed CanSell(object who, string item){
string SetLocalCurrency(string str){
mapping SetMenuItems(mapping mp){
mapping GetMenuItems(){
mixed eventSell(object who, string args){
string GetLocalCurrency(){
int GetCost(string array item){
mapping AddMenuItem(mixed item, string file){
mapping RemoveMenuItem(string item){
mixed eventBuyItem(object who, string cmd, string item){
int eventList(object who, string cmd, string args){
","/lib/currency.c":"static void create(){
string array GetCurrencies(){ return keys(Currency); }
int AddCurrency(string type, int amount){
int GetBank(string bank, string type){
int AddBank(string bank, string type, int amount){
int GetCurrency(string type){ return Currency[type]; }
mapping GetCurrencyMap(){ return copy(Currency); }
varargs int GetNetWorth(string benjamins){
mapping GetAccountInfo(string bank){
varargs int GetCurrencyMass(string type){
void ResetBank(){ Bank = ([]); }
void ResetCurrency(){ Currency = ([]); }
","/secure/sefun/this_agent.c":"varargs object this_agent(mixed val) {
","/lib/clerk.c":"void create(){
mixed performMarriage(object spouse1, object spouse2){
int performDivorce(object ob1){
int MarriageRequest(mixed arg1, mixed arg2, mixed arg3){
int eventRequestDivorce(mixed arg1, mixed arg2, mixed arg3){
","/lib/blank.c":"","/lib/clay.c":"void create(){
void init(){
varargs string SetComposition(string comp, string name, string array nouns, string array adjs, string
void InitComposition(){
","/verbs/items/shake.c":"static void create() {
mixed can_shake_str_on_obj() {
mixed do_shake_obj(object target) {
varargs mixed do_shake_str_on_obj(string thing, object target) {
mixed can_shake_obj() {
","/secure/sefun/native_version.c":"string native_version() { return \"2.9a14\"; }
","/verbs/items/unload.c":"static void create() {
mixed can_unload() {
mixed can_unload_obj(mixed foo) {
mixed can_unload_obj_word_obj(mixed foo) {
mixed do_unload() {
varargs mixed do_unload_obj(mixed foo) {
varargs mixed do_unload_obj_word_obj(mixed foo, mixed foo2, mixed foo3) {
","/verbs/items/rock.c":"static void create() {
mixed do_rock(){
mixed can_rock(){
mixed can_rock_obj(){
mixed can_rock_wrd_obj(){
mixed can_rock_str_on_obj(){
mixed do_rock_obj(object target){
mixed do_rock_wrd_obj(string wrd, object target){
varargs mixed do_rock_str_on_obj(string thing, object target){
","/secure/sefun/get_object.c":"varargs object get_object( string str, object player, int living )
varargs mixed get_objects( string str, object player, int no_arr )
object array get_dummies(mixed where){
object array get_doors(mixed where){
","/lib/virtual/virtual.c":"int GetVirtualSky(){
int GetExemptVirtual(){
int GetVirtualSea(){
int SetExemptVirtual(int i){
","/verbs/players/ignore.c":"static void create() {
mixed can_ignore(){ return 1; }
mixed can_ignore_liv() { return 1; }
mixed do_ignore(){
mixed do_ignore_liv(object ob) {
mixed do_ignore_lvs(mixed array targets) {
","/lib/light.c":"static void create(){
string GetShort(){
static int SetLit(int x){
int GetLit(){
varargs mixed eventLight(object who, object tool){
mixed CanLight(object who){
mixed direct_light_obj(){
mixed eventDarken(){
","/secure/sefun/rooms.c":"int query_night_light(object ob){
int query_day_light(object ob){
int query_ambient_light(object ob){
int reload_room(object ob){
string opposite_dir(string str){
varargs mixed coordinates(object ob, string type){
mixed calculate_coordinates(string str, int x, int y, int z, string type){
object room_environment(object ob){
float calculate_slope(int x1, int y1, int x2, int y2){
int bearing(int x1, int y1, int x2, int y2){
","/lib/used_meal.c":"static void create(){
","/verbs/players/ride.c":"static void create() {
mixed can_ride_str(string str) {
mixed can_ride_into_str(string str) {
mixed do_ride_str(string str) {
mixed do_ride_into_str(string str) {
","/lib/virtual/virt_map.c":"varargs static void create(string virt_file){
varargs string array BaseMap(){ //override with actual map
int SetVirtFile( string file){
varargs mixed GetAreaMap(int x, int y, int z){
int array GetLocations(string str){return Location[str]; }
varargs mixed SetAreaMap(int y,int x ,int z, string str){
varargs void InitializeLocations(string tmp){
void SwitchLocations(){
int AddLocation(string str, int array where){
int RemoveLocation(string str){
","/lib/help.c":"string GetHelp(string topic){
static mapping SetHelp(mixed val){
","/lib/events/wield.c":"mixed direct_wield_obj_word_str(object target, string wrd, string limb){
mixed direct_unwield_obj(){
","/secure/sefun/generic.c":"varargs int true(mixed args...){
varargs int false(mixed args...){
","/lib/events/rock.c":"varargs mixed eventRock(object who, mixed what){
varargs int CanRock(mixed who, mixed what){
mixed direct_rock_obj(object target){
mixed direct_rock_wrd_obj(object target){
mixed direct_rock_str(string str){
mixed direct_rock_str_on_obj(string str, object target){
","/verbs/items/strike.c":"static void create() {
mixed can_strike_obj() {
mixed do_strike_obj(object ob) {
","/verbs/rooms/fly.c":"static void create() {
mixed can_fly() {
mixed do_fly() {
mixed can_fly_str(string str) {
mixed can_fly_into_str(string str) {
mixed do_fly_str(string str) {
mixed do_fly_into_str(string str) {
int StaminaCost(){
","/lib/teacher.c":"static void create(){
static void init(){
string SetLocalCurrency(string str){
string GetLocalCurrency(){
int eventComplete(object who, string language){
mixed AddTeachingLanguages(string array args){
mixed RemoveTeachingLanguages(string array args...){
string array GetTeachingLanguages(){ return copy(TeachingLanguages); }
mapping GetStudents(){ return copy(Students); }
int eventHelp(object who, string unused){
int eventTeachLanguage(object who, string verb, string language){
static int ContinueTeaching(object who, string language, int x){
int eventStart(object who, string language){
int eventContinue(object who, string language, int x){
int SetAllLanguages(int i){
int GetAllLanguages(){
int GetCommercial(){
int SetCommercial(int i){
int GetTeachingFee(){
int SetTeachingFee(int i){
string Expertise(){
","/lib/events/fly.c":"mixed direct_fly_str(string str){
mixed direct_fly_into_str(string str){
","/verbs/items/unwield.c":"static void create() {
mixed can_unwield_obj(string verb) {
mixed do_unwield_obj(object ob) {
mixed do_unwield_obs(mixed array targs) {
","/verbs/items/get.c":"static void create() {
mixed can_get_wrd_wrd_out_of_obj(mixed args...) {
mixed can_get_wrd_wrd_from_obj(mixed args...) {
mixed do_get_wrd_wrd_out_of_obj(mixed args...) {
mixed eventCheckLight(object who) {
mixed can_get_obj(string verb) {
varargs mixed can_get_obj_out_of_obj(mixed args...) {
mixed can_get_obj_obj(string verb, string rule, mixed item, object container) {
mixed can_get_obs_obj(string verb,string rule,mixed array item,object container){
mixed can_get_obj_from_obj(mixed args...) {
mixed can_get_wrd_out_of_obj(mixed args...) {
mixed can_get_wrd_from_obj(mixed args...) {
mixed do_get_obj(object ob) {
mixed do_get_obj_out_of_obj(object ob, object storage) {
mixed do_get_obj_from_obj(object ob, object storage) {
mixed do_get_obj_obj(object ob, object storage) {
mixed do_get_obs(mixed array targs) {
mixed do_get_obs_out_of_obj(mixed array targs, object storage) {
mixed do_get_obs_from_obj(mixed array obs, object storage) {
mixed do_get_obs_obj(mixed array obs, object storage) {
mixed do_get_wrd_wrd_from_obj(mixed args...) {
mixed do_get_wrd_from_obj(mixed args...) {
mixed do_get_wrd_out_of_obj(mixed args...) {
","/lib/flow.c":"int eventMove(mixed dest){
void create(){
int eventDestruct(){
void init(){
string GetRoomAffectLong(){
void heart_beat(){
void eventFlood(mixed targets){
int GetPressure(){
int AddPressure(int x){
void CheckRooms(){
int SetPressure(int i){
int GetHBOverride(){
int SetHBOverride(int x){
int GetDoorStopped(){
int SetDoorStopped(int i){
void shb(int i){
","/lib/events/bait_with.c":"mixed eventBait(object who, object pole){
int GetBaitStrength(){
int SetBaitStrength(int x){
mixed indirect_bait_obj_with_obj(){
","/lib/missile.c":"void create(){
void init(){
int SetArmed(int x){
int launch(string str){
int SetSpeed(int x){
int GetSpeed(){
int GetRange(){
int SetRange(int x){
mixed eventNegotiateObstacles(){
mixed eventRunOut(){
mixed eventEncounterBlock(){
string SetCruiseInMessage(string str){
string SetCruiseOutMessage(string str){
mixed eventCruiseMessages(object this_room, object next_room, string dir){
void eventDeploy(string str){
","/secure/sefun/absolute_path.c":"string absolute_path(string curr, string newp) {
","/lib/language.c":"mapping RemoveLanguage(string lang){
string GetNativeLanguage(){
int GetNextLevel(string lang, int curr_level){
mixed SetDefaultLanguage(string str){
mapping SetNativeLanguage(string lang){
string array GetLanguages(){
int GetLanguagePoints(string lang){
int AddLanguagePoints(string lang, int points){
string GetLanguageName(string lang){
string GetDefaultLanguage(){
int GetLanguageLevel(string lang){
int GetPolyglot(){
varargs void SetLanguage(string lang, int level, int native){
varargs void SetLanguageComprehension(function check, int time, function end){
static void heart_beat(){
int SetPolyglot(int i){
int GetStatLevel(string stat){ return 0; }
","/secure/lib/connect.c":"varargs int eventPrint(string msg, mixed cl, mixed arg3) {
int array GetScreen() {
static void create(int binary) {
string GetKeyName() {
void eventDestruct() {
string GetCapName() {
void SetLastError(mapping m) {
mapping GetLastError() {
static void eventCreatePlayer(string cap) {
static void terminal_type(string str) {
static void window_size(int width, int height) {
static void cmdPick(string args) {
static void cmdList() {
static void cmdHelp(string args) {
static void InputName(string namen, string kill_me) {
static void InputPassword(string pass, string cap) {
static void ConfirmName(string ans, string cap) {
static void eventReEnterGame(string cap) {
static void ConfirmReconnect(string ans, string cap) {
static int CanLogin() {
static private void eventEnterGame() {
static void CreatePassword(string pass, string cap) {
static void ConfirmPassword(string control, string cap, string pass) {
static void InputGender(string str, string cap) {
static void InputCapName(string name, string cap) {
static void InputEmail(string email) {
static void InputRealName(string rname) {
static void InputRace(string str) {
static void eventTimeout() {
static void CreateGuest() {
static void GetGuestName(string nom) {
int eventCheckPending(string str){
void eventCompleteChar(){
void InputCre(string str){
static void cmdPickClass(string args) {
static void cmdListClasses() {
static void cmdHelpClass(string args){
static void InputClass(string str){
static void eventSelectClass(){
static void AgeCheck(string ans, string cap) {
int GetMaxPlayers(){
int CheckIp(){
varargs static void logon(mixed foo) {
","/verbs/common/mail.c":"static void create() {
string GetHelp(string str) {
mixed can_mail() { return can_mail_str(\"\"); }
mixed do_mail() { return do_mail_str(0); }
","/secure/lib/connect.first.c":"string GetKeyName() { return Name; }
static void InputName(string str) {
static void InputPassword(string str) {
static void ConfirmPassword(string str) {
static void InputGender(string str) {
static void InputCapName(string str) {
static void InputEmail(string str) {
static void InputRealName(string str) {
static void logon() {
","/lib/exits.c":"static void create(){
mixed eventGo(object who, string str){
string GetSky(){
mixed CanGo(object who, string str){
varargs mapping AddExit(string dir, string dest, function pre, function post){
string GetExit(string str){
string SetSky(string str){
string SetDoor(string dir, string file){
string array GetDoors(){
object GetDummyItem(mixed id){
mapping GetDoorsMap(){
varargs string CreateDoor(string dir, string odir, string long, string locked, string key){
mapping GetEnterMap(){
mapping GetFullExitData(){
mapping GetExitMap(){
string array GetExits(){
string GetDirection(string dest){
varargs void AddEnter(string dir, string dest, function pre, function post){
static mapping GetEnterData(string dir){
varargs string array GetEnters(int i){
void RemoveEnter(string dir){
void SetEnters(mapping mp){
string GetEnterMessage(){
string SetEnterMessage(string str){
mapping GetExitData(string str){
mapping RemoveExit(string dir){
mapping SetExits(mapping mp){
string GetGoMessage(){
string SetGoMessage(string str){
string GetObviousExits(){
string SetObviousExits(string str){
string ResolveObjectName(string file){
","/verbs/items/load.c":"static void create() {
mixed do_load() {
mixed can_load() {
mixed can_load_obj(mixed foo) {
mixed can_load_obj_word_obj(mixed foo) {
varargs mixed do_load_obj(mixed foo) {
varargs mixed do_load_obj_word_obj(mixed foo, mixed wort, mixed foo2) {
","/verbs/creators/wizlock.c":"static void create() {
mixed can_wizlock_obj(string str) {
mixed do_wizlock_obj(object ob){
","/lib/events/sit.c":"object array GetSitters(){
mixed eventReleaseStand(object who){
mixed direct_sit_down_word_obj(){
int CanGet(object who){
int GetMaxSitters(){
static int SetMaxSitters(int x){
mixed direct_sit_word_obj(){
mixed eventReceiveSit(object who){
","/secure/sefun/files.c":"int file_exists(string str) {
string save_file(string who) {
int indent_file(string filename){
int directory_exists(string str){
int mkdir_recurse(string path){
mixed lpc_file(string str){
mixed object_file(string str){
","/secure/lib/net/uptime_server.c":"void create(){
static mixed read_callback(int fd, mixed data){
static void close_callback(int fd){
int SendUptime(int fd){
void StartServer(){
static void listen_callback(int fd){
","/secure/sefun/visible.c":"varargs int visible( object detectee_obj, object detector_obj ) {
","/lib/npc.c":"static void create(){
int eventDestruct(){
void eventReconnect(){ }
static int cmdAll(string arg){
string GetCommandFail(){ return \"What?\"; }
string GetShort(){
int GetRadiantLight(int ambient){
int CanReceive(object ob){ return CanCarry((int)ob->GetMass()); }
int eventReceiveObject(object who){
int eventReleaseObject(object who){
int AddCarriedMass(int x){ return living::AddCarriedMass(x); }
varargs int eventPrint(string msg, mixed arg2, mixed arg3){
string GetName(){ return object::GetName(); }
mixed eventTurn(object who){
static void heart_beat(){
mixed GetDie(){ return Die; }
varargs string SetRace(string race, mixed extra){
mixed SetDie(mixed val){ return (Die = val); }
mixed array GetCommands(){ return commands(); }
static void init(){
varargs int eventShow(object who, string str){
void SetAction(int chance, mixed val){
int GetActionsEnabled(){
int GetLevel(){ return NPCLevel; }
void SetCombatAction(int chance, mixed val){
string GetCapName(){ return object::GetCapName(); }
mapping SetInventory(mapping mp ){ return (Inventory = mp); }
string SetKeyName(string nom){
int eventMove(mixed dest){
void eventEnemyDied(object ob){
string array GetEnemyNames(){ return EnemyNames; }
mixed GetCombatAction(){ return CombatAction; }
mixed GetEncounter(){ return Encounter; }
string array RemoveEncounter(string nom){
string array AddEncounter(string nom){
mixed SetEncounter(mixed val){ return (Encounter = val); }
varargs void SetCurrency(mixed val, int amount){
float SetMaxStaminaPoints(float x){
float SetStaminaPoints(float x){
int SetMagicPoints(int x){
int SetLevel(int x){
string SetClass(string cls){
static int ContinueHeart(){
int eventCompleteMove(mixed dest){
varargs int eventDie(mixed agent){
varargs string GetLong(string str){
int array GetScreen(){ return ({ 80, 24 }); }
int AddEnemy(object ob){
int GetVisibleRiders(){
int eventExtraAction(){ return 1; }
int SetCustomXP(int i){
int SetMaxMagicPoints(int x){
mixed SetAggressive(mixed val){
int DisableActions(int x){
int EnableActions(int x){
int GetAutoStand(){ return AutoStand; }
string GetMountStyle(){
string SetMountStyle(string str){
int SetVisibleRiders(int i){
void CheckEncounter(){
mixed CanGet(object who){ return GetName() + \" is a living being!\"; }
mapping GetInventory(){ return copy(Inventory); }
int SetAutoStand(int i){
int GetCustomXP(){
string GetPlainShort(){
","/lib/daemons/player_stub.c":"string GetKeyName(){
string SetKeyName(string str){
","/lib/battery.c":"void create(){
void init(){
void heart_beat(){
int eventUse(int i){
int Spent(){
int SetCharge(int i){charge = i; fullcharge = i; return 1; }
int SetCellType(string str){celltype=str; return 1; }
string GetCellType(){ return celltype; }
int SetDrainRate(int i){ drainrate = i; return i; }
int GetCharge(){ return charge; }
int SetPowerType(string str){powertype=str; return 1; }
string GetPowerType(){ return powertype; }
int SetRechargeable(int i){ rechargeable = i; return i;}
int GetRechargeable(){ return rechargeable;}
int SetDrainable(int i){ drainable = i; return i; }
int GetDrainable(){ return drainable; }
int GetDrainRate(){ return drainrate; }
int ModCharge(int i){
int eventDrain(int i){
int eventCharge(int i){
","/lib/editor.c":"static void create(){
static string process_input(string str){
varargs void eventEdit(string file, function callback){
","/lib/teach.c":"int eventOfferTeaching(object who, string what){
int direct_teach_liv_to_str(){ return 1;}
int eventTeach(object who, string what){
varargs int CanTeach(object whom, string what){
int direct_teach_str_to_liv(){ return 1;}
","/lib/events/load.c":"varargs mixed eventLoad(object what, object where){
varargs mixed eventUnload(object what, object where){
int direct_load_obj(object target){
varargs mixed CanUnload(object who, object what){
int GetMaxLoaded(){
int GetLoaded(int i){
int SetLoaded(int i){
int SetMaxLoad(int i){
int direct_unload_obj(object target){
varargs mixed CanLoad(object who, object what){
int indirect_load_obj_word_obj(object target, object thingus){
int direct_unload_obj_word_obj(object thingus, object target){
int indirect_unload_obj_word_obj(object one, object two, object three){
","/secure/sefun/make_workroom.c":"varargs int make_workroom(mixed dude, int cre) {
","/secure/sefun/atomize.c":"string array atomize_string(string str){
string array atomize_array(string array temp_arr){
","/verbs/creators/zap.c":"static void create() {
mixed can_zap_liv(string str) {
mixed do_zap_liv(object ob){
mixed do_zap_lvs(object array obs) {
","/verbs/items/drink.c":"static void create() {
varargs void eventDrink(object who, object what, string id) {
mixed can_drink_obj(string verb) { return this_player()->CanManipulate(); }
mixed can_drink_from_obj(string verb) { return this_player()->CanManipulate(); }
mixed do_drink_obj(object ob) {
mixed do_drink_from_obj(object ob, string id) {
","/lib/stargate.c":"void create(){
void init(){
int eventEnter(object who){
void heart_beat(){
string status(){
mixed cmdDial(string s){
string displayLong(){
string displayShort(){
int cmdEnter(string what){
void SetOrigin(string o, string d){
string GetOrigin(){
void eventConnect(string destination){
int eventDisconnect(){
","/verbs/items/buy.c":"static void create() {
mixed can_buy_str_from_liv(string str) {
mixed do_buy_str_from_liv(string str, object vendor) {
","/verbs/players/attack.c":"static void create() {
varargs mixed can_attack_liv(object target) {
mixed do_attack_liv(object target) {
varargs mixed do_attack_lvs(mixed array targets, int exclusive) {
mixed can_attack_only_liv(object target){
mixed can_attack_liv_only(object target){
mixed do_attack_only_liv(object target){
mixed do_attack_liv_only(object target){
","/lib/firearm.c":"int CanReceive(object ob){
int CanRelease(object ob){
mixed CanGetFrom(object who, object item){
mixed CanPutInto(object who, object what){
static void create(){
mixed eventShoot(object ob, mixed target){
void init(){
mixed eventLoad(object ob){
mixed eventUnload(mixed what){
int GetMaxLoaded(){
int SetLoaded(int i){ loaded=i; return 1; }
int GetLive(){ return loaded; }
int GetCaliber(){ return Caliber; }
int CalculateAmmoSize(){
int GetMillimeter(){ return Millimeter; }
string GetAmmoType(){ return AmmoType; }
int GetMaxAmmo(){ return MaxAmmo; }
string GetFirearmType(){ return FirearmType; }
int SetCaliber(int x){ Caliber=x; return 1; }
int SetMillimeter(int x){ Millimeter=x; return 1; }
int SetMaxAmmo(int x){ MaxAmmo=x; return 1; }
int SetFirearmType(string str){ FirearmType=str; return 1; }
int SetAmmoType(string str){ AmmoType=str; return 1; }
int InitRevolver(string array arr){
int missed_shot(){
int doRevolverUnload(string what, string num){
int SetAmmoFile(string str){ AmmoFile=str; return 1; }
string SetFirearmName(string str){
string GetFirearmName(){
int eventFire(mixed str){
int GetMagnum(){
int SetMag(int i){ mag=i; return 1; }
int doMagUnload(){
int SetMagnum(int i){
","/lib/events/swivel.c":"varargs mixed eventSwivel(object who, mixed what){
mixed direct_swivel_str_on_obj(string str, object target){
mixed direct_swivel_obj(object target){
varargs int CanSwivel(mixed who, mixed what){
mixed direct_swivel_wrd_obj(object target){
","/secure/sefun/ascii.c":"string convert_ascii(int i){
mixed convert_into_ascii(string str){
","/secure/sefun/numbers.c":"int atoi(string str){
string itoa(int i){
int array roll(string alea){
int bool_reverse(mixed arg){
int bitshiftedp(int x){
","/secure/sefun/persist.c":"int query_reset_number() { return (int)master()->GetResetNumber(); }
object unique(string fn, int rare) {
","/lib/comp/object.c":"static void create(){
static int Destruct(){
mixed direct_dest_obj(){ return CanDest(); }
mixed indirect_dest_obj(){ return CanDest(); }
","/secure/sefun/flat_map.c":"string flat_map(mapping mp) {
","/secure/sefun/absolute_value.c":"int absolute_value(int x) {
","/lib/chapel.c":"static void create(){
string array SetReligion(string adj, string noun){
varargs string GetReligion(int flag){ return Religion[flag]; }
mixed CanSacrifice(object who, object what, string deus){
string array GetClasses(){ return Classes; }
mixed CanMarry(object who, object spouse1, object spouse2){
mixed eventMarry(object who, object spouse1, object spouse2){
int AddSacrificeType(int x){ return (SacrificeType |= x); }
int GetSacrificeType(){ return SacrificeType; }
mixed eventSacrifice(object who, object what, string deus){
int SetAllowSacrifice(int x){ return (AllowSacrifice = x); }
int GetAllowSacrifice(){ return AllowSacrifice; }
string array SetClasses(string array rc){ return (Classes = rc); }
string array SetDeities(string array deities){
int SetSacrificeType(int x){ return (SacrificeType = x); }
string array GetDeities(){ return Deities; }
","/secure/sefun/get_stack.c":"varargs string get_stack( int x) {
","/verbs/rooms/go.c":"static void create() {
mixed can_go_str(string str) {
mixed can_go_into_str(string str) {
mixed do_go_str(string str) {
mixed do_go_into_str(string str) {
","/lib/events/shake.c":"varargs mixed eventShake(object who, string component){
string array GetShakes(){
mapping RemoveShake(string item){
varargs mapping SetShake(mixed key, mixed desc){
varargs mixed CanShake(object who, string component){
mixed direct_shake_obj(object target){
mixed direct_shake_str_on_obj(string str, object target){
","/verbs/players/mount.c":"static void create() {
mixed can_mount_liv() {
mixed do_mount_liv(object ob) {
","/lib/std/chair.c":"int CanGet(object who){
void create(){
","/verbs/players/withdraw.c":"static void create() {
mixed can_withdraw() {
mixed do_withdraw() {
","/lib/events/climb.c":"varargs mixed eventClimb(object who, int type, string where){
int SetCanClimbCarried(int i){
mapping GetClimbs(){
int GetCanClimbCarried(){
varargs static mapping SetClimb(mixed val, int type){
mixed direct_climb_obj(object ob){
mixed direct_climb_out_of_obj(object ob){
mixed direct_climb_word_obj(string word, object ob){
","/lib/trap.c":"static void heart_beat(){
static void create(){
mixed eventCapture(object who, object target){
mixed eventFree(object who, string target){
mixed CanFree(object who, object target){
mixed indirect_capture_liv_word_obj(object target){
mixed indirect_free_liv_from_obj(object target){
mixed CanCapture(object who, object target){
mixed eventEscape(){
object array GetCaptives(){
int GetEscapeChance(){
int SetEscapeChance(int x){
int GetMaxCapture(){
int SetMaxCapture(int x){
","/verbs/items/capture.c":"static void create() {
mixed do_capture_liv_word_obj(object target, string word, object tool) {
mixed can_capture_liv_word_obj() {
","/lib/poison.c":"static void create(){
int SetPoisonUses(int x){ return (PoisonUses = x); }
mixed indirect_poison_obj_with_obj(){
mixed GetPoisonStrength(){ return PoisonStrength; }
int SetPoisonStrength(int x){ return (PoisonStrength = x); }
int GetPoisonUses(){ return PoisonUses; }
mixed eventSpreadPoison(object who, object target){
","/secure/sefun/arrays.c":"mixed array distinct_array(mixed array arr) {
mixed array singular_array(mixed array arr) {
mixed array scramble_array(mixed array arr){
","/verbs/players/wake.c":"static void create() {
mixed do_wake() {
mixed can_wake() {
","/verbs/items/search.c":"static void create() {
mixed can_search() {
mixed can_search_obj() {
mixed can_search_str_word_obj() {
mixed do_search() {
mixed do_search_obj(object ob) {
mixed do_search_str_word_obj(string str, object ob) {
","/lib/events/sink.c":"mixed eventSink(){
","/verbs/items/light.c":"static void create() {
mixed can_light_obj() {
mixed can_light_obj_with_obj() {
mixed do_light_obj(object target) {
mixed do_light_obj_with_obj(object target, object source) {
mixed do_light_obs(mixed array targs) {
mixed do_light_obs_with_obj(mixed array targs, object source) {
","/lib/comp/weapon.c":"int eventStrike(object target){
string array GetSave(){
mixed CanEquip(object who, string array limbs){
mixed eventEquip(object who, string array limbs){
mixed eventUnequip(object who){
int GetHands(){
string GetEquippedShort(){
varargs string GetEquippedDescription(object who){
int SetHands(int x){
string SetWeaponType(string str){
int GetWielded(){
mixed SetWield(mixed val){
mixed direct_remove_obj(){
mixed direct_wear_obj(){
int eventDeteriorate(int type){
string GetWeaponType(){
","/lib/std/story.c":"static void create(){
void PickTale( string taletotell ){
void TellTale( int part ){
string SetTalesDir(string dir){
string GetTalesDir(){ return TalesDir; }
string SetNoTaleMessage(string notalemessage){
int GetTellingTale(){ return AlreadyTellingTale; }
string GetNoTaleMessage(){ return NoTaleMessage; }
","/lib/body.c":"mixed eventFall(){
string GetRace(){ return 0; }
void NewBody(string race){
string GetName(){ return 0; }
void eventCompleteHeal(int x){
static void heart_beat(){
varargs int GetHealthPoints(string limb){
varargs int eventReceiveDamage(mixed agent, int type, int x, int internal,
static void create(){
string GetCapName(){ return 0; }
int SetHealthPoints(int x){
varargs int eventDie(mixed agent){
string GetLong(string nom){
int GetMass(){
string array GetEquippedLimbs(){
mixed CanManipulate(){
int HealLimb(string limb){
int DestLimb(string limb){
string GetMissingLimbParent(string limb){ return MissingLimbs[limb][\"parent\"]; }
string array GetMissingLimbParents(string limb){
int eventCompareLimbs(string limb1, string limb2){
int AddExperiencePoints(mixed x){
int GetExperiencePoints(){ return ExperiencePoints; }
int SetMelee(int i){ melee = i; return melee; }
int GetMelee(){ return melee; }
mixed SetProtect(function f){ return (Protect = f); }
function GetProtect(){ return Protect; }
int GetHeartModifier(){
varargs int AddHeartModifier(int x, int t){
string GetAffectLong(){
int GetDeathEvents(){
int SetDeathEvents(int i){
int SetGodMode(int i){
int GetGodMode(){
string SetKeepalive(string str){
string GetKeepalive(){
int CanFly(){
int GetFood(){ return Food; }
int CanSwim(){
string GetLimbParent(string limb){ return Limbs[limb][\"parent\"]; }
varargs object array GetWorn(string limb){
varargs int GetLead(string ammo){
string GetHealthShort(){
string array RemoveExtraChannels(string array chans){
string array AddExtraChannels(string array chans){
string array GetExtraChannels(){
string array GetLimbs(){
int GetSleeping(){ return Sleeping; }
varargs int AddLimb(string limb, string parent, int classes, int array armors){
int SetSize(int i){
int AddHP(int hp){
int GetMaxMagicPoints(){ return 0; }
float AddStaminaPoints(mixed x){
int GetStaminaPoints(){ return to_int(StaminaPoints); }
float GetMaxStaminaPoints(){  return 0; }
int AddMagicProtection(class MagicProtection cl){
int RemoveMagicProtection(int i){
int SetSleeping(int x){
int AddAlcohol(int x){
int GetAlcohol(){ return Alcohol; }
int GetCaffeine(){ return Caffeine; }
int AddDrink(int x){ return (Drink += x); }
int GetDrink(){ return Drink; }
int AddPoison(int x){
int GetPoison(){ return Poison; }
int GetDying(){
string GetResistance(int type){ return \"none\"; }
int GetHeartRate(){
int GetHealRate(){
varargs mixed eventBuy(mixed arg1, mixed arg2, mixed arg3){
int GetBodyType(){
int SetBodyType(int i){
int GetEncumbrance(){
string SetBodyComposition(string str){
string GetBodyComposition(){
int GetPacifist(){
int SetPacifist(int i){
int SetCanBite(int i){
int GetCanBite(){
string array SetExtraChannels(string array chans){
mixed direct_turn_liv(){
void eventCheckEnvironment(){
varargs int eventCollapse(int noparalyze){
void ParseHook(string str){
mixed CanRemoveItem(object ob){ return 1; }
private void checkCollapse(){
int SetDying(int x){
varargs string array GetMissingLimbs(int not_default){
int AddCaffeine(int x){
void eventCheckHealing(){
varargs int eventHealDamage(int x, int internal, mixed limbs){
int eventCheckProtection(object agent, int type, int damage){
mixed eventReceiveThrow(object who, object what){
int eventRemoveItem(object ob){
int eventWear(object ob, mixed limbs){
varargs int RestoreLimb(string limb, int recurse){
varargs int RemoveLimb(string limb, mixed agent, int quiet){
string GetRandomLimb(string targ){
string GetTorso(){
int GetLimbClass(string limb){
string array GetLimbChildren(string limb){
string array GetWieldingLimbs(){
varargs int AddFingers(string limb, int x){
int GetFingers(string limb){
varargs mixed GetWielded(string limb){
varargs static int AddHealthPoints(int x, string limb, mixed agent){
int AddMagicPoints(int x){
int GetMagicPoints(){ return MagicPoints; }
void eventReconnect(){
int AddFood(int x){ return (Food += x); }
mixed CanWear(object ob, string array limbs){
int SetMass(int i){
int GetSize(){
int AddLead(string ammo,int number){
","/lib/leader.c":"static void create(){
int eventPreAttack(object ob){
mixed eventAsk(object who, string str){
int eventTeachPlayer(object who, string spell){
void eventConvert(object who, string args){
void eventPreview(object who, string args){
void eventJoin(object who, string args){
","/lib/props/uniqueness.c":"int SetMaxClones(int x){
int array GetRarity(){
int GetMaxClones(){
int array SetRarity(int count, int days){
int GetUnique(){
int SetUnique(int x){
","/lib/props/radiance.c":"int GetRadiantLight(int ambient){
int GetBaseRadiance(int foo){
int SetRadiantLight(int x){
","/secure/lib/net/generic.c":"void create(){
static void read_callback(int fd, buffer data){
static void close_callback(int fd){
void StartServer(){
static void listen_callback(int fd){
","/secure/sefun/ordinal.c":"string ordinal(int x) {
","/lib/bot.c":"static void create(){
void init(){
varargs int eventDie(mixed agent){
string GetLong(string nom){
string GetHealthShort(){
int GetNoBotCondition(){
int SetNoBotCondition(int foo){
","/lib/lvs/position.c":"mixed eventFall(){
int SetPosition(int x){
int GetPosition(){
mixed eventFly(){
string GetFurnitureName(){
mixed eventStand(){
mixed eventLand(){
mixed eventFloat(){
mixed eventSwim(){
varargs mixed eventSit(object target){
varargs mixed eventKneel(object target){
varargs mixed eventLay(object target){
","/verbs/players/evade.c":"static void create() {
mixed can_evade_liv() { return 1; }
mixed do_evade_liv(object ob) {
","/lib/std/storage.c":"int SetOpacity(mixed arg){
int GetOpacity(){
varargs mixed CanShowInterior(object who, object target){
int inventory_visible(){
int GetRadiantLight(int ambient){
int eventReceiveObject(object ob){
mixed CanGetFrom(object who, object item){
mixed CanPutInto(object who, object what){
int inventory_accessible(){
void create(){
static mixed array AddSave(mixed array vars){
int SetSaveRecurse(int x){
string array GetSave(){
mixed CanClose(object who, string id){
mixed CanOpen(object who, string id){
mixed CanLock(object who, string id){
mixed CanPick(object who, string id){
mixed CanUnlock(object who, string id, object key){
int GetRecurseDepth(){
int AddRecurseDepth(int i){
int SetRecurseDepth(int i){
int GetMaxRecurseDepth(){
int SetMaxRecurseDepth(int i){
int GetCanClose(){
int SetCanClose(int x){
int GetCanLock(){
int SetCanLock(int x){
void PutCheck(){
void SetKey(string key){
","/verbs/players/bump.c":"static void create() {
mixed can_bump_liv() {
mixed do_bump_liv(object ob) {
void MoveBack(object ob, string where) {
","/lib/pile.c":"string GetShort(){
int eventMove(mixed dest){
static void create(){
int GetMass(){
string array GetId(){
void init(){
void SetPile(string str, int amt){
void SetCurrency(string str, int amt){
mixed eventGetMoney(object who, int amount, string curr){
mixed direct_get_wrd_wrd_out_of_obj(string num, string curr){
mixed direct_get_wrd_wrd_from_obj(string amt, string curr){
string GetPileType(){ return PileType; }
int GetPileAmount(){ return PileAmount; }
","/lib/learn.c":"int CanLearn(){
int eventLearn(object who, string what){
int direct_learn_str_from_liv(){ return 1;}
int direct_learn_to_str_from_liv(){ return 1;}
","/verbs/items/sell.c":"static void create() {
mixed can_sell_liv_obs() {
mixed do_sell_obj_to_liv(object ob, object vendor) {
mixed do_sell_liv_obj(object vendor, object item) {
mixed do_sell_obs_to_liv(object array items, object vendor) {
mixed do_sell_liv_obs(object vendor, object array items) {
mixed can_sell_obj_to_liv() {
","/lib/events/get_from.c":"mixed indirect_get_obj_from_obj(object item, object container){
mixed indirect_get_obj_out_of_obj(object item, object container){
mixed indirect_get_obs_from_obj(object array items, object storage){
mixed indirect_get_obs_out_of_obj(object array items, object storage){
mixed indirect_put_obj_word_obj(object what, string word, object storage){
mixed indirect_put_obs_word_obj(object array items, string wrd, object storage){
mixed CanGetFrom(object who, object item){
mixed CanPutInto(object who, object item){
mixed CanPutOnto(object who, object item){
mixed eventGetFrom(object who, object array what){
mixed eventPutInto(object who, object what){
mixed eventPutOnto(object who, object what){
mixed indirect_get_obj_obj(object item, object container){
mixed indirect_get_obs_obj(object array items, object storage){
mixed indirect_put_obj_obj(object what, string word, object storage){
mixed indirect_put_obs_obj(object array items, string wrd, object storage){
int inventory_visible(){
int inventory_accessible(){
","/verbs/players/sink.c":"static void create() {
mixed do_sink_down(){
mixed can_sink_down() {
","/lib/pistol.c":"static void create(){
void init(){
","/lib/shop.c":"static void create(){
void init(){
int list(string str){
int show(string str){
int appraise(string str){
int price(string str){
","/secure/sefun/load_object.c":"int update(string file){
object load_object(string str) {
","/verbs/items/press.c":"static void create() {
mixed can_press_obj() {
mixed can_press_str_on_obj() {
mixed do_press_obj(object target) {
varargs mixed do_press_str_on_obj(string thing, object target) {
","/secure/sefun/morality.c":"int moral_act(object agent, object target, int amount) {
","/lib/chat.c":"static void create(){
int eventDestruct(){
string array GetRestrictedChannels(){ return (RestrictedChannels + ({})); }
int SetGagged(string type, mixed whether){
int GetGaggedType(string type){
int SetMuted(string type, mixed whether){
int GetMutedType(string type){
int SetNoChanColors(int x){
int GetNoChanColors(){
static string chat_command(string str){
mapping returnChannels(){
string array GetChannels(){ return keys(Channels); }
static void net_dead(){
string array AddChannel(mixed val){
void eventReconnect(){
string array RestrictChannel(mixed val){
string array RemoveChannel(mixed val){
string array UnrestrictChannel(mixed val){
","/lib/money.c":"varargs void SetMoney(mixed val, int amount){
int AddMoney(string type, int amount){
mapping GetMoneyMap(){ return copy(Money); }
","/verbs/players/crawl.c":"static void create() {
mixed can_crawl_str(string str) {
mixed can_crawl_into_str(string str) {
mixed do_crawl_str(string str) {
mixed do_crawl_into_str(string str) {
","/verbs/players/party.c":"static void create() {
string GetHelp(string str) {
int livings_are_remote() { return 1; }
mixed can_party_wrd(string cmd) {
mixed can_party_wrd_wrd(string cmd, string party) {
mixed can_party_wrd_liv(string cmd) {
mixed do_party_wrd(string cmd) {
mixed do_party_wrd_wrd(string cmd, string party) {
mixed do_party_wrd_liv(string cmd, object targ) {
","/lib/shadow_hook.c":"nomask int AddShadow(object sombra){
nomask int RemoveShadow(object sombra){
nomask mapping GetShadows(){
","/verbs/common/whisper.c":"static void create() {
mixed can_whisper_in_wrd_to_liv_str(string lang, object targ, string str) {
mixed can_whisper_to_liv(object target) {
mixed can_whisper_to_liv_str(object targ, string str) {
mixed do_whisper() { return 1; }
mixed do_whisper_to_liv(object ob) { return 1; }
mixed do_whisper_in_wrd(string wrd) { return 1; }
mixed do_whisper_to_liv_str(object targ, string str) {
mixed can_whisper_to_liv_in_wrd_str(object targ, string lang, string str) {
mixed do_whisper_in_wrd_to_liv(string str, object ob) { return 1; }
mixed do_whisper_in_wrd_to_liv_str(string lang, object targ, string str) {
mixed do_whisper_to_liv_in_wrd_str(object targ, string lang, string str) {
","/secure/sefun/compare_array.c":"int arrcmp(mixed array arr1, mixed array arr2){
int compare_array(mixed array arr1, mixed array arr2){
","/lib/events/sell.c":"mixed CanSell(object seller){
mixed direct_sell_obj_to_liv(){
mixed indirect_sell_liv_obj(){
","/secure/sefun/user_path.c":"string user_path(string name){
","/verbs/items/apply.c":"static void create() {
mixed can_apply_obj_word_obj() {
mixed can_apply_obj_obj() {
mixed do_apply_obj_word_obj(object appliance, object target) {
mixed do_apply_obj_obj(object appliance, object target) {
","/lib/std/dummy.c":"varargs static void create(string array id, mixed long, string array adj){
","/verbs/items/ring.c":"static void create() {
mixed can_ring_str_on_obj_with_obj() {
mixed do_ring_str_on_obj_with_obj(string str, object target, object tool) {
mixed can_ring_obj() {
mixed can_ring_obj_with_obj() {
mixed do_ring_obj(object target) {
mixed do_ring_obj_with_obj(object target, object tool) {
","/verbs/players/lie.c":"static void create() {
mixed can_lie_down() {
mixed can_lie_word_obj() {
mixed can_lie_down_word_obj() {
mixed do_lie_down() {
mixed do_lie_word_obj(string word, object target) {
mixed do_lie_down_word_obj(string word, object target) {
","/lib/donate.c":"static void create(){
static void init(){
string GetLong(string str){
string SetLocalCurrency(string currency){
string GetOwner(){return Owner;}
int eventDonate(string amt, string type){
string GetLocalCurrency(){return LocalCurrency;}
string SetOwner(string owner){return (Owner = owner);}
int GetAssets(){return TotalAssets;}
int AddAssets(int amount){
","/lib/guard.c":"int AllowPass(object who, object what){
int AllowGet(object who, object what){
varargs mixed SetGuard(mixed what, mixed action, int howlong){
void CheckPending(){
void CheckGuardeds(){
void init(){
void heart_beat(){
","/lib/events/drink.c":"varargs mixed CanDrink(object who, string substance){
varargs mixed eventDrink(object who, string substance){
mixed direct_drink_obj(){
mixed direct_drink_from_obj(){
mixed direct_drink_str_from_obj(string str){
","/lib/virtual/virt_land.c":"varargs static void create(int x, int y,int z){
varargs mixed GetCoordinates(int level){
mapping GetDirectionMap(){
void SetVirtualExits(int x, int y, int z){
varargs void SetLongAndItems(int x, int y, int z){
int SetMasterMap(mixed map_name){
int SetVirtFile( string file ){
string SetResetMessage(mixed str){ Reset_Message = str;}
void SetCoordinates(int x, int y, int z){
string GetReverseDirection(string dir){
varargs mixed GetMapType(int x, int y, int z){
mapping SetSurroundAreas(int x, int y, int z){
void ResetSurroundExits(){
void ResetLocation(){
string GetAreaType(){ return AreaType;}
object GetMasterMap(){ return Map_Master;}
varargs string array GetNonExits(string array extra){
mapping GetSurroundAreas(){ return Surrounding_Areas; }
void PreAddEnter(mixed dir, string file){
","/verbs/items/read.c":"static void create() {
mixed can_read_obj() {
mixed can_read_obj_at_obj() {
mixed can_read_str_word_obj() {
mixed do_read_obj(object ob) {
mixed do_read_obj_at_obj(object ob, object target) {
mixed do_read_str_on_obj(string str, object ob) {
mixed do_read_str_in_obj(string str, object ob) {
mixed do_read_str_of_obj(string str, object ob) {
mixed do_read_str_from_obj(string str, object ob) {
","/lib/shell.c":"void create(){
int GetCaliber(){ return caliber; }
int GetMillimeter(){ return millimeter; }
string GetAmmoType(){ return ammotype; }
string GetFirearmType(){ return firearmtype; }
int SetCaliber(int x){ caliber=x; return 1; }
int SetMillimeter(int x){ millimeter=x; return 1; }
int SetFirearmType(string str){firearmtype=str; return 1; }
int SetAmmoType(string str){ammotype=str; return 1; }
","/lib/talk.c":"int direct_say_to_liv_str(){ return 1; }
int direct_whisper_to_liv(){ return 1; }
string SetSpeakColor(string str){
string GetSpeakColor(){ return SpeakColor; }
int eventTellHist(string str){
string array GetTellHistory(){
int eventTalkHist(string str, string type){
string array GetTalkHistory(string type){
string array GetTalkHistTypes(){
varargs mixed eventSpeak(object target, int cls, string msg, string lang){
mixed eventTalkRespond(object who, object targ, int cls, string msg, string lang){
varargs mixed CanSpeak(object target, string verb, string msg, string lang){
int direct_ask_liv_str(){ return 1; }
int direct_ask_liv_to_str(){ return 1; }
int direct_ask_liv_for_str(){ return 1; }
int direct_ask_liv_about_str(){ return 1; }
int direct_request_str_from_liv(){ return 1; }
int direct_whisper_in_wrd_to_liv(){ return 1; }
int direct_whisper_to_liv_str(){ return 1; }
int direct_whisper_in_wrd_to_liv_str(){ return 1; }
int direct_whisper_to_liv_in_wrd_str(){ return 1; }
varargs mixed eventHearTalk(object who, object target, int cls, string verb,
","/verbs/players/request.c":"static void create() {
mixed can_request_str_from_liv() {
mixed do_request_str_from_liv(string str, object who) {
","/verbs/items/activate.c":"static void create() {
mixed can_activate() {
mixed can_activate_obj_on_obj(mixed foo) {
varargs mixed do_activate_obj_on_obj(mixed foo, mixed foo2) {
","/verbs/creators/resurrect.c":"static void create() {
mixed can_resurrect_obj(string str) {
mixed do_resurrect_obj(object ob) {
","/lib/potion.c":"void create(){
mixed eventDrink(object who){
mapping GetSkills(){
mapping GetStats(){
mapping SetSkills(mapping arg){
mapping SetStats(mapping arg){
mapping SetPoints(mapping arg){
mapping GetPoints(){
int SetDuration(int i){
int GetDuration(){
","/verbs/players/marry.c":"static void create() {
mixed can_marry_liv_to_liv() {
mixed do_marry_liv_to_liv(object spouse1, object spouse2) {
","/lib/mayor.c":"static void create(){
static int SetTax(int x){
int GetTax(){
static string SetLocalCurrency(string str){
string GetLocalCurrency(){
static void EvaluateCitizenshipRequest(){
mixed CanRequestCitizenship(object who){
mixed eventRequestCitizenship(object who){
",])
Functions ({"eventTellHist","eventEquip","GetDummyItems","SetTrapType","GetTax","do_install_obj_word_obj","GetSocketType","direct_missile_liv","compare_array","SetScreen","eventOpen","read_callback","SetDisabled","eventCmdRetr","GetPoisonUses","replace_line","SetCommercial","CanTrain","do_reload_obj","do_shoot_liv_with_obj","SetListen","indirect_light_obs_with_obj","possessive_noun","SetTrapDescription","LoadAuto","can_dismount_from_liv","regetID","GetClimate","direct_put_obj_obj","do_enter_into_obj","directory_exists","GetSaveFile","parse_spell","SetCure","GetBaseSkillLevel","GetFtpWelcomeMsg","ClassMember","can_whisper_in_wrd_to_liv_str","do_follow","GetPoison","move_or_destruct","SetVisibleGrid","SetMillimeter","direct_detect_wrd_in_obj","GetActionsEnabled","GetStatBonus","GetGoMessage","do_empty_obj","CanUnTrain","end_edit","SetRead","GetMaxLoaded","direct_turn_obj_on_obj_on","GetEnter","direct_stealth_wrd","SetBaseCost","call_out","SetClient","direct_resurrect_liv","GetPersistentInventory","SetTerrainType","SetMass","eventCre","RemoveFollower","direct_scratch_str_on_obj","CanPutOnto","SetDestructOnClose","direct_abandon_liv","direct_fish_with_obj","eventTallyVotes","SetCediting","coordinates","indirect_roll_obs_on_obj","AddTrainingPoints","playerp","do_put_obs_obj","get_random_living","SetValue","GetBlind","restore_player","direct_crawl_str","id","eventEncounterBlock","direct_put_wrd_wrd_word_obj","eventPreview","SetAction","CanWear","can_capture_liv_word_obj","GetAnnoyblock","SetFirearmType","GetWimpy","CanRepair","can_roll_str","do_ask_liv_about_str","GetSource","AddEncounter","last_string_element","can_ring_str_on_obj","unmorse","GetPenalty","do_delete_obj_from_obj","CanSpeak","do_steal_obj_from_liv","eventCmdPswd","direct_train_liv_to_str","do_swivel_obj","direct_buffer_liv","indirect_shoot_obj_at_obj","direct_pray_for_str_for_obj","GetSurroundAreas","direct_add_obj_to_obj","eventEmpty","mapping_member","direct_ride_str","eventLand","hobbled","do_sit_down_word_obj","can_swim","eventLoadItem","do_put_obj_word_obj","can_wear_obj","GetMaxFishing","SetInfect","SetBonusName","GetDeathEvents","can_yell_in_wrd_str","query_carrying","GetMagicResistance","SetAutoStand","can_uninstall","direct_ask_liv_str","RemoveConsult","do_sit","SetBonusDuration","GetDirectoryList","eventDecay","SetHiddenDoor","cmdHelpClass","CanMelee","GetReligion","identify","GetBaseStatLevel","can_look_at_str","GetCaliber","SetDayLong","SetCanSwim","GetRifleType","do_ring_str_on_obj","can_install_obj","AddQuestCurrency","direct_reload_word_obj","eventServerListenCallback","SetFuelName","isCorpse","do_search_str_word_obj","GetMaxStaminaPoints","direct_enter_into_obj","containers","GetCoords","GetRecurseDepth","query_max_mp","GetLanguages","do_activate_obj","SetEmptyShort","eventOfferTeaching","can_roll","GetAmmo","parse_command_id_list","SetLocalFee","RazzleDazzle","efuns","GetHealthPoints","GetType","direct_dig_obj_with_obj","native_version","GetDestructOnDrop","SetRecurseDepth","do_put_obj_obj","GetStaminaCost","do_yell_in_wrd_str","do_ask_str","do_roll_str","GetMissData","GetExitData","doRevolverUnload","eventMoveFollowers","GetResistance","GetTitles","query_time","can_install_obj_word_obj","SetHealthPoints","validate","indirect_delete_exit_str","AddSacrificeType","SetMaxLiers","eventReceiveDamage","eventDecreaseFuel","do_rock","SetMagnum","do_judge_obj_to_obj","GetFreeLimbs","do_wear_obs","direct_unload_obj","can_delete_obj_from_obj","direct_remove_obj","GetDayLight","GetBirth","CanLead","do_stealth_wrd","update","CreatePassword","Payment","eventReleaseStand","do_wear_obj","can_roll_obj_on_obj","GetCarriedMass","path_file","AddCurrency","tell_creators","seteuid","GetCurrencyMass","can_jump_word_obj","show","direct_rock_str","do_abandon_liv","direct_unlock_obj_with_str","eventFly","eventBuryWith","direct_copy_obj_str","GetCharge","eventSendData","do_sell_obs_to_liv","GetMode","eventWithdraw","CanEquip","can_scratch_on_obj","cmd_followup_and_respond","SetMuffed","CanSpellAttack","do_enter_obj","eventCheckEnvironment","GetReferer","indirect_marry_liv_to_liv","query_snoop","scramble_array","CanTurnOff","SetLockable","SetRules","indirect_delete_obj","moral_act","do_get_obj_out_of_obj","mgrepp","CanWeapon","NewBody","reverse_string","GetExitMap","direct_smoke_obj","SetVisibleRiders","InputClass","can_createfix_obj","can_search_str_word_obj","GetInvis","do_roll_obj_on_obj","CalculateAmmoSize","SetCapName","can_lie_down_word_obj","mudlib_version","do_target_lvs","can_codesay_str","AddSearchPath","ParseHook","GetOrigin","eventWander","eventCmdPasv","read_file","SetBodyComposition","eventCmdPass","direct_resurrect_obj","eventMultiply","direct_pour_out_obj","GetParalyzed","do_follow_liv","get_livings","query_board_time","eventRegisterSide","can_empty_obj","do_ask_liv_str","direct_rockwhip_liv","SetFingers","GetExtraChannels","eventStealth","SetGoMessage","do_whisper_to_liv_in_wrd_str","query_custom_command","can_kneel_down","SetSize","can_buy_str_from_liv","eventDrive","GetAllowSacrifice","parse_objects","can_scratch_obj","eventLearn","GetAreaType","disconnect","RemoveBonuses","query_ambient_light","can_fly","eventJump","GetClass","SetPK","do_close_obj","Destruct","can_skin_obj_with_obj","eventPrepareCast","SetSaveFile","query_max_hp","GetAmmoType","SetSpeakColor","tail","indirect_bury_obj_with_obj","wild_card","opposite_dir","do_pull_str_from_obj","SetBane","GetRoomAffectLong","currency_mass","SetMaxRecurseDepth","GetMealMessages","SetNoDefaultExits","eventPutOnto","CanShowInterior","SetRestrictLimbs","can_show_obj_to_liv","can_lock_obj_with_str","eventPreAttack","GetFollowerMap","GetInventory","efun_exists","SetMaxHealthPoints","GetLocations","eventCmdPwd","SetMealMessages","SetRescueBit","get_verbs","SetExits","GetProtectionMap","direct_command_liv_to_str","tell_object","estatep","can_reload_word","do_shout","eventForceQueuedCommand","mudlib","eventExtraAction","SetNonLocalFee","eventStop","GetHostSite","can_pick_obj","ParsePost","GetTale","query_value","compile_object","GetMagicCost","do_turn_off_obj","indirect_read_obj_at_obj","cmdSmell","GetTalkHistTypes","do_say","remove_matching_line","do_fly_into_str","do_request_str_from_liv","SetMaxMagicPoints","eventBuck","do_show_obj_to_liv","do_steal_obs_from_liv","dump_variable","launch","SetRifleType","do_list","doRoll","eventShow","do_get_wrd_out_of_obj","cmd_pwd","eventMeleeAttack","do_remove_obj_out_of_obj","GetHands","GetHealthShort","SetSky","SetSkill","SetClimate","eventCommand","do_put_obs_word_obj","eventCmdQuit","direct_look_on_obj","eventCmdRnfr","roll","QueryMap","GetArmorType","RemoveLocation","indirect_balance_obj_to_obj","do_scratch_on_obj","file_present","SetCommandResponses","do_scratch_on_str_on_obj","SetReligion","do_go_into_str","RemoveBlindness","file_privs","GetExchangeFee","do_climb_obj","GetPreventSteal","direct_shoot_obj_with_obj","help","SetRetain","assistp","SetPreventDrop","do_sleep","can_whisper_in_wrd","GetLanguagePoints","eventKneel","do_wield_obj_word_str","SetWanderSpeed","SetPreventSteal","direct_untrain_liv","can_rock","CheckIp","can_copy_obj_str","eventJoin","cmdPick","GetPrompt","pushd","do_pick_obj","livings_are_remote","AddStat","eventResults","direct_move_obj","eventDisplayStatus","do_steal_wrd_from_liv","check_access","direct_free_liv_from_obj","GetOwner","direct_dispel_liv","eventFlushQueuedMessages","indirect_sell_liv_obj","GetPerforated","eventCmdNlst","RemoveStat","GetWeaponType","eventDarken","can_stand","can_enter_obj","can_judge_obj_str_obj","CanBuryWith","GetDoorStopped","GetPermitLoad","find_flags","SetBait","do_dismount_liv","GetKnocks","can_stand_up","imud_privp","GetDying","eventShake","SetDayLight","AddBonusDuration","effective_light","eventEscape","GetMinHeat","GetFrequency","GetFollowed","direct_look_at_str_on_obj","direct_apply_obj_word_obj","CanPull","SetDead","appraise","present_file","can_pour_out_obj","eventQuell","SetId","do_look","eventSell","GetPowerType","AddFingers","eventTurnOff","can_donate_str_str","SetTeachingFee","ConfirmReconnect","set_cwd","remove_dots","AddHostile","direct_shock_liv","SetCaliber","GetAddress","direct_lead_liv","GetLifeSpan","parse_command_adjectiv_id_list","do_jump_on_obj","SetParalyzed","SetDig","GetAdjectives","indirect_turn_obj_on_obj_on","SetDie","CanEat","direct_immolate_liv","do_knock_str_on_obj","direct_bait_obj_with_obj","SetShort","can_search_obj","do_listen","CanLearn","do_open_obj_with_obj","query","eventDrink","GetListens","SetWanderRecurse","GetMorality","isTemporary","avatarp","can_pour_obj_on_obj","direct_whisper_to_liv_in_wrd_str","RemoveScratch","eventLay","GetScreen","eventSwim","do_shoot","GetCurrencies","eventAbortCallback","SetVehicleInterior","resolve_callback","direct_scratch_on_obj","setOrigin","eventRunOut","GetVirtualSky","can_close_obj","GetAccountInfo","GetBlocked","eventRename","do_look_on_obj","direct_initfix","GetParty","chunk_string","GetRequestResponses","direct_heal_str_of_liv","can_drop_wrd_wrd","log_file","GetDefiniteShort","SetFuelAmount","GetListen","SetTouch","SetHB","cmdPickClass","do_give_obs_to_liv","do_stand_up","do_whisper_in_wrd_to_liv","can_teach_liv_to_str","GetHelp","GetMaxLoad","cmdSearch","GetOpacity","RemoveNonTargets","can_request_str_from_liv","trr","eventSkin","SetClan","eventPrintDamage","eventCmdNoop","eventMoveLiving","BaseMap","do_pour_obj_on_obj","eventRoll","SetInventory","do_give_liv_wrd_wrd","do_say_to_liv","can_teach","GetHostiles","GetClimateExposed","GetExperiencePoints","to_html","direct_put_obj_word_obj","SetAmmoType","GetClient","GetFlyRoom","can_pray_for_str","GetAutoHeal","direct_delete_exit_str","direct_swivel_str","GetEquippedLimbs","eventHelp","direct_use_obj","can_pray_for_str_against_str","SetPreventPut","direct_party_wrd_liv","user_name","SetWear","room_environment","AddTitle","SetMagicCost","direct_look_in_obj","GetNativeLanguage","can_rock_obj","SetVendorType","direct_read_str_word_obj","do_whisper_in_wrd","do_fish_with_obj","do_turn","direct_shoot_liv_with_obj","SetLeader","can_balance_obj_to_obj","GetMaxCells","RemoveEncounter","can_whisper","GetAction","eventDeleteExit","GetDrainRate","eventCustomizeStat","GetLastSave","RemoveFishing","cmd_pushd","bool_reverse","direct_get_wrd_wrd_from_obj","GetTrainedSkilles","SetHistorySize","remove_article","eventSocketClosed","can_sit_up","can_nominate_str","direct_farsight_liv","eventDetect","ReadBookIndex","query_base_currency","indirect_reload_str_obj","AddSkillBonus","SetArmorType","do_show_obj_liv","do_target_liv","can_climb_obj","time_event","sefuns","InputPassword","SetMuted","do_give_liv_obs","direct_ask_liv_about_str","CanUnequip","GetInfect","eventEndVoting","do_attack_lvs","can_shout_in_wrd_str","do_give_liv_obj","direct_judge_obj_to_obj","CanKneel","direct_bless_obj","GetClanSkill","RemovePress","sefun_exists","do_deactivate","direct_sit_down_word_obj","GetProtect","can_search","do_reconnect","indirect_unlock_obj_with_str","indirect_show_liv_obj","SetNoBotCondition","do_donate_str_str","query_reset_number","do_enter","space_trim","percent_of","GetStudents","teller_check","do_rock_obj","indirect_lock_obj_with_str","do_pulsecheck_lvs","eventCmdDele","eventDeploy","GetStats","GetCellType","SetWander","direct_look_at_obj_word_obj","find_object","missed_shot","direct_steal_obj_from_liv","GetEffectiveVision","shutdown","GetCharacters","CanShake","GetCanonicalId","convert_name","catch_tell","GetFlowLimit","direct_calm_liv","eventTeachLanguage","eventCmdMkd","SetSurroundAreas","InputRealName","eventMount","do_jump_in_obj","SetFrequency","clean_up","flicker","isBag","GetMagnum","end_post","can_modify_obj_str","SetMag","CanPutInto","ShowRounds","GetSitters","can_scratch_str_on_obj","InputRace","GetHistoryList","SetBroken","can_pour_obj_in_obj","find_deep_inheritors","GetStat","SetPowerType","can_look","SetMountOwner","CanBurn","can_climb_out_of_obj","GetVirtualSea","can_listen_to_obj","GetAutoResets","GetTalkResponses","currency_inflation","eventHearTalk","can_remove_obj_out_of_obj","GetCombatBonus","SetMaxStaminaPoints","GetSlowDecay","indirect_pulsecheck_liv","GetBaseRadiance","SetClosed","do_look_in_obj","eventFlood","do_rock_wrd_obj","GetCanLock","CanDrink","eventManipulate","SetFollowed","AddTerrainType","direct_cast_str_on_obj","GetMuffed","SetEnter","SetAC","GetMapType","can_scratch_on_str_on_obj","direct_poison_obj_with_obj","SetAutoDamage","GetEmoteResponses","eventRemoveItem","RemoveExtraChannels","direct_search_obj","can_dest_obj","send_messages","GetClanObject","eventForce","GetMaxClass","direct_read_obj_at_obj","GetProperties","SetRank","do_roll_obs_on_str","do_unload_obj_word_obj","do_pour_obj_in_obj","InitComposition","SetLifeSpan","GetCurrentEnemy","PutCoins","GetPolyglot","eventStab","GetItemsMap","GetLightSensitivity","GetSpellBook","can_reload_str_obj","getuid","do_shout_str","CanPick","GetShadowedName","AddQuestSkillPoints","eventNegotiateObstacles","AddRequestResponse","PutCheck","SetWimpy","eventCheckBody","GetBodyMass","SetMorality","SetCurrentEnemy","can_smoke_from_obj","GetSky","GetString","direct_befriend_liv","do_resurrect_obj","morse","can_cast_obj","GetGravity","GetRequiredMagic","eventUnlock","eventRetire","direct_look_at_obj","GetTitleLength","CanOpen","generate_tmp","SetItem_func","SetWrite","AddPressure","GetSinkRoom","can_free_liv_from_obj","can_get_obj_from_obj","can_apply_obj_obj","do_pray_for_str_against_str_for_liv","GetEnemies","eventFall","can_extinguish_obj","direct_get_obj_out_of_obj","GetLanguageName","DisableActions","direct_pull_obj","indirect_buy_str_from_liv","direct_annihilate_at_liv","do_pour_from_obj_in_obj","eventRide","direct_veil_liv_against_wrd_wrd","can_echo_str","AllowGet","GetPlayerKill","do_dest_obs","SetMinHeat","eventRock","cmdShow","do_dest_obj","can_turn","ResetLocation","direct_drive","convert_string","GetMaxStatPoints","direct_arrow_liv","IsFollowing","SetDrainRate","GetWhereBlock","list","GetMasterMap","currency_rate","GetSkillLevel","SetAutoHeal","eventBackstab","check_privs","GetSpecialTarget","FindPrevDir","GetCouncilMember","GetDoor","can_unload_obj_word_obj","GetFollowers","do_bury_str_with_obj","AddProperty","ResetSurroundExits","eventUnload","CanAbandon","RemoveKnock","direct_pull_str_from_obj","can_ring_obj","GetHeat","direct_attack_liv_only","indirect_shoot_obj_with_obj","GetUniqueId","SetExtraChannels","debug","isPlayer","eventWriteCallback","strip_flags","SetMaxCells","SetVirtualExits","do_cast_obj","can_wear_obj_on_str","alphap","GetCarriedWeight","eventDeleteObject","CreateDoor","can_press_str_on_obj","GetFurnitureName","eventLoadInventory","can_bait_obj_with_obj","direct_blades_liv","can_shake_str_on_obj","can_pulsecheck_liv","isDirectory","direct_sacrifice_obj_to_str","do_whisper_in_wrd_to_liv_str","cmd_alias","can_whisper_in_wrd_to_liv","AddLimb","SetClanSkill","eventDeteriorate","nominative","SetBlocked","SetLightLevel","do_modify_obj_str","eventDrop","GetWorn","eventSocketClose","SetFirearmName","direct_empty_obj","RemoveLimb","eventUnequip","cmdAppraise","do_cast_str_against_str","GetRequiredStamina","GetLive","eventBring","do_load","do_delete_obj","SetMaxLoad","SetOpacity","do_echo_str","can_follow","GetDig","can_put_obs_obj","cardinal","GetDie","SetNews","RemoveTalkResponse","SetChance","eventUninstall","local_ctime","direct_sit_word_obj","ChangeLevel","conjunction","RemoveChannel","SetItem_desc","GetCreatorAge","do_wear_obj_on_str","GetGaggedType","eventCast","GetEmptyName","SetFlowLimit","indirect_apply_obj_word_obj","SetSide","can_teach_str_to_liv","AddSmell","can_close","GetRetain","GetActionsMap","append_line","eventTrainSkill","SetInvis","SetFlyRoom","do_look_at_obj","ReadBook","CanPoison","GetPress","explode_list","do_ring_obj","do_jump_off_of","false","can_copy_str","domain_admin","GetPacifist","add_event","GetSpellType","SetCellType","snoop","do_reload_str_obj","FoundTraps","can_stealth","can_swim_str","GetCommandHist","can_strike_obj","eventCloseSocket","SetSlowDecay","GetPreventLand","direct_knock_str_on_obj","GetHealRate","do_smoke_from_obj","GetNoTaleMessage","query_host_port","can_read_str_word_obj","do_delete_enter_str","direct_scry_liv","GetModify","eventHistory","direct_can_give_liv_obj","window_size","CanFollow","eventPutInto","eventDismount","can_pull_str_on_obj","AddSave","CanPut","GetName","GetCurrencyMap","direct_demonclaw_liv","SetPull","GetAge","CanGetFrom","can_reload_every_str","eventRadiate","GetNonExits","direct_verb_rule","save_player","SetClass","do_extinguish_obs","cmd_nmsh","can_cast_str_on_str","GetQuestId","GetLimbs","indirect_pick_str_on_obj_with_obj","write_data","do_read_str_on_obj","do_extinguish_obj","can_listen_to_str_word_obj","true","Page","can_shout_str","eventUnQuell","can_befriend_liv","can_put_obj_obj","can_deactivate_obj","direct_wield_obj_word_str","SetAttack","SetSpellBook","GetMaxClones","can_ask_liv_about_str","telnet_privp","SetCruiseInMessage","do_lie_word_obj","eventMarry","eventSwivel","direct_modify_obj_str","direct_consult_obj","can_bump_liv","direct_regen_str_on_liv","CanApply","SetPile","eventList","do_pull_str_on_obj","cmd_remove","levenshtein_distance","CanReceiveMagic","InitializeLocations","SetProtect","direct_steal_wrd_from_liv","direct_give_liv_wrd_wrd","GetMagicProtection","do_attack_liv","starts_with_arr","can_stealth_wrd","can_sit_down_word_obj","do_copy_str","wizardp","RemoveTitle","AgeCheck","do_cast_str_on_str","do_swim_str","SpringTrap","check_include_text","cmdHelp","SetDefaultExits","do_dig_with_obj","SetRarity","eventReceiveLay","SetPolyglot","can_abandon_liv","GetSpellChance","SetHBOverride","GetPileType","getOrigin","eventBuy","GetDuration","indirect_resurrect_obj","eventBuyItem","total_light","do_lock_obj_with_obj","direct_wizunlock_obj","direct_ride_word_str","do_connect","direct_read_obj","eventDestroyEnemy","GetMaxFuel","indirect_shoot_liv_with_obj","direct_ward_liv_against_wrd","do_donate_str_str_to_str","SetBodyMass","AddStatBonus","direct_open_obj_with_obj","do_pulsecheck_liv","do_swivel_str_on_obj","eventTurnOn","SetCorpse","GetStaminaPoints","can_shoot_obj_with_obj","AddQuestStatPoints","can_sell_liv_obs","GetTown","GetEmptyLong","SetHands","direct_enter_obj","direct_burn_obj_with_obj","inventory_accessible","GetProtection","direct_reload_str_obj","LimbCertain","GetNightLong","SetSinkRoom","SetMasterMap","SetPreventGet","truncate","can_cast_str_against_str","tell_room","eventSendMissMessages","direct_show_liv_obj","direct_smoke_from_obj","GetCouncil","SetRace","CanJump","can_activate","direct_look_obj","do_bump_liv","HealLimb","do_shoot_obj_at_liv","SetCanLock","can_speak_in_wrd_str","can_ask_liv_str","GetDoorSide","SetArmed","do_party_wrd_liv","starts_with","SetRequestResponses","GetFuelRequired","can_load_obj","GetMag","GetLong","direct_extinguish_obj","GetLeader","ordinal","eventAbandon","listen_callback","direct_whisper_in_wrd_to_liv_str","cmd_work","do_drink_obj","GetCookie","RemoveMenuItem","GetMaxProtection","can_look_at_str_on_obj","can_sit_word_obj","can_apply_obj_word_obj","SetFuelRequired","SetOwner","eventReadFile","direct_delete_obj_from_here","do_whisper","query_month","GetTaleKeys","GetLine","SetMountStyle","eventFloat","indirect_steal_obj_from_liv","can_load","first","GetMenuItems","direct_activate_obj_on_obj","GetPoisonGas","GetCount","can_get_wrd_from_obj","openHTTPConnection","can_eat_obj","CanStop","direct_close_obj","AddConsultResponse","indirect_sell_obs_to_liv","SetDying","AddFollowBonus","GetKnock","SetGravity","do_evade_liv","EnableActions","do_consult_obj","indirect_free_liv_from_obj","GetNoChanColors","SetEmptyName","query_snooping","AddVisionBonus","direct_unwield_obj","eventBalance","get_doors","do_fly","GetLimb","direct_untrain_liv_to_str","eventCmdUser","percent","direct_pour_obj_out","do_vote_for_str","GetDirectoryShort","SetNoChanColors","SetKeys","eventLockLock","do_activate","set_privs","MinusAmmo","eventCompleteMove","set_tz","direct_animate_obj","direct_pulsecheck_liv","SetSpellType","do_deactivate_obj","indirect_roll_obj_on_obj","sendHTTPGet","GetCombatMove","direct_delete_obj_from_room","CanGive","GetCommercial","direct_strike_obj","do_read_str_in_obj","do_load_obj","can_add_obj_to_here","AddExtraChannels","do_smell_str_word_obj","SubtractRound","GetConsult","collect_moduli","direct_cloak_wrd","direct_scratch_on_str_on_obj","indirect_poison_obj_with_obj","can_say_str","eventCatch","do_put_wrd_wrd_word_obj","find_inheritors","GetSides","query_hour","query_invis","SetBury","direct_attack_only_liv","can_ignore_liv","direct_force_liv_to_str","SetPacifist","do_light_obs","can_climb_word_obj","direct_ask_liv_for_str","GetMillimeter","do_get_obs_out_of_obj","eventTalkRespond","SetParty","indirect_bait_obj_with_obj","first_string_element","SetQuestPoints","CanJoin","do_light_obj","GetDummyItem","do_pray_for_str_for_obj","SetMaxSitters","can_pull_str_from_obj","query_ip_name","file_present_logic","can_dig_obj_with_obj","reflexive","eventGetFrom","CanMarry","GetBroken","can_go_into_str","SetDifficulty","eventTurn","SetMaxClones","SetDamageType","GetListenMap","do_throw_obj_word_obj","can_modify_word_str","SetResetMessage","eventPrepareDig","GetDefaultLanguage","direct_pick_str_on_obj_with_obj","do_ask_obj_str","can_smell","do_add_obj_to_here","SetLivingLong","can_speak","do_consult_str_on_obj","user_path","can_codesay","GetClosed","wrap","MustCarry","GetDeaths","can_shoot_liv_with_obj","do_speak_in_wrd","GetSave","simple_map","indirect_look_at_obj_word_obj","direct_climb_obj","can_add_obj_to_room","query_names","InputGender","adminp","SetCommandFail","cmdListen","SetCoordinates","debug_info","get_object","GetExemptVirtual","GetCharbuffer","ResetBank","GenerateIndex","indirect_get_obj_out_of_obj","can_kneel_word_obj","can_skin_with_obj","RemoveLanguage","SetPick","eventPickLock","net_dead","StartService","can_sell_obj_to_liv","SetCanSit","CanSell","SetMoney","base_name","do_modify_word_str","GetClasses","query_intermud_ip","SetVerb","eventSave","SetNoObviousExits","get_closed","do_unwield_obs","direct_backlash_for_liv_against_wrd","can_show_liv_obj","GetMoneyMap","GetEquippedDescription","SetEmptyLong","SetOpen","RemoveRequestResponse","direct_fireball_at_liv","direct_look_inside_obj","do_unwield_obj","do_add_obj_to_room","RetrieveCmdCallback","do_shoot_obj_at_obj","direct_deactivate_obj","can_use_obj_to_str","GetConsultResponses","LoadRevolver","cmdDebugAll","indirect_show_obj_to_liv","GetQuests","random_numbers","creatorp","GetCommandResponse","SetTalkResponses","do_give_obs_liv","EchoCommand","SetNightLong","GetHiddenDoor","SetDuration","CanSit","CanSwim","GetPrimarySkills","get_objects","eventTouch","can_move_str_on_obj","GetTitle","AddQuest","eventCompareLimbs","do_sell_obj_to_liv","eventCruiseMessages","GetReads","indirect_put_obs_obj","arrange_string","capitalize","ambassadorp","GetGuestName","do_remove_obs","eventCmdPort","input_to","can_steal_obj_from_liv","GetUniqueFileName","GetSpell","SetManipulate","GetEmptyShort","direct_whisper_in_wrd_to_liv","trim","do_unload_obj","do_remove_obj","eventDestroyUndead","SetQuestId","indirect_get_obj_from_obj","SetLightSensitivity","can_drink_obj","AddFish","SetGround","eventGetFile","SetLivingShort","CheckGuardeds","GetVisibleGrid","RemoveFish","SetCanStand","alpha_strip","CanRoll","GetEnterMessage","GetTraps","GetEquipped","can_look_on_obj","direct_roll_obj_here","ReceiveCanonicalId","do_move_str_on_obj","direct_wear_obj","SetStats","CanDig","do_remove_obs_out_of_obj","builderp","RemoveSmell","SetMenuItems","parse_comm","direct_gale_liv","SetPoisonGas","GetTellHistory","GetWebPage","query_day_light","abort_edit","direct_activate_obj","can_listen","homedir","eventShoot","SetEnterMessage","GetTerrainType","can_news_str","direct_uninstall_obj","SetSkills","SetDoorSide","can_evade_liv","can_pour_obj_out","can_turn_obj","SetRequiredMagic","SetDamage","can_put_wrd_wrd_word_obj","GetMissingLimbs","GetMaxMagicPoints","GetDrainable","can_donate_str_str_to_str","AddStuff","do_climb_word_obj","do_listen_to_str_word_obj","GetAlcohol","direct_bury_str_with_obj","imc2_mud_name","do_backstab_liv","absolute_value","AddNonTargets","do_give_obj_liv","SetMissingLimbs","GetFirearmType","query_night","SetMaxFuel","do_whisper_to_liv_str","can_target_liv_only","can_pray_for_str_for_obj","tell_player","shout","GetLuck","CreateGuest","can_pour_from_obj_into_obj","do_marry_liv_to_liv","can_open_obj_with_obj","eventListenCallback","indirect_put_obj_obj","indirect_show_obj_liv","GetChance","GetAmbientLight","can_crawl_into_str","GetRespirationType","eventJudge","GetClanName","eventNextDay","SetSpecialTarget","can_delete_room_str","do_fill_obj_with_obj","eventRemoveTmp","indirect_give_liv_obj","SetAmbientLight","SendWeaponMessages","GetCharmode","do_kneel_word_obj","eventOpenAccount","do_ring_str_on_obj_with_obj","AddFood","direct_ignore_liv","can_light_obj","GetPlayerPaused","do_touch_obj","eventShowInterior","direct_challenge_liv","do_target_liv_only","eventCmdCwd","do_news_str","eventReceiveThrow","eventPrint","do_cast_str_on_str_of_obj","GetTargets","do_turn_obj","do_ride_into_str","direct_swim_into_str","AddCaffeine","can_look_str","CanGet","can_pray_for_str_against_str_for_liv","can_get_obj_out_of_obj","cmdList","SetPlayerPaused","can_fish_with_obj","do_unlock_obj_with_str","eventPostRelease","can_enter_into_str","eventLock","indirect_give_obs_to_liv","SetDefaultRead","AddKey","Expertise","do_stand","do_stealth","do_use_obj_to_str","do_describe_str","save_file","GetRetainOnDeath","eventDeposit","do_sink_down","GetSpeakColor","begin_post","replace_nickname","do_delete_room_str","direct_give_wrd_wrd_to_liv","do_initfix_word","CheckPower","AllowPass","do_fill_obj_from_obj","GetBoundary","GetDirection","can_add_obj","SetAmmo","eventWelcome","GetPresses","do_pick_str_on_obj_with_obj","direct_arrow_at_liv","can_createfix_word","SetMagicPoints","SetType","eventRepair","RemoveTerrainType","direct_knock_on_str_on_obj","SetMealAction","do_touch_str_word_obj","indirect_reload_every_str","SetWanderPath","eventRestoreSight","reset_prompt","cmdBrowse","direct_get_obj_obj","do_dig_str_with_obj","direct_climb_word_obj","eventEnter","livings","eventDescribeEnvironment","SetMaxCapture","GetLocalCurrency","direct_holylight_liv","do_balance_obj_str_obj","eventLoad","eventServerAbortCallback","SetNoCondition","HandleTeller","do_look_str","SetDollarCost","GetResistanceMap","eventBlind","eventRevive","SetNightLight","GetSpeed","RedrawScreen","SetNoTaleMessage","GetEnterMap","query_cwd","direct_shoot_obj_at_liv","query_season","do_knock_on_obj","SetLit","SetPoints","SetConsult","GetRarity","GetSkillModifier","RemoveStatBonus","SetEnters","eventWimpy","eventRefuel","do_get_obs_obj","can_unlock_obj_with_str","can_look_in_obj","CheckEncounter","cmd_nickname","direct_turn_obj_on","AddDrink","do_wizunlock_obj","GetCanClose","member_group","direct_turn_off_obj","eventExecuteQueuedCommands","direct_roll_obj_on_obj","AddItem_func","direct_fly_into_str","GetScratch","CanBoobytrap","to_object","eventWrite","direct_portal_to_liv","SetStorageRoom","do_roll_obs_here","SetComposition","can_activate_obj","reverse_memberp","direct_lock_obj_with_obj","query_local_functions","do_mount_liv","round","GetFullExitData","direct_swivel_str_on_obj","is_living","objective","CanShoot","can_give_obj_to_liv","RestrictChannel","direct_use_obj_to_str","can_zap_liv","query_player_money","do_crawl_into_str","GetRiders","eventWriteDestruct","can_reload_str_word","CanManipulate","can_get_wrd_out_of_obj","direct_createfix","RestoreLimb","eventSteal","direct_remedy_liv","damerau_levenshtein_distance","indirect_get_obs_from_obj","strip_article","SetBurntValue","CanRemoveItem","GetTrainingSkills","GetMealType","direct_annihilate_liv","direct_listen_to_str_word_obj","GetCommands","GetVoteStatus","SetTapped","SetDrainable","CanRock","do_pour_obj_into_obj","eventEat","do_knock_obj","can_balance_obj_str_obj","GetFish","SetPress","do_learn_str_from_liv","hiddenp","can_disarm_obj","CanCastMagic","format_page","can_put_obj_word_obj","eventConvertObject","numericp","GetRange","minutes","GetLimbParent","SetClasses","GetDamagePoints","eventRetryCommand","do_give_obj_to_liv","SetStaminaPoints","direct_aura_liv","do_enter_into_str","direct_cleanse_liv","can_learn","can_wield_obj_word_str","GetVerbs","do_deactivate_obj_on_obj","do_reload_str_word","do_get_obj_obj","GetSmell","can_resurrect_obj","center","do_kneel_down","SetDamagePoints","logon","GetNonLocalFee","Push","eventFish","GetLanguage","can_steal_wrd_from_liv","eventReconnect","direct_dismount_liv","RemoveConsultResponse","GetScratches","do_jump_from_obj","do_eat_obj","do_mail","do_createfix_word","singular_array","valid_edit","direct_blades_at_liv","AddShadow","can_touch_obj","can_rock_str_on_obj","AddRead","eventAddCandidate","CanDrop","direct_fly_word_str","CanRelease","direct_cast_str_on_str_of_obj","eventRestore","SortEnemies","GetMobility","GetAllLanguages","SetTale","CanInstall","AddMass","GetNoBotCondition","GetMelee","RemoveRead","GetSpouse","eventServerReadCallback","GetItems","direct_convert_liv","direct_show_obj_to_liv","eventFire","indirect_delete_obj_from_here","GetMissingLimb","SetAllLanguages","SetClanName","MarriageRequest","eventCmdRmd","do_turn_obj_on","can_sink_down","eventDisarm","can_judge_obj_to_obj","SetPickingQuality","do_press_obj","SetBonuses","GetTrainingModifier","SetLocked","GetFuelAmount","SetCharmode","CanCast","GetRequiredSkill","SetRespiration","query_date","can_roll_obj","RemoveShadow","GetAreaMap","GetBaitStrength","connect","direct_turn_off_obj_on_obj","do_rock_str_on_obj","valid_currency","eventTimeout","eventTeachPlayer","direct_crawl_into_str","do_say_str","SetWebPage","GetSearches","GetPreventDrop","GetFood","do_get_wrd_wrd_from_obj","indent_file","event","AddTeachingLanguages","SetBaitStrength","GetWanderSpeed","direct_mend_liv","can_drop_obj","heart_beat","checkCollapse","SetAttackable","direct_look_at_obj_on_obj","GetItemCondition","do_zap_lvs","SetCruiseOutMessage","GetCombatAction","direct_shoot_obj_at_obj","can_say_to_liv_str","find_player","can_target_only_liv","GetPreventPut","indirect_delete_obj_from_room","cmd_unalias","RemoveQuest","indirect_dig_obj_with_obj","can_look_at_obj","can_bury_str_with_obj","GetNoDecay","do_jump_off_of_obj","do_unload","query_time_of_day","GetVendorType","create_message","SetCombatAction","GetCombatVerbs","can_get_obj","do_codesay","do_ring_obj_with_obj","timestamp","direct_smell_str_word_obj","cmdDial","dump_socket_status","eventShadow","web_translate","GetSmellMap","do_turn_obj_off","socket_address","GetFollowBonus","can_open_obj","can_kneel","indirect_burn_obj_with_obj","can_turn_off_obj","can_fly_into_str","make_workroom","GetCustomXP","GetVisionBonus","can_listen_obj","can_pick_str_on_obj","eventCompleteChar","do_roll_obs","PreAddEnter","GetTrainingPoints","returnChannels","write","eventUnlockLock","cmdTouch","do_look_at_obj_word_obj","write2","CanPeer","hostResolved","CanCapture","do_roll_obj","do_target_only_liv","GetTeachingFee","GetLoginTime","GetResetNumber","authenticate","GetCanClimbCarried","GetMaxFlask","do_drop_obs","CanRequestCitizenship","direct_throw_obj_word_obj","can_mount_liv","can_roll_obj_on_str","can_fly_str","do_drop_obj","direct_consult_str_on_obj","do_pour_from_obj_into_obj","GetMinCells","GetStatLevel","repinkfish","GetPlayerob","SetCount","direct_rock_obj","CanSteal","SetKnock","direct_unlock_obj_with_obj","SetCanClose","do_pick_str_on_obj","terminal_type","do_enter_str","direct_show_obj_liv","eventMagicRound","GetCurrency","domain_master","CanLogin","GetNextLevel","SetExemptVirtual","eventEncounter","eventNewConnection","GetSleeping","direct_drink_str_from_obj","direct_give_liv_obs","indirect_toss_obj_at_obj","month","PickTale","can_knock_obj","eventRequestDivorce","direct_give_liv_obj","eventReEnterGame","do_reset","GetGermName","absolute_path","translate","GetGround","do_open_obj","do_roll_obj_on_str","direct_disarm_obj","direct_copy_obj_to_obj","InputCapName","eventFill","ReceiveChars","CanGo","read_matching_line","direct_turn_on_obj","direct_marry_liv_to_liv","SetConsultResponses","SetHelp","mkdir_recurse","copy","can_reload_obj","SetVirtFile","do_shake_obj","doAutoUnload","can_dismount_liv","ResetCurrency","AddTalkResponse","GetChannels","eventError","eventServerWriteCallback","AddAssets","do_roll_obj_here","GetPlainShort","SetMealType","restrict","eventDestruct","continue_mail","do_search_obj","GetSkills","GetNoSpells","strip_colors","GetMountOwner","wipe_inv","expand_keys","eventCommandNPC","do_uninstall_obj","GetDamage","StatReport","AddQuestPoints","remove_event","SetRefuelable","can_put_obs_word_obj","GetMessage","GetCommandNumber","GetReligions","direct_remedy_str_of_liv","do_party_wrd_wrd","can_mail","GetShakes","GetTellingTale","GetMaxCarry","GetEscapeChance","check_light","eventDisconnect","can_get_wrd_wrd_from_obj","GetCustomStats","SwitchLocations","do_swivel","GetDeities","GetAutoDamage","eventCheckHealing","GetCost","direct_jump_word_word_obj","SetMedium","SetEscapeChance","do_say_to_liv_str","InputName","can_press_obj","convert_value","SetLanguage","SetScratch","GetSearchPath","GetReverseDirection","do_sink","AddLanguagePoints","shb","AddBank","GetEncumbrance","SetLoaded","eventInstall","eventRequest","GetCure","GetLastEnvironment","eventComplete","direct_rock_wrd_obj","RemoveShake","GetLit","can_lock_obj_with_obj","do_load_obj_word_obj","direct_backlash_for_liv","can_swivel_wrd_obj","get_dummies","eventWriteFile","SetPersistent","GetRead","SetRequiredStamina","can_swivel_str_on_obj","direct_drink_obj","AddAlcohol","do_pour_obj_onto_obj","RecalculateHist","do_light_obj_with_obj","indirect_reload","direct_dig_str_with_obj","SetGagged","GetFight","can_swivel_obj","direct_teleport_to_liv","GetMass","DoneTrying","direct_fill_obj_with_obj","can_consult_obj","AddStaminaPoints","can_party_wrd_liv","indirect_pour_from_obj_into_obj","direct_palm_liv","unQuiet","GetInCombat","can_look_at_obj_word_obj","eventProcess","QueryBane","do_swim_into_str","GetClimbs","eventMeleeRound","CanConsult","eventCure","direct_reload","GetObviousExits","direct_whisper_to_liv_str","do_remove_obj_from_obj","direct_dest_obj","do_learn_to_str_from_liv","can_deactivate_obj_on_obj","ModCharge","direct_evade_liv","GetFlaskContents","unguarded","GetConjure","GetSkillClass","eventRead","cmdEnter","do_poison_obj_with_obj","SetObviousExits","SetTitle","high_mortalp","ResetCurrentEnemy","do_buy_str_from_liv","price","strip_colors_old","SetReads","do_turn_on_obj","set","do_jump_through_obj","do_add_obj","can_knock_str_on_obj","SetSpell","visible","direct_frigidus_liv","eventMoralAct","eventCmdType","GetSpellLevel","can_boobytrap_obj_with_obj","direct_capture_liv_word_obj","GetHeartRate","direct_fill_obj_from_obj","direct_listen_obj","CanTurn","direct_initfix_obj","GetNoModify","SetFishing","direct_cast_obj","AddSearch","can_uninstall_obj_word_obj","SetClose","GetErrorMessage","strip_colours","GetCaptives","eventParse","CanBreathe","SetUndeadType","eventSmoke","GetBriefMode","direct_pour_from_obj_into_obj","GetQuest","memberp","SetStat","eventPage","IsCouncilMember","indirect_burn_obs_with_obj","eventFree","direct_jump_word_obj","SetErrorMessage","SetDeathEvents","direct_say_to_liv_str","can_show_obj_liv","eventCapture","eventRequestCitizenship","GetLightLevel","SetCanTrain","SetCustomXP","direct_corrupt_liv","ChangeClass","AddFollower","SetRetainOnDeath","SetSocketType","can_enter_str","can_ask_obj_str","GetPoints","direct_light_obj","can_give_liv_obj","GetEnters","eventEdit","RemoveSearch","set_board_id","print_long_string","ProcessHTTPResult","SetPoisonUses","SetAreaMap","SetMaxFlask","GetDisableChance","can_remove_obj_from_obj","GetKeepalive","can_give_liv_wrd_wrd","GetGhost","GetEverFill","AddBait","GetSynonyms","GetMaxPlayers","eventDumpFiles","eventPut","direct_force_liv_str","direct_drain_liv","query_dupes","direct_delete_obj_from_obj","SetUnique","direct_touch_str_word_obj","GetFlaskUses","direct_createfix_obj","SetMinCells","system_month","can_poison_obj_with_obj","GetCandidates","load_object","GetMaxSkillPoints","RemoveProperty","SetStaminaCost","indirect_give_obs_liv","can_echo_to_liv_str","CanUse","can_shake_obj","GetPassword","RemoveHostile","testp","add","replace_matching_line","SetCurrency","direct_compare_obj_to_obj","can_ride_str","direct_reload_obj","geteuid","SetLocalCurrency","GetSkillsMap","SetSleeping","atoi","eventBuryItem","leaderp","direct_install_obj_word_obj","SetNoDecay","direct_gaze","dbz_colors","SetGermName","can_ring_str_on_obj_with_obj","SetPoisonStrength","can_unwield_obj","say","do_zap_liv","users","can_follow_liv","direct_fly","eventSearch","do_swivel_wrd_obj","ContinueTraining","SetReligions","GetTapped","direct_search_str_word_obj","GetManipulates","SetSkillModifier","eventEnemyDied","AddPoisonGas","GetBytes","do_echo_to_liv_str","GetConsults","abs","eventInitiate","SetAnnoyblock","GetMaxItems","DestructEmptyVirtual","indirect_throw_obj_into_obj","query_year","SetNoSpells","parse_command_plural_id_list","can_rock_wrd_obj","eventCmdStou","direct_pour_obj_into_obj","indirect_add_obj","direct_acidspray_liv","eventCmdStor","SetTrainedSkills","GetRealName","SetUndead","can_roll_str_on_obj","CanSacrifice","eventExtinguish","can_body_liv","indirect_put_obj_word_obj","SetSaveRecurse","isDummy","GetHeartModifier","do_initfix_obj","GetMagicChance","day","direct_rejuvinate_liv","indirect_add_obj_to_here","can_pick_str_on_obj_with_obj","eventRestoreEquip","can_sink","indirect_turn_off_obj_on_obj","GetBuffer","SetMaxCarry","AddMagicPoints","convert_newline","eventGetMoney","GetBankName","SetDoor","eventCheckLight","cmd_read","GetRemoteTargets","indirect_drink_from_obj","SetMaxFishing","GetSize","SetCanBefriend","SetHeat","do_ride_str","direct_swim_str","eventAsk","eventStart","UnrestrictChannel","indirect_give_obj_liv","GetTrapDescription","clean_array","GetPosition","GetFirearmName","direct_swivel_obj","MustWield","direct_learn_str_from_liv","CheckCharmode","AddSkill","do_ignore_lvs","GetHBOverride","eventBefriend","do_roll_str_on_obj","InputEmail","this_agent","do_news","direct_lie_word_obj","GetBodyType","SetWorn","AddMagicProtection","GetBank","present_bonus","GetLocked","SetCanCommand","SetClimb","GetBane","query_charmode","path_prefix","indirect_add_obj_to_room","season","GetRestrictedChannels","SetSpeed","alpha_crypt","do_light_obs_with_obj","cmdAll","local_time","query_access","system_day","GetShake","reap_list","SetAmmoFile","indirect_judge_obj_to_obj","eventConsult","GetDestructOnClose","direct_bite_liv","do_copy_obj_str","direct_wear_obj_on_str","query_minutes","do_delete_obj_from_here","LoadBook","GetEnemyNames","indirect_get_obs_out_of_obj","SetResistance","AddPoison","direct_dig_with_obj","do_ignore","do_body_liv","GetPreventGet","direct_bump_liv","atomize_array","indirect_sell_obj_to_liv","direct_wizlock_obj","GetDefenseChance","do_remove_obs_from_obj","direct_swivel_wrd_obj","cmd_edit","GetLimbChildren","SetMessage","process_input","GetEmail","CanLock","cmdQuit","SetLanguageComprehension","do_teach_liv_to_str","do_smell","can_lie_down","valid_snoop","do_speak","user_names","CanSmoke","GetLastCommand","cmdPrice","can_stop_str","SetDeities","indirect_zap_liv","reap_other","SetBriefMode","can_get_wrd_wrd_out_of_obj","hour","SetTrainingModifier","direct_turn_obj_on_obj_off","eventPauseMessages","eventLight","indirect_unlock_obj_with_obj","GetDrink","AddRider","PlusAmmo","do_get_obs","cmdParseRefresh","CanDivorce","do_pour_out_obj","GetEmoteResponse","direct_touch_obj","do_bury_obj_with_obj","RemoveDig","indirect_lock_obj_with_obj","SetNoModify","do_get_obj","add_sky_event","eventCastVote","do_delete_obj_from_room","SetCanFly","SetDefaultLanguage","GetMountStyle","continue_post","eventMail","SetKeepalive","GetSkillBonus","do_turn_on_obj_word_obj","query_common_ascii","GetFuelType","do_smell_obj","SetFlaskUses","bearing","do_go_str","AddLead","RecurseLocations","receive_message","displayLong","SetRange","StartServer","eventStand","CanLoad","GetHealing","GetEncounter","do_strike_obj","can_ride_into_str","can_learn_to_str_from_liv","eventLoadObject","SetExchangeFee","can_drink_from_obj","CanFly","direct_pull_str_on_obj","GetTrapLevel","SetSmell","GetStrength","can_fill_obj_with_obj","AddStatPoints","do_fly_str","itoa","eventPoison","GetFileName","GetRechargeable","eventCompleteHeal","SetEverFill","time_elapsed","SetSynonyms","do_drop_wrd_wrd","do_lie_down","direct_load_obj","SetConjure","do_stop_str","do_dismount_from_liv","do_wield_obs","CeditCollate","StaminaCost","GetBait","AddTouch","SetRechargeable","consolidate","can_dest_str","do_wield_obj","GetStatus","eventBreak","write_callback","GetDestroyOnSell","direct_follow_liv","CanScratch","AddEnemy","do_shout_in_wrd_str","StopServer","SetDenominator","SetPassword","eventFollow","SetMelee","mud_currencies","SetDoorStopped","CheckActions","GetDead","SetItems","eventBlockIp","answers_to","do_roll_obs_on_obj","GetLevel","securep","AddBodyMass","can_get_obs_obj","SetDestructOnDrop","can_withdraw","do_read_str_from_obj","do_activate_obj_on_obj","groups","do_pray_for_str","can_fill_obj_from_obj","do_wizlock_obj","CanDigWith","GetShadowObject","SetTown","AddLocation","GetOpenFee","can_look_at_obj_on_obj","WoundLong","GetMaxSitters","eventStartVoting","eventBait","can_cast_str","eventPress","councilp","GetDifficulty","direct_offer_obj","do_jump_across_obj","ConfirmPassword","GetWield","GetDamageType","GetSaveName","socket_names","SetShadowObject","GetMoralityDescription","GetCanBite","CanAttack","GetLivingLong","arrcmp","direct_turn_liv","eventLogConnection","cmd_cd","GetPileAmount","direct_install_obj","GetLimbClass","GetLastPuff","can_smell_str_word_obj","AddRound","Setup","SetMaxItems","eventSit","can_say_to_liv","newline_trim","can_delete_obj_from_here","GetMessages","do_boobytrap_obj_with_obj","can_lie_word_obj","can_move_obj","request_vis","SetRealName","GetLockStrength","do_uninstall_obj_word_obj","direct_mount_liv","indirect_put_obs_word_obj","GetBodyComposition","do_nominate_str","can_wizunlock_obj","ordinalp","GetPressure","GetMedium","performDivorce","doMagUnload","eventTalkHist","GetShade","SetLong","do_yell","eventTeach","do_dest_str","do_climb_out_of_obj","eventEnterGame","eventTrainLiving","can_delete_exit_str","continue_followup","direct_deactivate_obj_on_obj","eventCreatePlayer","CanBefriend","SetBankName","SetLockStrength","GetMaxAmmo","can_news","eventSpreadPoison","cmdListClasses","GetLoaded","direct_buy_str_from_liv","can_dig_with_obj","GetClan","eventCruise","can_throw_obj_word_obj","ResetLevel","GetHost","query_board_id","direct_knock_obj","do_jump_into_obj","do_withdraw","can_consult_str_on_obj","GetDoors","snooperp","GetDeterioration","SetPosition","create","GetMount","can_delete_enter_str","can_use_obj","AddItem","file_exists","eventBless","do_crawl_str","get_cmds","direct_train_liv","GetDescriptor","eventDig","can_get_obj_obj","eventDie","direct_connect_str","GetGagged","can_activate_obj_on_obj","GetMutedType","do_cast_str","GetGodMode","RemoveItem","can_delete_obj_from_room","direct_request_str_from_liv","SetBodyType","direct_eat_obj","architecture","GetWear","do_delete_exit_str","can_target_liv","SetRespirationType","can_lead_liv","direct_load_obj_word_obj","GetProperty","GetMaxRecurseDepth","SetLimb","reset_eval_cost","eventContinue","cmdPage","SetAllowSacrifice","can_sit","do_speak_str","GetMaxHealthPoints","GetManipulate","SetPerforated","eventCheckProtection","AddCommandResponse","GetSacrificeType","GetNeighborCoords","do_drink_from_obj","CanLight","newbiep","do_read_str_of_obj","SetWeaponType","do_move_obj","add_article","eventBoobytrap","can_deactivate","findobs","add_maps","SetPermitLoad","eventCharge","GetMissingLimbParent","GetBurnRate","GetNeighbors","init","cmdParse","erase_prompt","valid_timezone","GetWimpyCommand","can_pour_obj_into_obj","do_drive_str","can_turn_obj_on","eventWear","eventWeaponAttack","GetQuestPoints","SetGuard","close_callback","do_get_obj_from_obj","eventUnshadow","eventPrepareBury","reap_dummies","indirect_delete_obj_from_obj","AddChannel","SetWimpyCommand","direct_light_obj_with_obj","can_smell_obj","GetLogHarass","direct_command_str_to_str","cmd_eventDestruct","SetSearch","eventDivorce","GetNoReplace","direct_press_obj","do_echo","CanStand","do_look_at_str","direct_scratch_obj","can_shout","indirect_compare_obj_to_obj","CancelCharmode","socket_ip","do_install_obj","SetEncounter","AddEnter","direct_add_obj_to_here","objects","direct_listen_to_obj","restore_inventory","eventTrainSpell","RemoveTeachingLanguages","GetCommandFail","GetWielded","Spent","SetAdjectives","GetCoordinates","GetCommunicable","SetTrapLevel","can_jump_word_word_obj","GetCombatChance","eventSink","do_lead_liv","indirect_give_obj_to_liv","eventGet","eventReleaseObject","visibility","SetFlaskContents","do_lie_down_word_obj","SetAggressive","GetPK","indirect_reload_str_word","indirect_boobytrap_obj_with_obj","indirect_throw_obj_at_obj","do_throw_obj","SetCommunicable","SetCurrencies","GetVoteRoom","SetFuelType","indirect_reload_obj","CompileNeighbors","eventUnTrainLiving","do_ignore_liv","can_drive_into_str","can_wield_obj","indirect_uninstall_obj_word_obj","can_vote_for_str","reload","indirect_capture_liv_word_obj","displayShort","do_press_str_on_obj","GetShadowed","eventShutdown","do_shake_str_on_obj","GetUnique","GetLead","GetMissingLimbParents","can_cast_str_on_obj","can_shoot_obj_at_liv","direct_modify_word_str","RemovePull","do_balance_obj_to_obj","SetGender","query_os_type","eventKnock","SetStrength","direct_backstab_liv","do_createfix_obj","direct_give_obj_liv","can_install","elderp","remove_access","direct_turn_obj","eventLoadChapters","eventScratch","can_read_obj_at_obj","notify_fail","SetPassiveMode","GetTorso","direct_add_obj_to_room","can_yell_str","CanUnlock","can_unload","CanPress","eventReadCallback","can_sleep","calculate_coordinates","AddRecurseDepth","do_skin_obj_with_obj","do_jump_off_obj","GetValue","can_whisper_to_liv_str","direct_drink_from_obj","do_smoke_obj","RemoveSearchPath","CanFillOther","isGerm","CeditSave","AddHealthPoints","GetTalkResponse","GetWizVision","direct_sell_obj_to_liv","query_day_name","RemoveSkill","eventDigWith","do_teach_str_to_liv","direct_boobytrap_obj_with_obj","do_cast_str_on_obj","mud_name","SetFight","SendMeleeMessages","personal_log","popd","GetShadowedObject","GetEquippedShort","do_lock_obj_with_str","direct_uninstall_obj_word_obj","InitRevolver","direct_say_to_liv","SetDisableChance","GetLivingShort","GetRank","do_codesay_str","eventPour","can_cast_str_on_str_of_str","CanTeach","lpc_file","do_read_obj_at_obj","can_speak_in_wrd","GetCurrentCommand","EvaluateCitizenshipRequest","eventCmdCdup","do_kneel_down_word_obj","can_mail_str","CanDest","can_yell","direct_drain_at_liv","can_whisper_to_liv_in_wrd_str","GetUndead","can_ring_obj_with_obj","do_get_wrd_wrd_out_of_obj","GetWanderPath","SetHealing","GetFurniture","direct_move_str_on_obj","clone_object","eventRemoveBlessing","indirect_fill_obj_with_obj","GetLastError","SetCanKneel","CanUnload","eventExecuteAttack","query_tz","GenerateObviousExits","indirect_install_obj_word_obj","GetVehicleInterior","do_scratch_obj","SetMessages","GetLiers","GetMaxCapture","idle_time_out","do_reload_every_str","can_crawl_str","eventAnnounceCanonicalId","do_wake","can_sit_down","do_yell_str","SetPressure","GetTerminal","admin_email","GetEmptyItem","GetKeyName","CheckPending","GetPort","GetNightLight","set_access","direct_teach_liv_to_str","direct_shake_obj","SetTitleLength","do_scratch_str_on_obj","GetPickingQuality","query_sp","can_attack_liv_only","RemoveRider","direct_target_liv","GetTeachingLanguages","can_speak_str","can_say","GetVisibility","can_touch_str_word_obj","do_give_wrd_wrd_to_liv","indirect_turn_obj_on_obj_off","indirect_fill_obj_from_obj","AddListen","RemoveMagicProtection","SetKey","direct_unload_obj_word_obj","eventReceiveObject","CanReceive","ContinueTeaching","do_nickname","can_roll_obj_here","can_drive_str","SetOpenFee","do_mail_str","do_reload_word","GetItem","direct_missile_at_liv","direct_knock_on_obj","do_knock_on_str_on_obj","GetIp","convert_ascii","TellTale","can_delete_obj","SetProperty","RemoveEmoteResponse","can_uninstall_obj","do_drive_into_str","can_kneel_down_word_obj","SetPoison","GetId","SetInventoryCheck","AddExit","query_night_light","SetRemoteTargets","SetCanBite","direct_turn_on_obj_on_obj","do_attack_liv_only","can_party_wrd_wrd","SetLogHarass","can_swivel","version","CreateVirtualObject","direct_target_liv_only","flat_map","do_judge_obj_str_obj","SetNoReplace","RemoveExit","RemoveListen","can_echo","direct_learn_to_str_from_liv","GetDirectionMap","SetAutoResets","GetRules","date","do_sit_down","GetBonusDuration","GetBurntValue","SetBurnRate","eventThrow","check_string_length","RemoveTouch","ResolveObjectName","RemoveTrainingSkills","GetTalesDir","do_get_obs_from_obj","direct_curse_obj","grepp","indirect_get_obs_obj","direct_fireball_liv","eventCheckPending","SetMaxAmmo","eventClose","RemoveEnemy","AddCarriedMass","atomize_string","SetNativeLanguage","do_kneel","can_pull_obj","query_unique_name","can_throw_obj","do_jump_onto_obj","can_shoot_obj_at_obj","GetMagicPoints","GetTalkHistory","GetNews","GetRequestResponse","do_befriend_liv","get_path","SetSource","SetClanObject","can_ask_liv_to_str","SetProperties","AddSurcharge","grant_access","can_backstab_liv","GetHB","do_speak_in_wrd_str","can_give_obj_liv","GetNoClean","eventCmdList","GetSaveString","can_give_wrd_wrd_to_liv","GetSide","eventSuffer","direct_add_obj","SetTax","CanKnock","direct_bury_obj_with_obj","AddPartyQuest","SetLongAndItems","eventDrain","CanSwivel","can_turn_on_obj","can_whisper_to_liv","SendUptime","direct_send_str_to_str","eventCollapse","GetStatsMap","eventListen","direct_frigidus_at_liv","SetGodMode","restart_heart","CanFree","RestoreObject","can_knock_on_str_on_obj","GetNoCondition","can_swim_into_str","can_learn_str_from_liv","direct_shield_liv","query_base_rate","set_eval_limit","can_load_obj_word_obj","can_smoke_obj","GetCannotInfect","isFreshCorpse","do_get_wrd_from_obj","eventConvert","eventRemoveCandidate","do_alias","can_pour_obj_onto_obj","indirect_pour_obj_into_obj","SetCanClimbCarried","SetWizVision","cache_commands","GetInternalDesc","can_enter","do_sell_liv_obs","GetPull","MoveBack","can_attack_liv","SetCannotInfect","SetPreventLand","direct_command_liv","do_sell_liv_obj","AddSkillPoints","can_ask_str","CanTurnOn","InputCre","SetPlayerKill","do_pull_obj","query_door","GetExits","SetInternalDesc","GetStorageRoom","GetVisibleRiders","GetTouches","direct_dismount_from_liv","direct_climb_out_of_obj","check_memory","eventBurnOut","event_pending","can_describe_str","indirect_get_obj_obj","indirect_add_obj_to_obj","query_mp","SetTitles","direct_get_wrd_wrd_out_of_obj","GetJumps","can_initfix_word","AddExperiencePoints","SetWhereBlock","SetPistolType","eventSelectClass","GetMatching","cmd_post","eventEvade","receive_snoop","isFile","eventPull","GetAssets","more","ConfirmName","GetWieldingLimbs","SetLastError","GetAttackable","reset","SetShake","calculate_slope","direct_soulseek_liv","can_marry_liv_to_liv","GetSkill","do_sit_word_obj","SetCharge","can_wake","GetBaseFile","eventInfect","do_party_wrd","SetEmptyItem","AddMuffed","eventExchange","eventReceiveSit","do_body","direct_zap_liv","item_list","GetPagerPrompt","SetEmail","match_command","SetDestroyOnSell","do_dig_obj_with_obj","SetFish","inventory_visible","eventCreateDirectory","bitshiftedp","direct_roll_obj","GetPulls","SetEmoteResponses","SetSpellChance","GetTrapType","status","direct_give_obj_to_liv","eventMove","ContinueHeart","can_knock_on_obj","GetStatClass","rusage","GetRestrictLimbs","SetTerminal","SetOrigin","GetDisabled","direct_reload_str_word","basic_punctuationp","RemoveTrainingPoints","direct_drop_obj","CanReceiveHealing","eventKillEnemy","RemoveMuffed","direct_get_obj_from_obj","direct_turn_obj_off","eventUnjoin","GetRace","tn","indirect_reload_word_obj","indirect_light_obj_with_obj","SetActionsMap","direct_drive_word_str","can_initfix_obj","do_ask_liv_to_str","GetForced","direct_delete_obj","object_file","do_sit_up","GetExtraLong","tc","do_use_obj","eventReceive","eventClimb","RemoveEnter","indirect_dest_obj","do_disarm_obj","domain","cmd_popd","RemoveSkillBonus","CanThrow","do_whisper_to_liv","GetSmells","direct_cast_str_against_str","GetMarriages","GetDayLong","direct_refresh_liv","GetExternalDesc","direct_open_obj","ReceiveChar","last","can_dig_str_with_obj","GetBaseCost","GetWeight","GetRespiration","RemoveCommandResponse","eventTrain","AddHP","CanClose","process_request","CanExtinguish","do_search","SetExternalDesc","can_read_obj","query_windows","GetCediting","eventReceiveAttack","direct_rock_str_on_obj","CheckRooms","query_hp","direct_press_str_on_obj","can_add_obj_to_obj","get_dupes","GetEnterData","GetLines","GetExit","exec","distinct_array","direct_shake_str_on_obj","DestLimb","CanBank","GetShort","SetFood","performMarriage","direct_heal_liv","set_verbs","GetSearch","GetAffectLong","write_prompt","SetKeyName","GetCommandResponses","SetTalesDir","SetLevel","eventReadFtpData","do_shoot_obj_with_obj","GetNonCurrencyMass","GetBurning","GetRefuelable","user_exists","eventLearnSpell","GetKeys","can_attack_only_liv","GetErorMessage","GetNonTargets","can_ask_liv_for_str","direct_pray_for_str_against_str_for_liv","can_look_obj","SetMaxCommandHistSize","eventConnect","AddHeartModifier","chat_command","do_listen_to_obj","UnloadAll","GetTouch","do_jump_over_obj","do_unlock_obj_with_obj","eventWeaponRound","SetSacrificeType","can_enter_into_obj","SetWield","eventPutOn","reload_room","GetCaffeine","GetStrikeChance","eventID","convert_into_ascii","CanMail","AddMoney","direct_teach_str_to_liv","eventSacrifice","get_stack","do_show_liv_obj","archp","eventCmdSyst","can_ignore","SetStrikeChance","eventReceiveEmote","GetBury","direct_get_obj","direct_attack_liv","eventSmell","CanFillMe","eventSpeak","direct_ask_liv_to_str","AddMenuItem","do_swim","GetLastModified","do_attack_only_liv","eventGo","direct_lie_down_word_obj","do_read_obj","GetNetWorth","GetGender","GetLanguageLevel","direct_target_only_liv","clean_newline_file","do_ask_liv_for_str","SetShade","do_look_at_str_on_obj","GetCapName","GetPersistent","GetBonusName","can_dismount","do_apply_obj_word_obj","eventHealDamage","GetLocalFee","CanEvade","do_free_liv_from_obj","CanCarry","SetProtection","AddTrainingSkills","direct_whisper_to_liv","GetAutoStand","currency_value","indirect_shoot_obj_at_liv","do_capture_liv_word_obj","do_install","do_pray_for_str_against_str","resolveHost","do_uninstall","GetMaxCommandHistSize","unpinkfish","GetPoisonStrength","eventBite","possessive","direct_reload_every_str","SetPrompt","eventDelete","eventBury","GetHistory","GetFingers","eventLoadIndex","GetMaxLiers","query_prev_wd","SetMount","query_custom_path","direct_pick_str_on_obj","dump_file_descriptors","CanBuy","direct_smell_obj","direct_fly_str","eventBurn","query_base_value","do_roll","can_look_inside_obj","GetWanderRecurse","can_party_wrd","do_look_obj","do_listen_obj","eventPrepareSkin","do_apply_obj_obj","GetPick","SetMatching","eventStrike","can_go_str","can_body","can_unlock_obj_with_obj","eventDestructDataPipe","SetNoClean","GetConsultResponse","eventEcho","GetRooms","GetMuted","direct_balance_obj_to_obj","direct_roll_obj_on_str","do_pour_obj_out","can_light_obj_with_obj","GetVerb","CanBait","indirect_unload_obj_word_obj","can_unload_obj","can_remove_obj","direct_lock_obj_with_str","can_turn_obj_off","eventSocketError","GetLockable","GetRadiantLight","GetOpen","can_bury_obj_with_obj","eventDonate","do_bait_obj_with_obj","indirect_load_obj_word_obj","unique","direct_wield_obj","GetShadows","AddJump","CanUninstall","SetBaseFile","AddEmoteResponse","destruct","RemoveManipulate","do_look_inside_obj","do_dismount","check_read","GetUndeadType","eventPick","eventUse","SetRadiantLight","eventCreateSocket","can_wizlock_obj","query_max_sp","domain_exists","indirect_turn_on_obj_on_obj","eventCmdRnto","GetLivingMaxCarry","SaveObject","do_add_obj_to_obj","year","CanClimb","GetCreatorBirth","GetRandomLimb","GetDoorsMap","GetVirtual","eventQueueCommand",})
LCFunctions (["getrooms":({"GetRooms",}),"do_install_obj_word_obj":({"do_install_obj_word_obj",}),"getmuted":({"GetMuted",}),"direct_missile_liv":({"direct_missile_liv",}),"processhttpresult":({"ProcessHTTPResult",}),"compare_array":({"compare_array",}),"eventputinto":({"eventPutInto",}),"addsave":({"AddSave",}),"read_callback":({"read_callback",}),"getteachingfee":({"GetTeachingFee",}),"setcanlock":({"SetCanLock",}),"setcommunicable":({"SetCommunicable",}),"setskills":({"SetSkills",}),"getname":({"GetName",}),"removeitem":({"RemoveItem",}),"eventdumpfiles":({"eventDumpFiles",}),"canconsult":({"CanConsult",}),"setpull":({"SetPull",}),"gettellingtale":({"GetTellingTale",}),"replace_line":({"replace_line",}),"setdamage":({"SetDamage",}),"do_reload_obj":({"do_reload_obj",}),"gethiddendoor":({"GetHiddenDoor",}),"do_shoot_liv_with_obj":({"do_shoot_liv_with_obj",}),"getbonusname":({"GetBonusName",}),"getconjure":({"GetConjure",}),"indirect_light_obs_with_obj":({"indirect_light_obs_with_obj",}),"possessive_noun":({"possessive_noun",}),"eventmeleeattack":({"eventMeleeAttack",}),"can_dismount_from_liv":({"can_dismount_from_liv",}),"direct_put_obj_obj":({"direct_put_obj_obj",}),"do_enter_into_obj":({"do_enter_into_obj",}),"directory_exists":({"directory_exists",}),"parse_spell":({"parse_spell",}),"canclimb":({"CanClimb",}),"addlanguagepoints":({"AddLanguagePoints",}),"setitem_func":({"SetItem_func",}),"do_follow":({"do_follow",}),"can_whisper_in_wrd_to_liv_str":({"can_whisper_in_wrd_to_liv_str",}),"move_or_destruct":({"move_or_destruct",}),"direct_detect_wrd_in_obj":({"direct_detect_wrd_in_obj",}),"setresetmessage":({"SetResetMessage",}),"do_empty_obj":({"do_empty_obj",}),"eventbait":({"eventBait",}),"setpile":({"SetPile",}),"iscouncilmember":({"IsCouncilMember",}),"end_edit":({"end_edit",}),"direct_turn_obj_on_obj_on":({"direct_turn_obj_on_obj_on",}),"eventevade":({"eventEvade",}),"getplayerob":({"GetPlayerob",}),"eventloadobject":({"eventLoadObject",}),"setfishing":({"SetFishing",}),"direct_stealth_wrd":({"direct_stealth_wrd",}),"getchance":({"GetChance",}),"direct_resurrect_liv":({"direct_resurrect_liv",}),"call_out":({"call_out",}),"setcelltype":({"SetCellType",}),"eventboobytrap":({"eventBoobytrap",}),"checkrooms":({"CheckRooms",}),"direct_scratch_str_on_obj":({"direct_scratch_str_on_obj",}),"cantrain":({"CanTrain",}),"canbreathe":({"CanBreathe",}),"getcurrency":({"GetCurrency",}),"direct_abandon_liv":({"direct_abandon_liv",}),"setresistance":({"SetResistance",}),"gethealrate":({"GetHealRate",}),"direct_fish_with_obj":({"direct_fish_with_obj",}),"indirect_roll_obs_on_obj":({"indirect_roll_obs_on_obj",}),"getsleeping":({"GetSleeping",}),"coordinates":({"coordinates",}),"playerp":({"playerp",}),"get_random_living":({"get_random_living",}),"do_put_obs_obj":({"do_put_obs_obj",}),"telltale":({"TellTale",}),"eventbuyitem":({"eventBuyItem",}),"restore_player":({"restore_player",}),"direct_crawl_str":({"direct_crawl_str",}),"id":({"id",}),"direct_put_wrd_wrd_word_obj":({"direct_put_wrd_wrd_word_obj",}),"getplainshort":({"GetPlainShort",}),"can_capture_liv_word_obj":({"can_capture_liv_word_obj",}),"eventlearnspell":({"eventLearnSpell",}),"addrequestresponse":({"AddRequestResponse",}),"stopserver":({"StopServer",}),"getmountowner":({"GetMountOwner",}),"can_roll_str":({"can_roll_str",}),"eventinstall":({"eventInstall",}),"getfollowers":({"GetFollowers",}),"do_ask_liv_about_str":({"do_ask_liv_about_str",}),"getflaskcontents":({"GetFlaskContents",}),"eventrequest":({"eventRequest",}),"last_string_element":({"last_string_element",}),"can_ring_str_on_obj":({"can_ring_str_on_obj",}),"unmorse":({"unmorse",}),"do_delete_obj_from_obj":({"do_delete_obj_from_obj",}),"gettown":({"GetTown",}),"getenter":({"GetEnter",}),"do_steal_obj_from_liv":({"do_steal_obj_from_liv",}),"direct_train_liv_to_str":({"direct_train_liv_to_str",}),"direct_buffer_liv":({"direct_buffer_liv",}),"indirect_shoot_obj_at_obj":({"indirect_shoot_obj_at_obj",}),"do_swivel_obj":({"do_swivel_obj",}),"getresetnumber":({"GetResetNumber",}),"direct_pray_for_str_for_obj":({"direct_pray_for_str_for_obj",}),"getchannels":({"GetChannels",}),"setpickingquality":({"SetPickingQuality",}),"direct_add_obj_to_obj":({"direct_add_obj_to_obj",}),"mapping_member":({"mapping_member",}),"direct_ride_str":({"direct_ride_str",}),"hobbled":({"hobbled",}),"setdestroyonsell":({"SetDestroyOnSell",}),"do_sit_down_word_obj":({"do_sit_down_word_obj",}),"can_swim":({"can_swim",}),"can_wear_obj":({"can_wear_obj",}),"do_put_obj_word_obj":({"do_put_obj_word_obj",}),"setrace":({"SetRace",}),"canjump":({"CanJump",}),"can_yell_in_wrd_str":({"can_yell_in_wrd_str",}),"query_carrying":({"query_carrying",}),"removepull":({"RemovePull",}),"mustwield":({"MustWield",}),"setvalue":({"SetValue",}),"getblind":({"GetBlind",}),"direct_ask_liv_str":({"direct_ask_liv_str",}),"can_uninstall":({"can_uninstall",}),"do_sit":({"do_sit",}),"eventprocess":({"eventProcess",}),"identify":({"identify",}),"can_look_at_str":({"can_look_at_str",}),"addteachinglanguages":({"AddTeachingLanguages",}),"getwimpy":({"GetWimpy",}),"eventclimb":({"eventClimb",}),"cansit":({"CanSit",}),"cmdpage":({"cmdPage",}),"do_ring_str_on_obj":({"do_ring_str_on_obj",}),"direct_reload_word_obj":({"direct_reload_word_obj",}),"can_install_obj":({"can_install_obj",}),"getlastenvironment":({"GetLastEnvironment",}),"getdamagepoints":({"GetDamagePoints",}),"getlong":({"GetLong",}),"do_search_str_word_obj":({"do_search_str_word_obj",}),"getpiletype":({"GetPileType",}),"removeblindness":({"RemoveBlindness",}),"direct_enter_into_obj":({"direct_enter_into_obj",}),"canspeak":({"CanSpeak",}),"containers":({"containers",}),"setitem_desc":({"SetItem_desc",}),"eventcomparelimbs":({"eventCompareLimbs",}),"query_max_mp":({"query_max_mp",}),"setnobotcondition":({"SetNoBotCondition",}),"do_activate_obj":({"do_activate_obj",}),"setac":({"SetAC",}),"can_roll":({"can_roll",}),"eventsocketclosed":({"eventSocketClosed",}),"setinventorycheck":({"SetInventoryCheck",}),"setlanguage":({"SetLanguage",}),"parse_command_id_list":({"parse_command_id_list",}),"setbodymass":({"SetBodyMass",}),"efuns":({"efuns",}),"setdamagepoints":({"SetDamagePoints",}),"getentermessage":({"GetEnterMessage",}),"direct_dig_obj_with_obj":({"direct_dig_obj_with_obj",}),"native_version":({"native_version",}),"getline":({"GetLine",}),"eventtrain":({"eventTrain",}),"getnodecay":({"GetNoDecay",}),"do_put_obj_obj":({"do_put_obj_obj",}),"eventsit":({"eventSit",}),"do_yell_in_wrd_str":({"do_yell_in_wrd_str",}),"setnoreplace":({"SetNoReplace",}),"do_ask_str":({"do_ask_str",}),"getcanclose":({"GetCanClose",}),"do_roll_str":({"do_roll_str",}),"eventwear":({"eventWear",}),"isfollowing":({"IsFollowing",}),"canstop":({"CanStop",}),"query_time":({"query_time",}),"setentermessage":({"SetEnterMessage",}),"can_install_obj_word_obj":({"can_install_obj_word_obj",}),"validate":({"validate",}),"indirect_delete_exit_str":({"indirect_delete_exit_str",}),"setpoints":({"SetPoints",}),"eventuntrainliving":({"eventUnTrainLiving",}),"getrarity":({"GetRarity",}),"canmelee":({"CanMelee",}),"setenters":({"SetEnters",}),"setsinkroom":({"SetSinkRoom",}),"setrequiredmagic":({"SetRequiredMagic",}),"getfurniturename":({"GetFurnitureName",}),"do_rock":({"do_rock",}),"do_judge_obj_to_obj":({"do_judge_obj_to_obj",}),"do_wear_obs":({"do_wear_obs",}),"can_delete_obj_from_obj":({"can_delete_obj_from_obj",}),"direct_unload_obj":({"direct_unload_obj",}),"direct_remove_obj":({"direct_remove_obj",}),"eventpoison":({"eventPoison",}),"moveback":({"MoveBack",}),"update":({"update",}),"do_stealth_wrd":({"do_stealth_wrd",}),"candig":({"CanDig",}),"eventprintdamage":({"eventPrintDamage",}),"getskillclass":({"GetSkillClass",}),"getlimb":({"GetLimb",}),"do_wear_obj":({"do_wear_obj",}),"setstaminacost":({"SetStaminaCost",}),"can_roll_obj_on_obj":({"can_roll_obj_on_obj",}),"eventcmduser":({"eventCmdUser",}),"path_file":({"path_file",}),"addquestpoints":({"AddQuestPoints",}),"seteuid":({"seteuid",}),"tell_creators":({"tell_creators",}),"can_jump_word_obj":({"can_jump_word_obj",}),"getcanonicalid":({"GetCanonicalId",}),"setkeys":({"SetKeys",}),"eventcapture":({"eventCapture",}),"show":({"show",}),"direct_rock_str":({"direct_rock_str",}),"do_abandon_liv":({"do_abandon_liv",}),"direct_unlock_obj_with_str":({"direct_unlock_obj_with_str",}),"getlastmodified":({"GetLastModified",}),"direct_copy_obj_str":({"direct_copy_obj_str",}),"setlocalcurrency":({"SetLocalCurrency",}),"do_sell_obs_to_liv":({"do_sell_obs_to_liv",}),"setwanderpath":({"SetWanderPath",}),"getdoorside":({"GetDoorSide",}),"eventsink":({"eventSink",}),"eventfollow":({"eventFollow",}),"cmd_followup_and_respond":({"cmd_followup_and_respond",}),"can_scratch_on_obj":({"can_scratch_on_obj",}),"do_enter_obj":({"do_enter_obj",}),"cangive":({"CanGive",}),"getspelllevel":({"GetSpellLevel",}),"getmaxstatpoints":({"GetMaxStatPoints",}),"indirect_marry_liv_to_liv":({"indirect_marry_liv_to_liv",}),"eventdig":({"eventDig",}),"query_snoop":({"query_snoop",}),"eventdie":({"eventDie",}),"scramble_array":({"scramble_array",}),"getdifficulty":({"GetDifficulty",}),"moral_act":({"moral_act",}),"indirect_delete_obj":({"indirect_delete_obj",}),"do_get_obj_out_of_obj":({"do_get_obj_out_of_obj",}),"mgrepp":({"mgrepp",}),"getriders":({"GetRiders",}),"eventlogconnection":({"eventLogConnection",}),"setskillmodifier":({"SetSkillModifier",}),"reverse_string":({"reverse_string",}),"direct_smoke_obj":({"direct_smoke_obj",}),"can_createfix_obj":({"can_createfix_obj",}),"gettalekeys":({"GetTaleKeys",}),"getrespiration":({"GetRespiration",}),"can_search_str_word_obj":({"can_search_str_word_obj",}),"setbury":({"SetBury",}),"getbirth":({"GetBirth",}),"do_roll_obj_on_obj":({"do_roll_obj_on_obj",}),"setbonusname":({"SetBonusName",}),"setdollarcost":({"SetDollarCost",}),"can_lie_down_word_obj":({"can_lie_down_word_obj",}),"mudlib_version":({"mudlib_version",}),"settapped":({"SetTapped",}),"do_target_lvs":({"do_target_lvs",}),"can_codesay_str":({"can_codesay_str",}),"removechannel":({"RemoveChannel",}),"getcombataction":({"GetCombatAction",}),"eventsmell":({"eventSmell",}),"eventspeak":({"eventSpeak",}),"canjoin":({"CanJoin",}),"getlivingshort":({"GetLivingShort",}),"getlightlevel":({"GetLightLevel",}),"read_file":({"read_file",}),"setmaxmagicpoints":({"SetMaxMagicPoints",}),"direct_resurrect_obj":({"direct_resurrect_obj",}),"setlanguagecomprehension":({"SetLanguageComprehension",}),"direct_pour_out_obj":({"direct_pour_out_obj",}),"get_livings":({"get_livings",}),"addquestskillpoints":({"AddQuestSkillPoints",}),"query_board_time":({"query_board_time",}),"getcaptives":({"GetCaptives",}),"do_follow_liv":({"do_follow_liv",}),"eventgetfrom":({"eventGetFrom",}),"getclanskill":({"GetClanSkill",}),"getrifletype":({"GetRifleType",}),"getheartmodifier":({"GetHeartModifier",}),"canequip":({"CanEquip",}),"can_empty_obj":({"can_empty_obj",}),"setcombataction":({"SetCombatAction",}),"direct_rockwhip_liv":({"direct_rockwhip_liv",}),"do_ask_liv_str":({"do_ask_liv_str",}),"query_custom_command":({"query_custom_command",}),"do_whisper_to_liv_in_wrd_str":({"do_whisper_to_liv_in_wrd_str",}),"can_kneel_down":({"can_kneel_down",}),"getwebpage":({"GetWebPage",}),"can_buy_str_from_liv":({"can_buy_str_from_liv",}),"parse_objects":({"parse_objects",}),"setrules":({"SetRules",}),"can_scratch_obj":({"can_scratch_obj",}),"setmessage":({"SetMessage",}),"getsave":({"GetSave",}),"isgerm":({"isGerm",}),"disconnect":({"disconnect",}),"getlivingmaxcarry":({"GetLivingMaxCarry",}),"query_ambient_light":({"query_ambient_light",}),"eventcmdcwd":({"eventCmdCwd",}),"can_fly":({"can_fly",}),"addfollower":({"AddFollower",}),"eventreceivethrow":({"eventReceiveThrow",}),"canget":({"CanGet",}),"getinvis":({"GetInvis",}),"setallowsacrifice":({"SetAllowSacrifice",}),"setdeities":({"SetDeities",}),"do_close_obj":({"do_close_obj",}),"can_skin_obj_with_obj":({"can_skin_obj_with_obj",}),"removeexit":({"RemoveExit",}),"removesmell":({"RemoveSmell",}),"getdescriptor":({"GetDescriptor",}),"query_max_hp":({"query_max_hp",}),"getfirearmname":({"GetFirearmName",}),"tail":({"tail",}),"inputcre":({"InputCre",}),"setlonganditems":({"SetLongAndItems",}),"getsynonyms":({"GetSynonyms",}),"setpick":({"SetPick",}),"addshadow":({"AddShadow",}),"indirect_bury_obj_with_obj":({"indirect_bury_obj_with_obj",}),"addkey":({"AddKey",}),"eventcruise":({"eventCruise",}),"getflowlimit":({"GetFlowLimit",}),"eventpour":({"eventPour",}),"setmaxfuel":({"SetMaxFuel",}),"cansell":({"CanSell",}),"opposite_dir":({"opposite_dir",}),"wild_card":({"wild_card",}),"do_pull_str_from_obj":({"do_pull_str_from_obj",}),"currency_mass":({"currency_mass",}),"candivorce":({"CanDivorce",}),"can_show_obj_to_liv":({"can_show_obj_to_liv",}),"setverb":({"SetVerb",}),"canremoveitem":({"CanRemoveItem",}),"getspouse":({"GetSpouse",}),"removemanipulate":({"RemoveManipulate",}),"eventget":({"eventGet",}),"eventtallyvotes":({"eventTallyVotes",}),"can_lock_obj_with_str":({"can_lock_obj_with_str",}),"getmanipulate":({"GetManipulate",}),"setperforated":({"SetPerforated",}),"getpassword":({"GetPassword",}),"efun_exists":({"efun_exists",}),"setopen":({"SetOpen",}),"setwanderrecurse":({"SetWanderRecurse",}),"removemenuitem":({"RemoveMenuItem",}),"setcurrency":({"SetCurrency",}),"removemagicprotection":({"RemoveMagicProtection",}),"get_verbs":({"get_verbs",}),"direct_command_liv_to_str":({"direct_command_liv_to_str",}),"tell_object":({"tell_object",}),"estatep":({"estatep",}),"setlocked":({"SetLocked",}),"setsleeping":({"SetSleeping",}),"can_reload_word":({"can_reload_word",}),"getclass":({"GetClass",}),"mudlib":({"mudlib",}),"removeencounter":({"RemoveEncounter",}),"eventrestoresight":({"eventRestoreSight",}),"do_shout":({"do_shout",}),"getslowdecay":({"GetSlowDecay",}),"recurselocations":({"RecurseLocations",}),"canswim":({"CanSwim",}),"can_pick_obj":({"can_pick_obj",}),"createguest":({"CreateGuest",}),"query_value":({"query_value",}),"gethealing":({"GetHealing",}),"setdeathevents":({"SetDeathEvents",}),"compile_object":({"compile_object",}),"do_turn_off_obj":({"do_turn_off_obj",}),"indirect_read_obj_at_obj":({"indirect_read_obj_at_obj",}),"inputname":({"InputName",}),"remove_matching_line":({"remove_matching_line",}),"do_say":({"do_say",}),"do_fly_into_str":({"do_fly_into_str",}),"do_request_str_from_liv":({"do_request_str_from_liv",}),"getspecialtarget":({"GetSpecialTarget",}),"eventcharge":({"eventCharge",}),"eventcmdport":({"eventCmdPort",}),"eventforcequeuedcommand":({"eventForceQueuedCommand",}),"getcouncilmember":({"GetCouncilMember",}),"do_show_obj_to_liv":({"do_show_obj_to_liv",}),"destlimb":({"DestLimb",}),"dump_variable":({"dump_variable",}),"do_steal_obs_from_liv":({"do_steal_obs_from_liv",}),"launch":({"launch",}),"eventequip":({"eventEquip",}),"do_list":({"do_list",}),"setnoobviousexits":({"SetNoObviousExits",}),"eventdestroyundead":({"eventDestroyUndead",}),"do_get_wrd_out_of_obj":({"do_get_wrd_out_of_obj",}),"setconjure":({"SetConjure",}),"cmd_pwd":({"cmd_pwd",}),"getmaxloaded":({"GetMaxLoaded",}),"addfish":({"AddFish",}),"getconsults":({"GetConsults",}),"do_remove_obj_out_of_obj":({"do_remove_obj_out_of_obj",}),"setlit":({"SetLit",}),"do_put_obs_word_obj":({"do_put_obs_word_obj",}),"getcarriedweight":({"GetCarriedWeight",}),"eventgetfile":({"eventGetFile",}),"eventwritefile":({"eventWriteFile",}),"setexits":({"SetExits",}),"direct_look_on_obj":({"direct_look_on_obj",}),"canscratch":({"CanScratch",}),"eventconsult":({"eventConsult",}),"setadjectives":({"SetAdjectives",}),"roll":({"roll",}),"canroll":({"CanRoll",}),"getemoteresponse":({"GetEmoteResponse",}),"indirect_balance_obj_to_obj":({"indirect_balance_obj_to_obj",}),"file_present":({"file_present",}),"do_scratch_on_obj":({"do_scratch_on_obj",}),"gettrapdescription":({"GetTrapDescription",}),"preaddenter":({"PreAddEnter",}),"do_scratch_on_str_on_obj":({"do_scratch_on_str_on_obj",}),"do_go_into_str":({"do_go_into_str",}),"setaggressive":({"SetAggressive",}),"file_privs":({"file_privs",}),"do_climb_obj":({"do_climb_obj",}),"setcurrencies":({"SetCurrencies",}),"direct_shoot_obj_with_obj":({"direct_shoot_obj_with_obj",}),"help":({"help",}),"querybane":({"QueryBane",}),"assistp":({"assistp",}),"setmealaction":({"SetMealAction",}),"eventdeleteobject":({"eventDeleteObject",}),"getmaxflask":({"GetMaxFlask",}),"getescapechance":({"GetEscapeChance",}),"do_sleep":({"do_sleep",}),"getdestructonclose":({"GetDestructOnClose",}),"can_whisper_in_wrd":({"can_whisper_in_wrd",}),"removecommandresponse":({"RemoveCommandResponse",}),"do_wield_obj_word_str":({"do_wield_obj_word_str",}),"direct_untrain_liv":({"direct_untrain_liv",}),"can_rock":({"can_rock",}),"removeproperty":({"RemoveProperty",}),"can_copy_obj_str":({"can_copy_obj_str",}),"getmincells":({"GetMinCells",}),"addrecursedepth":({"AddRecurseDepth",}),"getposition":({"GetPosition",}),"pushd":({"pushd",}),"setescapechance":({"SetEscapeChance",}),"do_pick_obj":({"do_pick_obj",}),"gethands":({"GetHands",}),"livings_are_remote":({"livings_are_remote",}),"direct_move_obj":({"direct_move_obj",}),"setskill":({"SetSkill",}),"do_steal_wrd_from_liv":({"do_steal_wrd_from_liv",}),"direct_free_liv_from_obj":({"direct_free_liv_from_obj",}),"check_access":({"check_access",}),"indirect_sell_liv_obj":({"indirect_sell_liv_obj",}),"direct_dispel_liv":({"direct_dispel_liv",}),"setmaxsitters":({"SetMaxSitters",}),"setcanclose":({"SetCanClose",}),"can_stand":({"can_stand",}),"getenemynames":({"GetEnemyNames",}),"can_enter_obj":({"can_enter_obj",}),"can_judge_obj_str_obj":({"can_judge_obj_str_obj",}),"getluck":({"GetLuck",}),"find_flags":({"find_flags",}),"sendweaponmessages":({"SendWeaponMessages",}),"do_dismount_liv":({"do_dismount_liv",}),"can_stand_up":({"can_stand_up",}),"imud_privp":({"imud_privp",}),"getcommandresponses":({"GetCommandResponses",}),"addconsultresponse":({"AddConsultResponse",}),"effective_light":({"effective_light",}),"direct_look_at_str_on_obj":({"direct_look_at_str_on_obj",}),"getmagicchance":({"GetMagicChance",}),"direct_apply_obj_word_obj":({"direct_apply_obj_word_obj",}),"appraise":({"appraise",}),"getvendortype":({"GetVendorType",}),"present_file":({"present_file",}),"can_pour_out_obj":({"can_pour_out_obj",}),"addmagicpoints":({"AddMagicPoints",}),"do_look":({"do_look",}),"getmagiccost":({"GetMagicCost",}),"addfood":({"AddFood",}),"setdoorside":({"SetDoorSide",}),"can_donate_str_str":({"can_donate_str_str",}),"getowner":({"GetOwner",}),"gethboverride":({"GetHBOverride",}),"eventempty":({"eventEmpty",}),"set_cwd":({"set_cwd",}),"enableactions":({"EnableActions",}),"remove_dots":({"remove_dots",}),"getground":({"GetGround",}),"direct_shock_liv":({"direct_shock_liv",}),"direct_lead_liv":({"direct_lead_liv",}),"inputclass":({"InputClass",}),"parse_command_adjectiv_id_list":({"parse_command_adjectiv_id_list",}),"do_jump_on_obj":({"do_jump_on_obj",}),"setclanskill":({"SetClanSkill",}),"setrifletype":({"SetRifleType",}),"indirect_turn_obj_on_obj_on":({"indirect_turn_obj_on_obj_on",}),"eventserverreadcallback":({"eventServerReadCallback",}),"direct_immolate_liv":({"direct_immolate_liv",}),"do_knock_str_on_obj":({"do_knock_str_on_obj",}),"direct_bait_obj_with_obj":({"direct_bait_obj_with_obj",}),"getmountstyle":({"GetMountStyle",}),"removeskillbonus":({"RemoveSkillBonus",}),"getmoneymap":({"GetMoneyMap",}),"can_search_obj":({"can_search_obj",}),"do_listen":({"do_listen",}),"getdying":({"GetDying",}),"do_open_obj_with_obj":({"do_open_obj_with_obj",}),"query":({"query",}),"getskillbonus":({"GetSkillBonus",}),"eventdecay":({"eventDecay",}),"getnativelanguage":({"GetNativeLanguage",}),"avatarp":({"avatarp",}),"can_pour_obj_on_obj":({"can_pour_obj_on_obj",}),"eventcompletemove":({"eventCompleteMove",}),"direct_whisper_to_liv_in_wrd_str":({"direct_whisper_to_liv_in_wrd_str",}),"addassets":({"AddAssets",}),"getmaxcarry":({"GetMaxCarry",}),"eventbackstab":({"eventBackstab",}),"do_shoot":({"do_shoot",}),"settalkresponses":({"SetTalkResponses",}),"getskills":({"GetSkills",}),"direct_scratch_on_obj":({"direct_scratch_on_obj",}),"resolve_callback":({"resolve_callback",}),"getarmortype":({"GetArmorType",}),"can_close_obj":({"can_close_obj",}),"getrequiredskill":({"GetRequiredSkill",}),"setnodecay":({"SetNoDecay",}),"getdamage":({"GetDamage",}),"setammo":({"SetAmmo",}),"getvotestatus":({"GetVoteStatus",}),"direct_initfix":({"direct_initfix",}),"do_look_on_obj":({"do_look_on_obj",}),"chunk_string":({"chunk_string",}),"direct_heal_str_of_liv":({"direct_heal_str_of_liv",}),"can_drop_wrd_wrd":({"can_drop_wrd_wrd",}),"log_file":({"log_file",}),"setexchangefee":({"SetExchangeFee",}),"settype":({"SetType",}),"eventcmdrmd":({"eventCmdRmd",}),"getmagicprotection":({"GetMagicProtection",}),"do_stand_up":({"do_stand_up",}),"do_give_obs_to_liv":({"do_give_obs_to_liv",}),"getshakes":({"GetShakes",}),"can_teach_liv_to_str":({"can_teach_liv_to_str",}),"do_whisper_in_wrd_to_liv":({"do_whisper_in_wrd_to_liv",}),"setflowlimit":({"SetFlowLimit",}),"getbaseskilllevel":({"GetBaseSkillLevel",}),"getclanname":({"GetClanName",}),"can_request_str_from_liv":({"can_request_str_from_liv",}),"trr":({"trr",}),"eventtellhist":({"eventTellHist",}),"getlimbparent":({"GetLimbParent",}),"getdefaultlanguage":({"GetDefaultLanguage",}),"setmedium":({"SetMedium",}),"setshort":({"SetShort",}),"getvisibility":({"GetVisibility",}),"canlearn":({"CanLearn",}),"do_pour_obj_on_obj":({"do_pour_obj_on_obj",}),"senduptime":({"SendUptime",}),"cmdappraise":({"cmdAppraise",}),"isfile":({"isFile",}),"eventpull":({"eventPull",}),"do_say_to_liv":({"do_say_to_liv",}),"do_give_liv_wrd_wrd":({"do_give_liv_wrd_wrd",}),"can_teach":({"can_teach",}),"setrescuebit":({"SetRescueBit",}),"getpreventput":({"GetPreventPut",}),"eventreceivesit":({"eventReceiveSit",}),"addchannel":({"AddChannel",}),"getstrength":({"GetStrength",}),"to_html":({"to_html",}),"eventnextday":({"eventNextDay",}),"direct_put_obj_word_obj":({"direct_put_obj_word_obj",}),"eventenemydied":({"eventEnemyDied",}),"setloaded":({"SetLoaded",}),"setsynonyms":({"SetSynonyms",}),"setslowdecay":({"SetSlowDecay",}),"can_pray_for_str":({"can_pray_for_str",}),"direct_delete_exit_str":({"direct_delete_exit_str",}),"getstaminapoints":({"GetStaminaPoints",}),"direct_swivel_str":({"direct_swivel_str",}),"direct_use_obj":({"direct_use_obj",}),"loadauto":({"LoadAuto",}),"can_pray_for_str_against_str":({"can_pray_for_str_against_str",}),"canturnon":({"CanTurnOn",}),"direct_party_wrd_liv":({"direct_party_wrd_liv",}),"getparty":({"GetParty",}),"user_name":({"user_name",}),"room_environment":({"room_environment",}),"settouch":({"SetTouch",}),"direct_look_in_obj":({"direct_look_in_obj",}),"can_rock_obj":({"can_rock_obj",}),"direct_read_str_word_obj":({"direct_read_str_word_obj",}),"performdivorce":({"performDivorce",}),"getwielded":({"GetWielded",}),"do_whisper_in_wrd":({"do_whisper_in_wrd",}),"do_fish_with_obj":({"do_fish_with_obj",}),"do_turn":({"do_turn",}),"direct_shoot_liv_with_obj":({"direct_shoot_liv_with_obj",}),"can_balance_obj_to_obj":({"can_balance_obj_to_obj",}),"setgagged":({"SetGagged",}),"setpassword":({"SetPassword",}),"can_whisper":({"can_whisper",}),"eventclosesocket":({"eventCloseSocket",}),"addexperiencepoints":({"AddExperiencePoints",}),"eventmanipulate":({"eventManipulate",}),"getneighborcoords":({"GetNeighborCoords",}),"direct_get_wrd_wrd_from_obj":({"direct_get_wrd_wrd_from_obj",}),"bool_reverse":({"bool_reverse",}),"cmd_pushd":({"cmd_pushd",}),"getpowertype":({"GetPowerType",}),"compileneighbors":({"CompileNeighbors",}),"addnontargets":({"AddNonTargets",}),"getclimbs":({"GetClimbs",}),"remove_article":({"remove_article",}),"eventmove":({"eventMove",}),"can_sit_up":({"can_sit_up",}),"getfuelamount":({"GetFuelAmount",}),"direct_farsight_liv":({"direct_farsight_liv",}),"can_nominate_str":({"can_nominate_str",}),"query_base_currency":({"query_base_currency",}),"getcommandresponse":({"GetCommandResponse",}),"indirect_reload_str_obj":({"indirect_reload_str_obj",}),"modcharge":({"ModCharge",}),"addlocation":({"AddLocation",}),"do_show_obj_liv":({"do_show_obj_liv",}),"getdrainable":({"GetDrainable",}),"do_target_liv":({"do_target_liv",}),"can_climb_obj":({"can_climb_obj",}),"time_event":({"time_event",}),"sefuns":({"sefuns",}),"do_give_liv_obs":({"do_give_liv_obs",}),"direct_ask_liv_about_str":({"direct_ask_liv_about_str",}),"eventdismount":({"eventDismount",}),"setwebpage":({"SetWebPage",}),"addtitle":({"AddTitle",}),"getbodycomposition":({"GetBodyComposition",}),"removesearchpath":({"RemoveSearchPath",}),"can_shout_in_wrd_str":({"can_shout_in_wrd_str",}),"do_attack_lvs":({"do_attack_lvs",}),"do_give_liv_obj":({"do_give_liv_obj",}),"direct_judge_obj_to_obj":({"direct_judge_obj_to_obj",}),"getsearchpath":({"GetSearchPath",}),"setproperties":({"SetProperties",}),"direct_bless_obj":({"direct_bless_obj",}),"getmealmessages":({"GetMealMessages",}),"canshowinterior":({"CanShowInterior",}),"eventsacrifice":({"eventSacrifice",}),"getmessages":({"GetMessages",}),"sefun_exists":({"sefun_exists",}),"do_deactivate":({"do_deactivate",}),"direct_sit_down_word_obj":({"direct_sit_down_word_obj",}),"canrock":({"CanRock",}),"can_search":({"can_search",}),"eventdrive":({"eventDrive",}),"addsearch":({"AddSearch",}),"do_reconnect":({"do_reconnect",}),"indirect_show_liv_obj":({"indirect_show_liv_obj",}),"indirect_unlock_obj_with_str":({"indirect_unlock_obj_with_str",}),"getfish":({"GetFish",}),"do_donate_str_str":({"do_donate_str_str",}),"query_reset_number":({"query_reset_number",}),"setcantrain":({"SetCanTrain",}),"eventlearn":({"eventLearn",}),"do_enter":({"do_enter",}),"setmealmessages":({"SetMealMessages",}),"space_trim":({"space_trim",}),"eventreadftpdata":({"eventReadFtpData",}),"getpressure":({"GetPressure",}),"percent_of":({"percent_of",}),"getcommandfail":({"GetCommandFail",}),"teller_check":({"teller_check",}),"addstatbonus":({"AddStatBonus",}),"indirect_lock_obj_with_str":({"indirect_lock_obj_with_str",}),"do_rock_obj":({"do_rock_obj",}),"eventconvertobject":({"eventConvertObject",}),"eventloaditem":({"eventLoadItem",}),"do_pulsecheck_lvs":({"do_pulsecheck_lvs",}),"canbefriend":({"CanBefriend",}),"getgomessage":({"GetGoMessage",}),"direct_look_at_obj_word_obj":({"direct_look_at_obj_word_obj",}),"eventsuffer":({"eventSuffer",}),"setflaskcontents":({"SetFlaskContents",}),"find_object":({"find_object",}),"direct_steal_obj_from_liv":({"direct_steal_obj_from_liv",}),"missed_shot":({"missed_shot",}),"shutdown":({"shutdown",}),"setmaxflask":({"SetMaxFlask",}),"setmuted":({"SetMuted",}),"convert_name":({"convert_name",}),"eventlisten":({"eventListen",}),"catch_tell":({"catch_tell",}),"direct_calm_liv":({"direct_calm_liv",}),"removequest":({"RemoveQuest",}),"cankneel":({"CanKneel",}),"setmincells":({"SetMinCells",}),"do_jump_in_obj":({"do_jump_in_obj",}),"setposition":({"SetPosition",}),"getpoints":({"GetPoints",}),"clean_up":({"clean_up",}),"eventdivorce":({"eventDivorce",}),"getenters":({"GetEnters",}),"flicker":({"flicker",}),"receivechars":({"ReceiveChars",}),"end_post":({"end_post",}),"can_modify_obj_str":({"can_modify_obj_str",}),"sethealing":({"SetHealing",}),"can_scratch_str_on_obj":({"can_scratch_str_on_obj",}),"setmagiccost":({"SetMagicCost",}),"addread":({"AddRead",}),"can_pour_obj_in_obj":({"can_pour_obj_in_obj",}),"find_deep_inheritors":({"find_deep_inheritors",}),"candrop":({"CanDrop",}),"can_look":({"can_look",}),"can_climb_out_of_obj":({"can_climb_out_of_obj",}),"can_listen_to_obj":({"can_listen_to_obj",}),"setunique":({"SetUnique",}),"currency_inflation":({"currency_inflation",}),"can_remove_obj_out_of_obj":({"can_remove_obj_out_of_obj",}),"getproperty":({"GetProperty",}),"settale":({"SetTale",}),"addmass":({"AddMass",}),"setpassivemode":({"SetPassiveMode",}),"getstats":({"GetStats",}),"indirect_pulsecheck_liv":({"indirect_pulsecheck_liv",}),"getdirection":({"GetDirection",}),"getmealtype":({"GetMealType",}),"do_look_in_obj":({"do_look_in_obj",}),"getareamap":({"GetAreaMap",}),"getdrainrate":({"GetDrainRate",}),"do_rock_wrd_obj":({"do_rock_wrd_obj",}),"canshake":({"CanShake",}),"direct_cast_str_on_obj":({"direct_cast_str_on_obj",}),"setmaxcapture":({"SetMaxCapture",}),"cmdsmell":({"cmdSmell",}),"can_scratch_on_str_on_obj":({"can_scratch_on_str_on_obj",}),"direct_poison_obj_with_obj":({"direct_poison_obj_with_obj",}),"getattackable":({"GetAttackable",}),"direct_search_obj":({"direct_search_obj",}),"eventloadchapters":({"eventLoadChapters",}),"can_dest_obj":({"can_dest_obj",}),"send_messages":({"send_messages",}),"setundeadtype":({"SetUndeadType",}),"cancast":({"CanCast",}),"setarmortype":({"SetArmorType",}),"eventreadcallback":({"eventReadCallback",}),"getmenuitems":({"GetMenuItems",}),"direct_read_obj_at_obj":({"direct_read_obj_at_obj",}),"getshadowedobject":({"GetShadowedObject",}),"do_roll_obs_on_str":({"do_roll_obs_on_str",}),"getentermap":({"GetEnterMap",}),"setemoteresponses":({"SetEmoteResponses",}),"do_unload_obj_word_obj":({"do_unload_obj_word_obj",}),"do_pour_obj_in_obj":({"do_pour_obj_in_obj",}),"getmaxitems":({"GetMaxItems",}),"getfood":({"GetFood",}),"gettapped":({"GetTapped",}),"eventburywith":({"eventBuryWith",}),"getuid":({"getuid",}),"eventsenddata":({"eventSendData",}),"can_reload_str_obj":({"can_reload_str_obj",}),"canreceive":({"CanReceive",}),"do_shout_str":({"do_shout_str",}),"setsockettype":({"SetSocketType",}),"eventscratch":({"eventScratch",}),"setsaverecurse":({"SetSaveRecurse",}),"can_smoke_from_obj":({"can_smoke_from_obj",}),"getlit":({"GetLit",}),"setpoisonuses":({"SetPoisonUses",}),"direct_befriend_liv":({"direct_befriend_liv",}),"setmaxcarry":({"SetMaxCarry",}),"do_resurrect_obj":({"do_resurrect_obj",}),"morse":({"morse",}),"candrink":({"CanDrink",}),"can_cast_obj":({"can_cast_obj",}),"initrevolver":({"InitRevolver",}),"eventinfect":({"eventInfect",}),"setenter":({"SetEnter",}),"resolvehost":({"resolveHost",}),"generateobviousexits":({"GenerateObviousExits",}),"eventbite":({"eventBite",}),"direct_look_at_obj":({"direct_look_at_obj",}),"setundead":({"SetUndead",}),"generate_tmp":({"generate_tmp",}),"eventkneel":({"eventKneel",}),"eventbury":({"eventBury",}),"can_free_liv_from_obj":({"can_free_liv_from_obj",}),"can_get_obj_from_obj":({"can_get_obj_from_obj",}),"can_apply_obj_obj":({"can_apply_obj_obj",}),"getbuffer":({"GetBuffer",}),"do_pray_for_str_against_str_for_liv":({"do_pray_for_str_against_str_for_liv",}),"eventburn":({"eventBurn",}),"can_extinguish_obj":({"can_extinguish_obj",}),"direct_get_obj_out_of_obj":({"direct_get_obj_out_of_obj",}),"direct_pull_obj":({"direct_pull_obj",}),"additem_func":({"AddItem_func",}),"canfillme":({"CanFillMe",}),"setclanname":({"SetClanName",}),"indirect_buy_str_from_liv":({"indirect_buy_str_from_liv",}),"direct_annihilate_at_liv":({"direct_annihilate_at_liv",}),"putcoins":({"PutCoins",}),"do_pour_from_obj_in_obj":({"do_pour_from_obj_in_obj",}),"canboobytrap":({"CanBoobytrap",}),"direct_veil_liv_against_wrd_wrd":({"direct_veil_liv_against_wrd_wrd",}),"can_echo_str":({"can_echo_str",}),"do_dest_obs":({"do_dest_obs",}),"putcheck":({"PutCheck",}),"getshadowed":({"GetShadowed",}),"setwimpy":({"SetWimpy",}),"removedig":({"RemoveDig",}),"woundlong":({"WoundLong",}),"getautodamage":({"GetAutoDamage",}),"do_dest_obj":({"do_dest_obj",}),"getprimaryskills":({"GetPrimarySkills",}),"can_turn":({"can_turn",}),"eventecho":({"eventEcho",}),"direct_drive":({"direct_drive",}),"direct_arrow_liv":({"direct_arrow_liv",}),"convert_string":({"convert_string",}),"getquestpoints":({"GetQuestPoints",}),"canpeer":({"CanPeer",}),"eventunjoin":({"eventUnjoin",}),"setstrength":({"SetStrength",}),"eventshake":({"eventShake",}),"list":({"list",}),"setpowertype":({"SetPowerType",}),"currency_rate":({"currency_rate",}),"geterrormessage":({"GetErrorMessage",}),"check_privs":({"check_privs",}),"getnocondition":({"GetNoCondition",}),"setwrite":({"SetWrite",}),"can_unload_obj_word_obj":({"can_unload_obj_word_obj",}),"do_bury_str_with_obj":({"do_bury_str_with_obj",}),"eventhealdamage":({"eventHealDamage",}),"getlocked":({"GetLocked",}),"direct_pull_str_from_obj":({"direct_pull_str_from_obj",}),"can_ring_obj":({"can_ring_obj",}),"canextinguish":({"CanExtinguish",}),"setdrainable":({"SetDrainable",}),"indirect_shoot_obj_with_obj":({"indirect_shoot_obj_with_obj",}),"direct_attack_liv_only":({"direct_attack_liv_only",}),"eventquell":({"eventQuell",}),"debug":({"debug",}),"seterrormessage":({"SetErrorMessage",}),"disableactions":({"DisableActions",}),"eventpick":({"eventPick",}),"strip_flags":({"strip_flags",}),"do_cast_obj":({"do_cast_obj",}),"alphap":({"alphap",}),"can_wear_obj_on_str":({"can_wear_obj_on_str",}),"can_press_str_on_obj":({"can_press_str_on_obj",}),"can_bait_obj_with_obj":({"can_bait_obj_with_obj",}),"can_shake_str_on_obj":({"can_shake_str_on_obj",}),"direct_blades_liv":({"direct_blades_liv",}),"evententergame":({"eventEnterGame",}),"can_pulsecheck_liv":({"can_pulsecheck_liv",}),"direct_sacrifice_obj_to_str":({"direct_sacrifice_obj_to_str",}),"getlastcommand":({"GetLastCommand",}),"do_whisper_in_wrd_to_liv_str":({"do_whisper_in_wrd_to_liv_str",}),"addpoison":({"AddPoison",}),"cmd_alias":({"cmd_alias",}),"can_whisper_in_wrd_to_liv":({"can_whisper_in_wrd_to_liv",}),"checkip":({"CheckIp",}),"nominative":({"nominative",}),"do_modify_obj_str":({"do_modify_obj_str",}),"removeshake":({"RemoveShake",}),"cancelcharmode":({"CancelCharmode",}),"getbonusduration":({"GetBonusDuration",}),"eventopen":({"eventOpen",}),"direct_empty_obj":({"direct_empty_obj",}),"eventdrink":({"eventDrink",}),"do_cast_str_against_str":({"do_cast_str_against_str",}),"getspellbook":({"GetSpellBook",}),"getrefuelable":({"GetRefuelable",}),"do_load":({"do_load",}),"setcansit":({"SetCanSit",}),"inputgender":({"InputGender",}),"do_delete_obj":({"do_delete_obj",}),"getdeterioration":({"GetDeterioration",}),"getshadowobject":({"GetShadowObject",}),"do_echo_str":({"do_echo_str",}),"can_follow":({"can_follow",}),"can_put_obs_obj":({"can_put_obs_obj",}),"cardinal":({"cardinal",}),"eventkillenemy":({"eventKillEnemy",}),"getscratches":({"GetScratches",}),"local_ctime":({"local_ctime",}),"addcarriedmass":({"AddCarriedMass",}),"setgomessage":({"SetGoMessage",}),"direct_sit_word_obj":({"direct_sit_word_obj",}),"conjunction":({"conjunction",}),"sethelp":({"SetHelp",}),"do_wear_obj_on_str":({"do_wear_obj_on_str",}),"setshadowobject":({"SetShadowObject",}),"eventaddcandidate":({"eventAddCandidate",}),"getnightlight":({"GetNightLight",}),"gettouches":({"GetTouches",}),"indirect_apply_obj_word_obj":({"indirect_apply_obj_word_obj",}),"setmessages":({"SetMessages",}),"can_teach_str_to_liv":({"can_teach_str_to_liv",}),"append_line":({"append_line",}),"can_close":({"can_close",}),"setpressure":({"SetPressure",}),"do_look_at_obj":({"do_look_at_obj",}),"getterminal":({"GetTerminal",}),"canuse":({"CanUse",}),"do_jump_off_of":({"do_jump_off_of",}),"explode_list":({"explode_list",}),"do_ring_obj":({"do_ring_obj",}),"false":({"false",}),"domain_admin":({"domain_admin",}),"can_copy_str":({"can_copy_str",}),"add_event":({"add_event",}),"snoop":({"snoop",}),"do_reload_str_obj":({"do_reload_str_obj",}),"saveobject":({"SaveObject",}),"can_stealth":({"can_stealth",}),"can_swim_str":({"can_swim_str",}),"can_strike_obj":({"can_strike_obj",}),"setspecialtarget":({"SetSpecialTarget",}),"getpersistent":({"GetPersistent",}),"direct_knock_str_on_obj":({"direct_knock_str_on_obj",}),"do_smoke_from_obj":({"do_smoke_from_obj",}),"getcost":({"GetCost",}),"getresistancemap":({"GetResistanceMap",}),"query_host_port":({"query_host_port",}),"setprotection":({"SetProtection",}),"do_delete_enter_str":({"do_delete_enter_str",}),"can_read_str_word_obj":({"can_read_str_word_obj",}),"direct_scry_liv":({"direct_scry_liv",}),"getitemcondition":({"GetItemCondition",}),"setdrainrate":({"SetDrainRate",}),"window_size":({"window_size",}),"direct_can_give_liv_obj":({"direct_can_give_liv_obj",}),"can_pull_str_on_obj":({"can_pull_str_on_obj",}),"eventuse":({"eventUse",}),"getgermname":({"GetGermName",}),"direct_demonclaw_liv":({"direct_demonclaw_liv",}),"removeextrachannels":({"RemoveExtraChannels",}),"can_reload_every_str":({"can_reload_every_str",}),"getmaxrecursedepth":({"GetMaxRecurseDepth",}),"addsmell":({"AddSmell",}),"addbank":({"AddBank",}),"direct_verb_rule":({"direct_verb_rule",}),"save_player":({"save_player",}),"cmd_nmsh":({"cmd_nmsh",}),"do_extinguish_obs":({"do_extinguish_obs",}),"eventdestructdatapipe":({"eventDestructDataPipe",}),"can_cast_str_on_str":({"can_cast_str_on_str",}),"getcure":({"GetCure",}),"setinvis":({"SetInvis",}),"eventserverlistencallback":({"eventServerListenCallback",}),"setdoorstopped":({"SetDoorStopped",}),"indirect_pick_str_on_obj_with_obj":({"indirect_pick_str_on_obj_with_obj",}),"setmenuitems":({"SetMenuItems",}),"setpreventland":({"SetPreventLand",}),"write_data":({"write_data",}),"do_extinguish_obj":({"do_extinguish_obj",}),"do_read_str_on_obj":({"do_read_str_on_obj",}),"can_listen_to_str_word_obj":({"can_listen_to_str_word_obj",}),"setproperty":({"SetProperty",}),"setvirtfile":({"SetVirtFile",}),"getpress":({"GetPress",}),"getburntvalue":({"GetBurntValue",}),"true":({"true",}),"getsmellmap":({"GetSmellMap",}),"getstorageroom":({"GetStorageRoom",}),"changeclass":({"ChangeClass",}),"getread":({"GetRead",}),"can_shout_str":({"can_shout_str",}),"getstatus":({"GetStatus",}),"can_befriend_liv":({"can_befriend_liv",}),"can_put_obj_obj":({"can_put_obj_obj",}),"eventland":({"eventLand",}),"setmealtype":({"SetMealType",}),"can_deactivate_obj":({"can_deactivate_obj",}),"direct_wield_obj_word_str":({"direct_wield_obj_word_str",}),"getradiantlight":({"GetRadiantLight",}),"checkencounter":({"CheckEncounter",}),"eventdelete":({"eventDelete",}),"telnet_privp":({"telnet_privp",}),"can_ask_liv_about_str":({"can_ask_liv_about_str",}),"do_lie_word_obj":({"do_lie_word_obj",}),"direct_modify_obj_str":({"direct_modify_obj_str",}),"getmass":({"GetMass",}),"direct_consult_obj":({"direct_consult_obj",}),"can_bump_liv":({"can_bump_liv",}),"eventrestoreequip":({"eventRestoreEquip",}),"direct_regen_str_on_liv":({"direct_regen_str_on_liv",}),"cmd_remove":({"cmd_remove",}),"do_pull_str_on_obj":({"do_pull_str_on_obj",}),"levenshtein_distance":({"levenshtein_distance",}),"direct_steal_wrd_from_liv":({"direct_steal_wrd_from_liv",}),"setradiantlight":({"SetRadiantLight",}),"direct_give_liv_wrd_wrd":({"direct_give_liv_wrd_wrd",}),"eventremoveblessing":({"eventRemoveBlessing",}),"do_attack_liv":({"do_attack_liv",}),"eventofferteaching":({"eventOfferTeaching",}),"eventconvert":({"eventConvert",}),"limbcertain":({"LimbCertain",}),"starts_with_arr":({"starts_with_arr",}),"can_stealth_wrd":({"can_stealth_wrd",}),"wizardp":({"wizardp",}),"do_copy_str":({"do_copy_str",}),"can_sit_down_word_obj":({"can_sit_down_word_obj",}),"getcreatorbirth":({"GetCreatorBirth",}),"settitlelength":({"SetTitleLength",}),"do_cast_str_on_str":({"do_cast_str_on_str",}),"eventstrike":({"eventStrike",}),"setclass":({"SetClass",}),"do_swim_str":({"do_swim_str",}),"check_include_text":({"check_include_text",}),"setmaxitems":({"SetMaxItems",}),"getlimbs":({"GetLimbs",}),"setcommandresponses":({"SetCommandResponses",}),"do_dig_with_obj":({"do_dig_with_obj",}),"can_abandon_liv":({"can_abandon_liv",}),"addpartyquest":({"AddPartyQuest",}),"indirect_resurrect_obj":({"indirect_resurrect_obj",}),"confirmpassword":({"ConfirmPassword",}),"total_light":({"total_light",}),"direct_wizunlock_obj":({"direct_wizunlock_obj",}),"do_lock_obj_with_obj":({"do_lock_obj_with_obj",}),"direct_ride_word_str":({"direct_ride_word_str",}),"direct_read_obj":({"direct_read_obj",}),"do_connect":({"do_connect",}),"canattack":({"CanAttack",}),"indirect_shoot_liv_with_obj":({"indirect_shoot_liv_with_obj",}),"direct_ward_liv_against_wrd":({"direct_ward_liv_against_wrd",}),"getemptyname":({"GetEmptyName",}),"eventcre":({"eventCre",}),"do_donate_str_str_to_str":({"do_donate_str_str_to_str",}),"restorelimb":({"RestoreLimb",}),"direct_open_obj_with_obj":({"direct_open_obj_with_obj",}),"do_pulsecheck_liv":({"do_pulsecheck_liv",}),"do_swivel_str_on_obj":({"do_swivel_str_on_obj",}),"eventdonate":({"eventDonate",}),"querymap":({"QueryMap",}),"getbaseradiance":({"GetBaseRadiance",}),"can_shoot_obj_with_obj":({"can_shoot_obj_with_obj",}),"canapply":({"CanApply",}),"getpreventget":({"GetPreventGet",}),"eventcmdtype":({"eventCmdType",}),"can_sell_liv_obs":({"can_sell_liv_obs",}),"canturn":({"CanTurn",}),"direct_enter_obj":({"direct_enter_obj",}),"direct_burn_obj_with_obj":({"direct_burn_obj_with_obj",}),"direct_reload_str_obj":({"direct_reload_str_obj",}),"inventory_accessible":({"inventory_accessible",}),"getspelltype":({"GetSpellType",}),"getmastermap":({"GetMasterMap",}),"getmedium":({"GetMedium",}),"ceditsave":({"CeditSave",}),"domagunload":({"doMagUnload",}),"eventmount":({"eventMount",}),"setcommercial":({"SetCommercial",}),"agecheck":({"AgeCheck",}),"getcurrentcommand":({"GetCurrentCommand",}),"truncate":({"truncate",}),"can_cast_str_against_str":({"can_cast_str_against_str",}),"tell_room":({"tell_room",}),"getcombatchance":({"GetCombatChance",}),"direct_show_liv_obj":({"direct_show_liv_obj",}),"getexemptvirtual":({"GetExemptVirtual",}),"direct_smoke_from_obj":({"direct_smoke_from_obj",}),"eventloadindex":({"eventLoadIndex",}),"handleteller":({"HandleTeller",}),"setstat":({"SetStat",}),"can_activate":({"can_activate",}),"direct_look_obj":({"direct_look_obj",}),"redrawscreen":({"RedrawScreen",}),"do_bump_liv":({"do_bump_liv",}),"setareamap":({"SetAreaMap",}),"getloaded":({"GetLoaded",}),"do_shoot_obj_at_liv":({"do_shoot_obj_at_liv",}),"getburning":({"GetBurning",}),"can_speak_in_wrd_str":({"can_speak_in_wrd_str",}),"can_ask_liv_str":({"can_ask_liv_str",}),"getmissinglimbparent":({"GetMissingLimbParent",}),"starts_with":({"starts_with",}),"setmillimeter":({"SetMillimeter",}),"do_party_wrd_liv":({"do_party_wrd_liv",}),"can_load_obj":({"can_load_obj",}),"setwhereblock":({"SetWhereBlock",}),"direct_extinguish_obj":({"direct_extinguish_obj",}),"eventflood":({"eventFlood",}),"ordinal":({"ordinal",}),"getgagged":({"GetGagged",}),"listen_callback":({"listen_callback",}),"direct_whisper_in_wrd_to_liv_str":({"direct_whisper_in_wrd_to_liv_str",}),"getmagicpoints":({"GetMagicPoints",}),"cmd_work":({"cmd_work",}),"openhttpconnection":({"openHTTPConnection",}),"getdamagetype":({"GetDamageType",}),"addbait":({"AddBait",}),"do_drink_obj":({"do_drink_obj",}),"sethands":({"SetHands",}),"can_look_at_str_on_obj":({"can_look_at_str_on_obj",}),"startservice":({"StartService",}),"can_apply_obj_word_obj":({"can_apply_obj_word_obj",}),"can_sit_word_obj":({"can_sit_word_obj",}),"getlivinglong":({"GetLivingLong",}),"direct_delete_obj_from_here":({"direct_delete_obj_from_here",}),"do_whisper":({"do_whisper",}),"setspellbook":({"SetSpellBook",}),"query_month":({"query_month",}),"getpickingquality":({"GetPickingQuality",}),"can_load":({"can_load",}),"indirect_steal_obj_from_liv":({"indirect_steal_obj_from_liv",}),"eventforce":({"eventForce",}),"eventcompletechar":({"eventCompleteChar",}),"first":({"first",}),"direct_activate_obj_on_obj":({"direct_activate_obj_on_obj",}),"getteachinglanguages":({"GetTeachingLanguages",}),"getmatching":({"GetMatching",}),"can_get_wrd_from_obj":({"can_get_wrd_from_obj",}),"can_eat_obj":({"can_eat_obj",}),"getreligions":({"GetReligions",}),"direct_close_obj":({"direct_close_obj",}),"indirect_sell_obs_to_liv":({"indirect_sell_obs_to_liv",}),"do_evade_liv":({"do_evade_liv",}),"addhealthpoints":({"AddHealthPoints",}),"do_consult_obj":({"do_consult_obj",}),"indirect_free_liv_from_obj":({"indirect_free_liv_from_obj",}),"getannoyblock":({"GetAnnoyblock",}),"query_snooping":({"query_snooping",}),"eventreceive":({"eventReceive",}),"setarmed":({"SetArmed",}),"direct_unwield_obj":({"direct_unwield_obj",}),"get_doors":({"get_doors",}),"do_fly":({"do_fly",}),"direct_untrain_liv_to_str":({"direct_untrain_liv_to_str",}),"setstaminapoints":({"SetStaminaPoints",}),"direct_pour_obj_out":({"direct_pour_obj_out",}),"percent":({"percent",}),"getrequestresponses":({"GetRequestResponses",}),"do_vote_for_str":({"do_vote_for_str",}),"initializelocations":({"InitializeLocations",}),"eventtalkrespond":({"eventTalkRespond",}),"do_activate":({"do_activate",}),"canfly":({"CanFly",}),"set_privs":({"set_privs",}),"set_tz":({"set_tz",}),"direct_pulsecheck_liv":({"direct_pulsecheck_liv",}),"direct_animate_obj":({"direct_animate_obj",}),"setowner":({"SetOwner",}),"eventjump":({"eventJump",}),"do_deactivate_obj":({"do_deactivate_obj",}),"indirect_roll_obj_on_obj":({"indirect_roll_obj_on_obj",}),"getnobotcondition":({"GetNoBotCondition",}),"getinternaldesc":({"GetInternalDesc",}),"setsearch":({"SetSearch",}),"getfingers":({"GetFingers",}),"gethistory":({"GetHistory",}),"createvirtualobject":({"CreateVirtualObject",}),"eventtrainskill":({"eventTrainSkill",}),"direct_delete_obj_from_room":({"direct_delete_obj_from_room",}),"addheartmodifier":({"AddHeartModifier",}),"direct_strike_obj":({"direct_strike_obj",}),"do_read_str_in_obj":({"do_read_str_in_obj",}),"addskillpoints":({"AddSkillPoints",}),"getcount":({"GetCount",}),"do_load_obj":({"do_load_obj",}),"getemptylong":({"GetEmptyLong",}),"getdirectionmap":({"GetDirectionMap",}),"getrecursedepth":({"GetRecurseDepth",}),"geteverfill":({"GetEverFill",}),"can_add_obj_to_here":({"can_add_obj_to_here",}),"do_smell_str_word_obj":({"do_smell_str_word_obj",}),"collect_moduli":({"collect_moduli",}),"direct_cloak_wrd":({"direct_cloak_wrd",}),"setinternaldesc":({"SetInternalDesc",}),"direct_scratch_on_str_on_obj":({"direct_scratch_on_str_on_obj",}),"indirect_poison_obj_with_obj":({"indirect_poison_obj_with_obj",}),"setdying":({"SetDying",}),"getknock":({"GetKnock",}),"can_say_str":({"can_say_str",}),"eventfly":({"eventFly",}),"eventcmdstou":({"eventCmdStou",}),"do_put_wrd_wrd_word_obj":({"do_put_wrd_wrd_word_obj",}),"foundtraps":({"FoundTraps",}),"getnightlong":({"GetNightLong",}),"eventcmdstor":({"eventCmdStor",}),"find_inheritors":({"find_inheritors",}),"removestat":({"RemoveStat",}),"getdisabled":({"GetDisabled",}),"eventturnon":({"eventTurnOn",}),"setterminal":({"SetTerminal",}),"getnospells":({"GetNoSpells",}),"query_hour":({"query_hour",}),"setrecursedepth":({"SetRecurseDepth",}),"query_invis":({"query_invis",}),"direct_attack_only_liv":({"direct_attack_only_liv",}),"can_ignore_liv":({"can_ignore_liv",}),"direct_force_liv_to_str":({"direct_force_liv_to_str",}),"direct_ask_liv_for_str":({"direct_ask_liv_for_str",}),"can_climb_word_obj":({"can_climb_word_obj",}),"do_light_obs":({"do_light_obs",}),"gethealthshort":({"GetHealthShort",}),"do_get_obs_out_of_obj":({"do_get_obs_out_of_obj",}),"indirect_bait_obj_with_obj":({"indirect_bait_obj_with_obj",}),"first_string_element":({"first_string_element",}),"setweapontype":({"SetWeaponType",}),"setdoor":({"SetDoor",}),"do_light_obj":({"do_light_obj",}),"do_pray_for_str_for_obj":({"do_pray_for_str_for_obj",}),"getsize":({"GetSize",}),"gettrainingmodifier":({"GetTrainingModifier",}),"can_pull_str_from_obj":({"can_pull_str_from_obj",}),"query_ip_name":({"query_ip_name",}),"setpermitload":({"SetPermitLoad",}),"file_present_logic":({"file_present_logic",}),"can_dig_obj_with_obj":({"can_dig_obj_with_obj",}),"setheat":({"SetHeat",}),"reflexive":({"reflexive",}),"getnoclean":({"GetNoClean",}),"can_go_into_str":({"can_go_into_str",}),"do_throw_obj_word_obj":({"do_throw_obj_word_obj",}),"getshadows":({"GetShadows",}),"eventstop":({"eventStop",}),"can_modify_word_str":({"can_modify_word_str",}),"getunique":({"GetUnique",}),"direct_pick_str_on_obj_with_obj":({"direct_pick_str_on_obj_with_obj",}),"iscorpse":({"isCorpse",}),"setgermname":({"SetGermName",}),"eventconnect":({"eventConnect",}),"addtrainingskills":({"AddTrainingSkills",}),"do_ask_obj_str":({"do_ask_obj_str",}),"do_add_obj_to_here":({"do_add_obj_to_here",}),"can_smell":({"can_smell",}),"can_speak":({"can_speak",}),"do_consult_str_on_obj":({"do_consult_str_on_obj",}),"user_path":({"user_path",}),"setgender":({"SetGender",}),"getresistance":({"GetResistance",}),"can_codesay":({"can_codesay",}),"wrap":({"wrap",}),"can_shoot_liv_with_obj":({"can_shoot_liv_with_obj",}),"do_speak_in_wrd":({"do_speak_in_wrd",}),"simple_map":({"simple_map",}),"cancastmagic":({"CanCastMagic",}),"indirect_look_at_obj_word_obj":({"indirect_look_at_obj_word_obj",}),"eventbuck":({"eventBuck",}),"direct_climb_obj":({"direct_climb_obj",}),"can_add_obj_to_room":({"can_add_obj_to_room",}),"query_names":({"query_names",}),"adminp":({"adminp",}),"getpagerprompt":({"GetPagerPrompt",}),"addstatpoints":({"AddStatPoints",}),"echocommand":({"EchoCommand",}),"getsides":({"GetSides",}),"getvirtual":({"GetVirtual",}),"setwanderspeed":({"SetWanderSpeed",}),"setworn":({"SetWorn",}),"canunlock":({"CanUnlock",}),"get_object":({"get_object",}),"debug_info":({"debug_info",}),"getbank":({"GetBank",}),"removeshadow":({"RemoveShadow",}),"indirect_get_obj_out_of_obj":({"indirect_get_obj_out_of_obj",}),"doroll":({"doRoll",}),"eventshow":({"eventShow",}),"getbane":({"GetBane",}),"can_kneel_word_obj":({"can_kneel_word_obj",}),"can_skin_with_obj":({"can_skin_with_obj",}),"setspellchance":({"SetSpellChance",}),"setparty":({"SetParty",}),"destructemptyvirtual":({"DestructEmptyVirtual",}),"net_dead":({"net_dead",}),"getcediting":({"GetCediting",}),"can_sell_obj_to_liv":({"can_sell_obj_to_liv",}),"eventbring":({"eventBring",}),"eventheartalk":({"eventHearTalk",}),"getrealname":({"GetRealName",}),"setemptyname":({"SetEmptyName",}),"base_name":({"base_name",}),"do_modify_word_str":({"do_modify_word_str",}),"canmarry":({"CanMarry",}),"query_intermud_ip":({"query_intermud_ip",}),"getmaxmagicpoints":({"GetMaxMagicPoints",}),"direct_backlash_for_liv_against_wrd":({"direct_backlash_for_liv_against_wrd",}),"get_closed":({"get_closed",}),"do_unwield_obs":({"do_unwield_obs",}),"getclimate":({"GetClimate",}),"can_show_liv_obj":({"can_show_liv_obj",}),"getbankname":({"GetBankName",}),"getmaxplayers":({"GetMaxPlayers",}),"getincombat":({"GetInCombat",}),"direct_fireball_at_liv":({"direct_fireball_at_liv",}),"setcankneel":({"SetCanKneel",}),"eventrequestcitizenship":({"eventRequestCitizenship",}),"direct_look_inside_obj":({"direct_look_inside_obj",}),"do_unwield_obj":({"do_unwield_obj",}),"istemporary":({"isTemporary",}),"cmdhelpclass":({"cmdHelpClass",}),"do_add_obj_to_room":({"do_add_obj_to_room",}),"do_shoot_obj_at_obj":({"do_shoot_obj_at_obj",}),"can_use_obj_to_str":({"can_use_obj_to_str",}),"direct_deactivate_obj":({"direct_deactivate_obj",}),"continueheart":({"ContinueHeart",}),"indirect_show_obj_to_liv":({"indirect_show_obj_to_liv",}),"canlock":({"CanLock",}),"getcanclimbcarried":({"GetCanClimbCarried",}),"setspelltype":({"SetSpellType",}),"setmastermap":({"SetMasterMap",}),"creatorp":({"creatorp",}),"random_numbers":({"random_numbers",}),"candigwith":({"CanDigWith",}),"do_give_obs_liv":({"do_give_obs_liv",}),"cango":({"CanGo",}),"getquestid":({"GetQuestId",}),"addemoteresponse":({"AddEmoteResponse",}),"eventjoin":({"eventJoin",}),"getundead":({"GetUndead",}),"get_objects":({"get_objects",}),"cmdpick":({"cmdPick",}),"can_move_str_on_obj":({"can_move_str_on_obj",}),"getkeepalive":({"GetKeepalive",}),"getallowsacrifice":({"GetAllowSacrifice",}),"do_sell_obj_to_liv":({"do_sell_obj_to_liv",}),"canunload":({"CanUnload",}),"indirect_put_obs_obj":({"indirect_put_obs_obj",}),"getcanbite":({"GetCanBite",}),"getcaffeine":({"GetCaffeine",}),"getexternaldesc":({"GetExternalDesc",}),"getpileamount":({"GetPileAmount",}),"arrange_string":({"arrange_string",}),"capitalize":({"capitalize",}),"ambassadorp":({"ambassadorp",}),"setmoney":({"SetMoney",}),"do_remove_obs":({"do_remove_obs",}),"getmaxclones":({"GetMaxClones",}),"getroomaffectlong":({"GetRoomAffectLong",}),"input_to":({"input_to",}),"can_steal_obj_from_liv":({"can_steal_obj_from_liv",}),"getbodytype":({"GetBodyType",}),"direct_whisper_in_wrd_to_liv":({"direct_whisper_in_wrd_to_liv",}),"trim":({"trim",}),"do_unload_obj":({"do_unload_obj",}),"do_remove_obj":({"do_remove_obj",}),"getwimpycommand":({"GetWimpyCommand",}),"indirect_get_obj_from_obj":({"indirect_get_obj_from_obj",}),"eventcheckprotection":({"eventCheckProtection",}),"can_drink_obj":({"can_drink_obj",}),"setexternaldesc":({"SetExternalDesc",}),"getrestrictedchannels":({"GetRestrictedChannels",}),"getnomodify":({"GetNoModify",}),"eventwander":({"eventWander",}),"getdummyitem":({"GetDummyItem",}),"setammofile":({"SetAmmoFile",}),"setwimpycommand":({"SetWimpyCommand",}),"alpha_strip":({"alpha_strip",}),"can_look_on_obj":({"can_look_on_obj",}),"addlead":({"AddLead",}),"direct_roll_obj_here":({"direct_roll_obj_here",}),"getmaxammo":({"GetMaxAmmo",}),"eventdeleteexit":({"eventDeleteExit",}),"direct_wear_obj":({"direct_wear_obj",}),"do_move_str_on_obj":({"do_move_str_on_obj",}),"do_remove_obs_out_of_obj":({"do_remove_obs_out_of_obj",}),"getpoisongas":({"GetPoisonGas",}),"builderp":({"builderp",}),"canload":({"CanLoad",}),"parse_comm":({"parse_comm",}),"gettitle":({"GetTitle",}),"getpenalty":({"GetPenalty",}),"direct_gale_liv":({"direct_gale_liv",}),"addquest":({"AddQuest",}),"eventsell":({"eventSell",}),"query_day_light":({"query_day_light",}),"abort_edit":({"abort_edit",}),"direct_activate_obj":({"direct_activate_obj",}),"homedir":({"homedir",}),"can_listen":({"can_listen",}),"eventteachplayer":({"eventTeachPlayer",}),"can_news_str":({"can_news_str",}),"direct_uninstall_obj":({"direct_uninstall_obj",}),"setdestructondrop":({"SetDestructOnDrop",}),"setreligions":({"SetReligions",}),"addlisten":({"AddListen",}),"getcannotinfect":({"GetCannotInfect",}),"can_evade_liv":({"can_evade_liv",}),"getreads":({"GetReads",}),"eventflushqueuedmessages":({"eventFlushQueuedMessages",}),"can_pour_obj_out":({"can_pour_obj_out",}),"can_turn_obj":({"can_turn_obj",}),"eventabortcallback":({"eventAbortCallback",}),"getspell":({"GetSpell",}),"setvisiblegrid":({"SetVisibleGrid",}),"can_put_wrd_wrd_word_obj":({"can_put_wrd_wrd_word_obj",}),"canreceivehealing":({"CanReceiveHealing",}),"eventmarry":({"eventMarry",}),"can_donate_str_str_to_str":({"can_donate_str_str_to_str",}),"setcannotinfect":({"SetCannotInfect",}),"getwanderpath":({"GetWanderPath",}),"do_climb_word_obj":({"do_climb_word_obj",}),"eventopenaccount":({"eventOpenAccount",}),"getuniqueid":({"GetUniqueId",}),"do_listen_to_str_word_obj":({"do_listen_to_str_word_obj",}),"direct_bury_str_with_obj":({"direct_bury_str_with_obj",}),"imc2_mud_name":({"imc2_mud_name",}),"getgodmode":({"GetGodMode",}),"setpoison":({"SetPoison",}),"getbait":({"GetBait",}),"setterraintype":({"SetTerrainType",}),"absolute_value":({"absolute_value",}),"do_backstab_liv":({"do_backstab_liv",}),"setmaxfishing":({"SetMaxFishing",}),"do_give_obj_liv":({"do_give_obj_liv",}),"query_night":({"query_night",}),"eventswim":({"eventSwim",}),"getcaliber":({"GetCaliber",}),"do_whisper_to_liv_str":({"do_whisper_to_liv_str",}),"setmatching":({"SetMatching",}),"can_target_liv_only":({"can_target_liv_only",}),"cansacrifice":({"CanSacrifice",}),"gettraps":({"GetTraps",}),"can_pray_for_str_for_obj":({"can_pray_for_str_for_obj",}),"getopenfee":({"GetOpenFee",}),"tell_player":({"tell_player",}),"shout":({"shout",}),"setstats":({"SetStats",}),"can_pour_from_obj_into_obj":({"can_pour_from_obj_into_obj",}),"addtrainingpoints":({"AddTrainingPoints",}),"eventpostrelease":({"eventPostRelease",}),"checkcollapse":({"checkCollapse",}),"geteffectivevision":({"GetEffectiveVision",}),"do_marry_liv_to_liv":({"do_marry_liv_to_liv",}),"gettalkhistory":({"GetTalkHistory",}),"getdead":({"GetDead",}),"indirect_put_obj_obj":({"indirect_put_obj_obj",}),"can_open_obj_with_obj":({"can_open_obj_with_obj",}),"getcommandnumber":({"GetCommandNumber",}),"setemptylong":({"SetEmptyLong",}),"indirect_show_obj_liv":({"indirect_show_obj_liv",}),"can_crawl_into_str":({"can_crawl_into_str",}),"getlockable":({"GetLockable",}),"setfirearmtype":({"SetFirearmType",}),"getfueltype":({"GetFuelType",}),"setnightlong":({"SetNightLong",}),"can_delete_room_str":({"can_delete_room_str",}),"settown":({"SetTown",}),"do_fill_obj_with_obj":({"do_fill_obj_with_obj",}),"getfuelrequired":({"GetFuelRequired",}),"indirect_give_liv_obj":({"indirect_give_liv_obj",}),"eventskin":({"eventSkin",}),"getdummyitems":({"GetDummyItems",}),"addstuff":({"AddStuff",}),"setcancommand":({"SetCanCommand",}),"do_kneel_word_obj":({"do_kneel_word_obj",}),"getstatlevel":({"GetStatLevel",}),"removehostile":({"RemoveHostile",}),"getpreventsteal":({"GetPreventSteal",}),"do_ring_str_on_obj_with_obj":({"do_ring_str_on_obj_with_obj",}),"direct_ignore_liv":({"direct_ignore_liv",}),"eventroll":({"eventRoll",}),"can_light_obj":({"can_light_obj",}),"direct_challenge_liv":({"direct_challenge_liv",}),"do_touch_obj":({"do_touch_obj",}),"setfuelrequired":({"SetFuelRequired",}),"setsource":({"SetSource",}),"do_target_liv_only":({"do_target_liv_only",}),"do_news_str":({"do_news_str",}),"getguestname":({"GetGuestName",}),"do_cast_str_on_str_of_obj":({"do_cast_str_on_str_of_obj",}),"do_turn_obj":({"do_turn_obj",}),"direct_swim_into_str":({"direct_swim_into_str",}),"do_ride_into_str":({"do_ride_into_str",}),"setnonlocalfee":({"SetNonLocalFee",}),"can_look_str":({"can_look_str",}),"getlistenmap":({"GetListenMap",}),"setpreventsteal":({"SetPreventSteal",}),"seteverfill":({"SetEverFill",}),"getfilename":({"GetFileName",}),"can_pray_for_str_against_str_for_liv":({"can_pray_for_str_against_str_for_liv",}),"can_get_obj_out_of_obj":({"can_get_obj_out_of_obj",}),"getnextlevel":({"GetNextLevel",}),"can_fish_with_obj":({"can_fish_with_obj",}),"returnchannels":({"returnChannels",}),"eventhelp":({"eventHelp",}),"settrapdescription":({"SetTrapDescription",}),"do_unlock_obj_with_str":({"do_unlock_obj_with_str",}),"getequippedshort":({"GetEquippedShort",}),"can_enter_into_str":({"can_enter_into_str",}),"indirect_give_obs_to_liv":({"indirect_give_obs_to_liv",}),"hostresolved":({"hostResolved",}),"canswivel":({"CanSwivel",}),"setbonusduration":({"SetBonusDuration",}),"setdisabled":({"SetDisabled",}),"setnospells":({"SetNoSpells",}),"do_stand":({"do_stand",}),"eventpreview":({"eventPreview",}),"do_use_obj_to_str":({"do_use_obj_to_str",}),"do_describe_str":({"do_describe_str",}),"do_stealth":({"do_stealth",}),"save_file":({"save_file",}),"do_sink_down":({"do_sink_down",}),"removeteachinglanguages":({"RemoveTeachingLanguages",}),"allowget":({"AllowGet",}),"begin_post":({"begin_post",}),"do_delete_room_str":({"do_delete_room_str",}),"direct_give_wrd_wrd_to_liv":({"direct_give_wrd_wrd_to_liv",}),"replace_nickname":({"replace_nickname",}),"do_initfix_word":({"do_initfix_word",}),"setlong":({"SetLong",}),"setdestructonclose":({"SetDestructOnClose",}),"do_fill_obj_from_obj":({"do_fill_obj_from_obj",}),"can_add_obj":({"can_add_obj",}),"addquestcurrency":({"AddQuestCurrency",}),"eventretrycommand":({"eventRetryCommand",}),"getreferer":({"GetReferer",}),"do_pick_str_on_obj_with_obj":({"do_pick_str_on_obj_with_obj",}),"can_createfix_word":({"can_createfix_word",}),"addstaminapoints":({"AddStaminaPoints",}),"direct_arrow_at_liv":({"direct_arrow_at_liv",}),"inputpassword":({"InputPassword",}),"readbook":({"ReadBook",}),"addbodymass":({"AddBodyMass",}),"getclan":({"GetClan",}),"direct_knock_on_str_on_obj":({"direct_knock_on_str_on_obj",}),"gethost":({"GetHost",}),"eventlay":({"eventLay",}),"getperforated":({"GetPerforated",}),"eventremoveitem":({"eventRemoveItem",}),"getexperiencepoints":({"GetExperiencePoints",}),"indirect_reload_every_str":({"indirect_reload_every_str",}),"do_touch_str_word_obj":({"do_touch_str_word_obj",}),"eventfloat":({"eventFloat",}),"reset_prompt":({"reset_prompt",}),"direct_get_obj_obj":({"direct_get_obj_obj",}),"additem":({"AddItem",}),"do_dig_str_with_obj":({"do_dig_str_with_obj",}),"getstaminacost":({"GetStaminaCost",}),"direct_climb_word_obj":({"direct_climb_word_obj",}),"livings":({"livings",}),"eventmoveliving":({"eventMoveLiving",}),"getsavename":({"GetSaveName",}),"initcomposition":({"InitComposition",}),"direct_holylight_liv":({"direct_holylight_liv",}),"getwear":({"GetWear",}),"do_balance_obj_str_obj":({"do_balance_obj_str_obj",}),"setlimb":({"SetLimb",}),"getlastpuff":({"GetLastPuff",}),"eventdarken":({"eventDarken",}),"settitles":({"SetTitles",}),"setfingers":({"SetFingers",}),"setcediting":({"SetCediting",}),"do_look_str":({"do_look_str",}),"getcarriedmass":({"GetCarriedMass",}),"direct_shoot_obj_at_liv":({"direct_shoot_obj_at_liv",}),"query_cwd":({"query_cwd",}),"query_season":({"query_season",}),"do_knock_on_obj":({"do_knock_on_obj",}),"setrealname":({"SetRealName",}),"setkeepalive":({"SetKeepalive",}),"getassets":({"GetAssets",}),"eventteachlanguage":({"eventTeachLanguage",}),"eventescape":({"eventEscape",}),"eventdestruct":({"eventDestruct",}),"do_get_obs_obj":({"do_get_obs_obj",}),"can_unlock_obj_with_str":({"can_unlock_obj_with_str",}),"can_look_in_obj":({"can_look_in_obj",}),"getcombatbonus":({"GetCombatBonus",}),"direct_turn_obj_on":({"direct_turn_obj_on",}),"cmd_nickname":({"cmd_nickname",}),"setmaxclones":({"SetMaxClones",}),"setbankname":({"SetBankName",}),"do_wizunlock_obj":({"do_wizunlock_obj",}),"getadjectives":({"GetAdjectives",}),"member_group":({"member_group",}),"getencounter":({"GetEncounter",}),"direct_turn_off_obj":({"direct_turn_off_obj",}),"setcharge":({"SetCharge",}),"direct_roll_obj_on_obj":({"direct_roll_obj_on_obj",}),"direct_fly_into_str":({"direct_fly_into_str",}),"addmuffed":({"AddMuffed",}),"setkey":({"SetKey",}),"eventcatch":({"eventCatch",}),"to_object":({"to_object",}),"direct_portal_to_liv":({"direct_portal_to_liv",}),"do_roll_obs_here":({"do_roll_obs_here",}),"can_activate_obj":({"can_activate_obj",}),"getcurrencies":({"GetCurrencies",}),"reverse_memberp":({"reverse_memberp",}),"direct_lock_obj_with_obj":({"direct_lock_obj_with_obj",}),"removeskill":({"RemoveSkill",}),"setnoclean":({"SetNoClean",}),"query_local_functions":({"query_local_functions",}),"do_mount_liv":({"do_mount_liv",}),"payment":({"Payment",}),"round":({"round",}),"direct_swivel_str_on_obj":({"direct_swivel_str_on_obj",}),"getspeed":({"GetSpeed",}),"is_living":({"is_living",}),"setpoisongas":({"SetPoisonGas",}),"objective":({"objective",}),"getdisablechance":({"GetDisableChance",}),"can_give_obj_to_liv":({"can_give_obj_to_liv",}),"setplayerkill":({"SetPlayerKill",}),"direct_use_obj_to_str":({"direct_use_obj_to_str",}),"can_zap_liv":({"can_zap_liv",}),"query_player_money":({"query_player_money",}),"setbodytype":({"SetBodyType",}),"do_crawl_into_str":({"do_crawl_into_str",}),"setemptyshort":({"SetEmptyShort",}),"getreligion":({"GetReligion",}),"getstrikechance":({"GetStrikeChance",}),"can_reload_str_word":({"can_reload_str_word",}),"can_get_wrd_out_of_obj":({"can_get_wrd_out_of_obj",}),"direct_createfix":({"direct_createfix",}),"direct_remedy_liv":({"direct_remedy_liv",}),"adddrink":({"AddDrink",}),"indirect_get_obs_from_obj":({"indirect_get_obs_from_obj",}),"damerau_levenshtein_distance":({"damerau_levenshtein_distance",}),"setorigin":({"SetOrigin","setOrigin",}),"setnomodify":({"SetNoModify",}),"strip_article":({"strip_article",}),"getmaxsitters":({"GetMaxSitters",}),"eventrename":({"eventRename",}),"eventreleaseobject":({"eventReleaseObject",}),"setpistoltype":({"SetPistolType",}),"direct_annihilate_liv":({"direct_annihilate_liv",}),"direct_listen_to_str_word_obj":({"direct_listen_to_str_word_obj",}),"removesearch":({"RemoveSearch",}),"getextrachannels":({"GetExtraChannels",}),"eventcomplete":({"eventComplete",}),"do_pour_obj_into_obj":({"do_pour_obj_into_obj",}),"setdefaultlanguage":({"SetDefaultLanguage",}),"setstrikechance":({"SetStrikeChance",}),"unloadall":({"UnloadAll",}),"do_knock_obj":({"do_knock_obj",}),"getkeyname":({"GetKeyName",}),"can_balance_obj_str_obj":({"can_balance_obj_str_obj",}),"do_learn_str_from_liv":({"do_learn_str_from_liv",}),"hiddenp":({"hiddenp",}),"can_disarm_obj":({"can_disarm_obj",}),"removefollower":({"RemoveFollower",}),"createdoor":({"CreateDoor",}),"getforced":({"GetForced",}),"sortenemies":({"SortEnemies",}),"cmdsearch":({"cmdSearch",}),"can_put_obj_word_obj":({"can_put_obj_word_obj",}),"format_page":({"format_page",}),"getburnrate":({"GetBurnRate",}),"numericp":({"numericp",}),"minutes":({"minutes",}),"getlead":({"GetLead",}),"do_give_obj_to_liv":({"do_give_obj_to_liv",}),"do_enter_into_str":({"do_enter_into_str",}),"direct_aura_liv":({"direct_aura_liv",}),"can_learn":({"can_learn",}),"canshoot":({"CanShoot",}),"direct_cleanse_liv":({"direct_cleanse_liv",}),"heallimb":({"HealLimb",}),"getsmells":({"GetSmells",}),"can_wield_obj_word_str":({"can_wield_obj_word_str",}),"setclimate":({"SetClimate",}),"removelimb":({"RemoveLimb",}),"do_deactivate_obj_on_obj":({"do_deactivate_obj_on_obj",}),"do_reload_str_word":({"do_reload_str_word",}),"do_get_obj_obj":({"do_get_obj_obj",}),"eventstab":({"eventStab",}),"can_resurrect_obj":({"can_resurrect_obj",}),"center":({"center",}),"do_kneel_down":({"do_kneel_down",}),"logon":({"logon",}),"switchlocations":({"SwitchLocations",}),"isdirectory":({"isDirectory",}),"getweight":({"GetWeight",}),"removerider":({"RemoveRider",}),"can_steal_wrd_from_liv":({"can_steal_wrd_from_liv",}),"direct_dismount_liv":({"direct_dismount_liv",}),"setexemptvirtual":({"SetExemptVirtual",}),"addqueststatpoints":({"AddQuestStatPoints",}),"do_jump_from_obj":({"do_jump_from_obj",}),"eventstealth":({"eventStealth",}),"getdeathevents":({"GetDeathEvents",}),"setquestid":({"SetQuestId",}),"do_eat_obj":({"do_eat_obj",}),"do_mail":({"do_mail",}),"settax":({"SetTax",}),"do_createfix_word":({"do_createfix_word",}),"showrounds":({"ShowRounds",}),"addcurrency":({"AddCurrency",}),"singular_array":({"singular_array",}),"valid_edit":({"valid_edit",}),"direct_blades_at_liv":({"direct_blades_at_liv",}),"can_rock_str_on_obj":({"can_rock_str_on_obj",}),"can_touch_obj":({"can_touch_obj",}),"setpress":({"SetPress",}),"getretainondeath":({"GetRetainOnDeath",}),"removestatbonus":({"RemoveStatBonus",}),"direct_fly_word_str":({"direct_fly_word_str",}),"direct_cast_str_on_str_of_obj":({"direct_cast_str_on_str_of_obj",}),"setcanbite":({"SetCanBite",}),"eventreadfile":({"eventReadFile",}),"settrainedskills":({"SetTrainedSkills",}),"geterormessage":({"GetErorMessage",}),"eventdigwith":({"eventDigWith",}),"getrange":({"GetRange",}),"eventcompleteheal":({"eventCompleteHeal",}),"getactionsenabled":({"GetActionsEnabled",}),"isbag":({"isBag",}),"eventtouch":({"eventTouch",}),"eventuninstall":({"eventUninstall",}),"resetlocation":({"ResetLocation",}),"canuntrain":({"CanUnTrain",}),"direct_convert_liv":({"direct_convert_liv",}),"eventfall":({"eventFall",}),"getmaxhealthpoints":({"GetMaxHealthPoints",}),"direct_show_obj_to_liv":({"direct_show_obj_to_liv",}),"indirect_delete_obj_from_here":({"indirect_delete_obj_from_here",}),"setautoresets":({"SetAutoResets",}),"getsearch":({"GetSearch",}),"setlockable":({"SetLockable",}),"getvoteroom":({"GetVoteRoom",}),"getverbs":({"GetVerbs",}),"setfueltype":({"SetFuelType",}),"do_turn_obj_on":({"do_turn_obj_on",}),"can_sink_down":({"can_sink_down",}),"cmdpickclass":({"cmdPickClass",}),"getrank":({"GetRank",}),"can_judge_obj_to_obj":({"can_judge_obj_to_obj",}),"eventride":({"eventRide",}),"setbodycomposition":({"SetBodyComposition",}),"do_press_obj":({"do_press_obj",}),"getsmell":({"GetSmell",}),"eventdetect":({"eventDetect",}),"eventcmdcdup":({"eventCmdCdup",}),"eventrock":({"eventRock",}),"setcoordinates":({"SetCoordinates",}),"candest":({"CanDest",}),"cmdshow":({"cmdShow",}),"query_date":({"query_date",}),"can_roll_obj":({"can_roll_obj",}),"setmaxammo":({"SetMaxAmmo",}),"connect":({"connect",}),"direct_turn_off_obj_on_obj":({"direct_turn_off_obj_on_obj",}),"do_rock_str_on_obj":({"do_rock_str_on_obj",}),"valid_currency":({"valid_currency",}),"direct_crawl_into_str":({"direct_crawl_into_str",}),"eventlocklock":({"eventLockLock",}),"do_say_str":({"do_say_str",}),"eventwritecallback":({"eventWriteCallback",}),"eventexecuteattack":({"eventExecuteAttack",}),"do_get_wrd_wrd_from_obj":({"do_get_wrd_wrd_from_obj",}),"getwieldinglimbs":({"GetWieldingLimbs",}),"setclanobject":({"SetClanObject",}),"indent_file":({"indent_file",}),"getnetworth":({"GetNetWorth",}),"event":({"event",}),"checkpower":({"CheckPower",}),"removetouch":({"RemoveTouch",}),"can_drop_obj":({"can_drop_obj",}),"direct_mend_liv":({"direct_mend_liv",}),"getmelee":({"GetMelee",}),"setrequestresponses":({"SetRequestResponses",}),"getsavestring":({"GetSaveString",}),"addmagicprotection":({"AddMagicProtection",}),"heart_beat":({"heart_beat",}),"removeenemy":({"RemoveEnemy",}),"getitems":({"GetItems",}),"getcharacters":({"GetCharacters",}),"direct_look_at_obj_on_obj":({"direct_look_at_obj_on_obj",}),"getcurrencymass":({"GetCurrencyMass",}),"setspeakcolor":({"SetSpeakColor",}),"do_zap_lvs":({"do_zap_lvs",}),"eventshoot":({"eventShoot",}),"direct_shoot_obj_at_obj":({"direct_shoot_obj_at_obj",}),"addfingers":({"AddFingers",}),"can_say_to_liv_str":({"can_say_to_liv_str",}),"find_player":({"find_player",}),"getport":({"GetPort",}),"can_target_only_liv":({"can_target_only_liv",}),"confirmreconnect":({"ConfirmReconnect",}),"setgodmode":({"SetGodMode",}),"indirect_delete_obj_from_room":({"indirect_delete_obj_from_room",}),"setpreventdrop":({"SetPreventDrop",}),"cmd_unalias":({"cmd_unalias",}),"addhostile":({"AddHostile",}),"getlanguagepoints":({"GetLanguagePoints",}),"getgender":({"GetGender",}),"getaddress":({"GetAddress",}),"setcaliber":({"SetCaliber",}),"getneighbors":({"GetNeighbors",}),"can_look_at_obj":({"can_look_at_obj",}),"can_bury_str_with_obj":({"can_bury_str_with_obj",}),"indirect_dig_obj_with_obj":({"indirect_dig_obj_with_obj",}),"eventdeploy":({"eventDeploy",}),"do_jump_off_of_obj":({"do_jump_off_of_obj",}),"eventserverabortcallback":({"eventServerAbortCallback",}),"do_unload":({"do_unload",}),"getmaxliers":({"GetMaxLiers",}),"query_time_of_day":({"query_time_of_day",}),"create_message":({"create_message",}),"eventcheckhealing":({"eventCheckHealing",}),"createpassword":({"CreatePassword",}),"canspellattack":({"CanSpellAttack",}),"setopenfee":({"SetOpenFee",}),"can_get_obj":({"can_get_obj",}),"eventdrop":({"eventDrop",}),"do_codesay":({"do_codesay",}),"do_ring_obj_with_obj":({"do_ring_obj_with_obj",}),"timestamp":({"timestamp",}),"direct_smell_str_word_obj":({"direct_smell_str_word_obj",}),"getfollowermap":({"GetFollowerMap",}),"getdefensechance":({"GetDefenseChance",}),"getaffectlong":({"GetAffectLong",}),"dump_socket_status":({"dump_socket_status",}),"do_turn_obj_off":({"do_turn_obj_off",}),"web_translate":({"web_translate",}),"getlistens":({"GetListens",}),"socket_address":({"socket_address",}),"eventcommand":({"eventCommand",}),"can_open_obj":({"can_open_obj",}),"can_kneel":({"can_kneel",}),"eventreceiveobject":({"eventReceiveObject",}),"getemoteresponses":({"GetEmoteResponses",}),"indirect_burn_obj_with_obj":({"indirect_burn_obj_with_obj",}),"can_turn_off_obj":({"can_turn_off_obj",}),"eventdisconnect":({"eventDisconnect",}),"getrestrictlimbs":({"GetRestrictLimbs",}),"setprompt":({"SetPrompt",}),"can_fly_into_str":({"can_fly_into_str",}),"findprevdir":({"FindPrevDir",}),"make_workroom":({"make_workroom",}),"can_pick_str_on_obj":({"can_pick_str_on_obj",}),"can_listen_obj":({"can_listen_obj",}),"springtrap":({"SpringTrap",}),"getblocked":({"GetBlocked",}),"do_roll_obs":({"do_roll_obs",}),"eventcommandnpc":({"eventCommandNPC",}),"getitem":({"GetItem",}),"write":({"write",}),"do_look_at_obj_word_obj":({"do_look_at_obj_word_obj",}),"write2":({"write2",}),"settrainingmodifier":({"SetTrainingModifier",}),"do_roll_obj":({"do_roll_obj",}),"getdirectoryshort":({"GetDirectoryShort",}),"do_target_only_liv":({"do_target_only_liv",}),"setencounter":({"SetEncounter",}),"staminacost":({"StaminaCost",}),"getcurrentenemy":({"GetCurrentEnemy",}),"setactionsmap":({"SetActionsMap",}),"addbonusduration":({"AddBonusDuration",}),"eventcast":({"eventCast",}),"authenticate":({"authenticate",}),"addexit":({"AddExit",}),"eventjudge":({"eventJudge",}),"getopacity":({"GetOpacity",}),"do_drop_obs":({"do_drop_obs",}),"recalculatehist":({"RecalculateHist",}),"direct_throw_obj_word_obj":({"direct_throw_obj_word_obj",}),"removetrainingskills":({"RemoveTrainingSkills",}),"can_mount_liv":({"can_mount_liv",}),"can_roll_obj_on_str":({"can_roll_obj_on_str",}),"can_fly_str":({"can_fly_str",}),"do_drop_obj":({"do_drop_obj",}),"getproperties":({"GetProperties",}),"setcurrentenemy":({"SetCurrentEnemy",}),"do_pour_from_obj_into_obj":({"do_pour_from_obj_into_obj",}),"direct_consult_str_on_obj":({"direct_consult_str_on_obj",}),"getsacrificetype":({"GetSacrificeType",}),"repinkfish":({"repinkfish",}),"addcommandresponse":({"AddCommandResponse",}),"eventinitiate":({"eventInitiate",}),"eventresults":({"eventResults",}),"eventpicklock":({"eventPickLock",}),"direct_rock_obj":({"direct_rock_obj",}),"direct_unlock_obj_with_obj":({"direct_unlock_obj_with_obj",}),"do_pick_str_on_obj":({"do_pick_str_on_obj",}),"eventprint":({"eventPrint",}),"terminal_type":({"terminal_type",}),"do_enter_str":({"do_enter_str",}),"direct_show_obj_liv":({"direct_show_obj_liv",}),"domain_master":({"domain_master",}),"eventselectclass":({"eventSelectClass",}),"direct_drink_str_from_obj":({"direct_drink_str_from_obj",}),"indirect_toss_obj_at_obj":({"indirect_toss_obj_at_obj",}),"direct_give_liv_obs":({"direct_give_liv_obs",}),"month":({"month",}),"can_knock_obj":({"can_knock_obj",}),"getexchangefee":({"GetExchangeFee",}),"getnews":({"GetNews",}),"do_reset":({"do_reset",}),"direct_give_liv_obj":({"direct_give_liv_obj",}),"absolute_path":({"absolute_path",}),"translate":({"translate",}),"do_open_obj":({"do_open_obj",}),"do_roll_obj_on_str":({"do_roll_obj_on_str",}),"direct_disarm_obj":({"direct_disarm_obj",}),"direct_copy_obj_to_obj":({"direct_copy_obj_to_obj",}),"eventcmdlist":({"eventCmdList",}),"getaccountinfo":({"GetAccountInfo",}),"sendmeleemessages":({"SendMeleeMessages",}),"getside":({"GetSide",}),"read_matching_line":({"read_matching_line",}),"direct_turn_on_obj":({"direct_turn_on_obj",}),"direct_marry_liv_to_liv":({"direct_marry_liv_to_liv",}),"setreligion":({"SetReligion",}),"setscreen":({"SetScreen",}),"mkdir_recurse":({"mkdir_recurse",}),"copy":({"copy",}),"can_reload_obj":({"can_reload_obj",}),"setcount":({"SetCount",}),"do_shake_obj":({"do_shake_obj",}),"can_dismount_liv":({"can_dismount_liv",}),"page":({"Page",}),"eventunlock":({"eventUnlock",}),"eventretire":({"eventRetire",}),"eventbefriend":({"eventBefriend",}),"do_roll_obj_here":({"do_roll_obj_here",}),"canfree":({"CanFree",}),"cansteal":({"CanSteal",}),"setknock":({"SetKnock",}),"restrict":({"restrict",}),"continue_mail":({"continue_mail",}),"restoreobject":({"RestoreObject",}),"do_search_obj":({"do_search_obj",}),"strip_colors":({"strip_colors",}),"wipe_inv":({"wipe_inv",}),"canlogin":({"CanLogin",}),"setlisten":({"SetListen",}),"expand_keys":({"expand_keys",}),"do_uninstall_obj":({"do_uninstall_obj",}),"evententer":({"eventEnter",}),"eventreceivelay":({"eventReceiveLay",}),"eventlist":({"eventList",}),"remove_event":({"remove_event",}),"can_put_obs_word_obj":({"can_put_obs_word_obj",}),"canunequip":({"CanUnequip",}),"eventexecutequeuedcommands":({"eventExecuteQueuedCommands",}),"eventrequestdivorce":({"eventRequestDivorce",}),"setburnrate":({"SetBurnRate",}),"do_party_wrd_wrd":({"do_party_wrd_wrd",}),"direct_remedy_str_of_liv":({"direct_remedy_str_of_liv",}),"can_mail":({"can_mail",}),"setvirtualexits":({"SetVirtualExits",}),"check_light":({"check_light",}),"gethealthpoints":({"GetHealthPoints",}),"can_get_wrd_wrd_from_obj":({"can_get_wrd_wrd_from_obj",}),"getmaxcapture":({"GetMaxCapture",}),"do_swivel":({"do_swivel",}),"getpoison":({"GetPoison",}),"resolveobjectname":({"ResolveObjectName",}),"cmdhelp":({"cmdHelp",}),"getpull":({"GetPull",}),"eventblind":({"eventBlind",}),"direct_jump_word_word_obj":({"direct_jump_word_word_obj",}),"getprotect":({"GetProtect",}),"setcanfly":({"SetCanFly",}),"parsehook":({"ParseHook",}),"getundeadtype":({"GetUndeadType",}),"getequippeddescription":({"GetEquippedDescription",}),"getfurniture":({"GetFurniture",}),"do_say_to_liv_str":({"do_say_to_liv_str",}),"sethealthpoints":({"SetHealthPoints",}),"removerequestresponse":({"RemoveRequestResponse",}),"can_press_obj":({"can_press_obj",}),"getlogintime":({"GetLoginTime",}),"setclient":({"SetClient",}),"setteachingfee":({"SetTeachingFee",}),"getconsultresponses":({"GetConsultResponses",}),"getrequiredstamina":({"GetRequiredStamina",}),"getdaylong":({"GetDayLong",}),"convert_value":({"convert_value",}),"eventwimpy":({"eventWimpy",}),"getrandomlimb":({"GetRandomLimb",}),"getfollowed":({"GetFollowed",}),"getlanguagelevel":({"GetLanguageLevel",}),"do_sink":({"do_sink",}),"shb":({"shb",}),"removeenter":({"RemoveEnter",}),"unrestrictchannel":({"UnrestrictChannel",}),"eventunload":({"eventUnload",}),"direct_rock_wrd_obj":({"direct_rock_wrd_obj",}),"getsockettype":({"GetSocketType",}),"eventreceiveemote":({"eventReceiveEmote",}),"do_load_obj_word_obj":({"do_load_obj_word_obj",}),"can_lock_obj_with_obj":({"can_lock_obj_with_obj",}),"isplayer":({"isPlayer",}),"restrictchannel":({"RestrictChannel",}),"direct_backlash_for_liv":({"direct_backlash_for_liv",}),"can_swivel_wrd_obj":({"can_swivel_wrd_obj",}),"get_dummies":({"get_dummies",}),"setaction":({"SetAction",}),"getrespirationtype":({"GetRespirationType",}),"sethistorysize":({"SetHistorySize",}),"eventwrite":({"eventWrite",}),"getpoisonuses":({"GetPoisonUses",}),"cmddebugall":({"cmdDebugAll",}),"gettraplevel":({"GetTrapLevel",}),"can_swivel_str_on_obj":({"can_swivel_str_on_obj",}),"direct_drink_obj":({"direct_drink_obj",}),"do_pour_obj_onto_obj":({"do_pour_obj_onto_obj",}),"do_light_obj_with_obj":({"do_light_obj_with_obj",}),"canrepair":({"CanRepair",}),"indirect_reload":({"indirect_reload",}),"removelocation":({"RemoveLocation",}),"direct_dig_str_with_obj":({"direct_dig_str_with_obj",}),"getsource":({"GetSource",}),"can_swivel_obj":({"can_swivel_obj",}),"direct_teleport_to_liv":({"direct_teleport_to_liv",}),"startserver":({"StartServer",}),"direct_fill_obj_with_obj":({"direct_fill_obj_with_obj",}),"can_party_wrd_liv":({"can_party_wrd_liv",}),"can_consult_obj":({"can_consult_obj",}),"indirect_pour_from_obj_into_obj":({"indirect_pour_from_obj_into_obj",}),"getsitters":({"GetSitters",}),"direct_palm_liv":({"direct_palm_liv",}),"eventpreparebury":({"eventPrepareBury",}),"setkeyname":({"SetKeyName",}),"can_look_at_obj_word_obj":({"can_look_at_obj_word_obj",}),"getmorality":({"GetMorality",}),"do_swim_into_str":({"do_swim_into_str",}),"addfollowbonus":({"AddFollowBonus",}),"direct_reload":({"direct_reload",}),"direct_whisper_to_liv_str":({"direct_whisper_to_liv_str",}),"do_remove_obj_from_obj":({"do_remove_obj_from_obj",}),"eventsteal":({"eventSteal",}),"direct_dest_obj":({"direct_dest_obj",}),"addvisionbonus":({"AddVisionBonus",}),"do_learn_to_str_from_liv":({"do_learn_to_str_from_liv",}),"removetrainingpoints":({"RemoveTrainingPoints",}),"can_deactivate_obj_on_obj":({"can_deactivate_obj_on_obj",}),"eventcreateplayer":({"eventCreatePlayer",}),"getmaxskillpoints":({"GetMaxSkillPoints",}),"setinfect":({"SetInfect",}),"direct_evade_liv":({"direct_evade_liv",}),"unguarded":({"unguarded",}),"setfish":({"SetFish",}),"getmissinglimbparents":({"GetMissingLimbParents",}),"canbuy":({"CanBuy",}),"do_poison_obj_with_obj":({"do_poison_obj_with_obj",}),"eventspreadpoison":({"eventSpreadPoison",}),"getpk":({"GetPK",}),"high_mortalp":({"high_mortalp",}),"do_buy_str_from_liv":({"do_buy_str_from_liv",}),"price":({"price",}),"getremotetargets":({"GetRemoteTargets",}),"strip_colors_old":({"strip_colors_old",}),"do_turn_on_obj":({"do_turn_on_obj",}),"do_jump_through_obj":({"do_jump_through_obj",}),"getvehicleinterior":({"GetVehicleInterior",}),"set":({"set",}),"do_add_obj":({"do_add_obj",}),"gettalesdir":({"GetTalesDir",}),"getfight":({"GetFight",}),"can_knock_str_on_obj":({"can_knock_str_on_obj",}),"visible":({"visible",}),"parsepost":({"ParsePost",}),"direct_frigidus_liv":({"direct_frigidus_liv",}),"can_boobytrap_obj_with_obj":({"can_boobytrap_obj_with_obj",}),"direct_capture_liv_word_obj":({"direct_capture_liv_word_obj",}),"direct_fill_obj_from_obj":({"direct_fill_obj_from_obj",}),"direct_initfix_obj":({"direct_initfix_obj",}),"direct_listen_obj":({"direct_listen_obj",}),"eventbuy":({"eventBuy",}),"getcoords":({"GetCoords",}),"eventweaponround":({"eventWeaponRound",}),"direct_cast_obj":({"direct_cast_obj",}),"getrace":({"GetRace",}),"can_uninstall_obj_word_obj":({"can_uninstall_obj_word_obj",}),"setmaxliers":({"SetMaxLiers",}),"gethostiles":({"GetHostiles",}),"eventburnout":({"eventBurnOut",}),"setcomposition":({"SetComposition",}),"strip_colours":({"strip_colours",}),"getlimbclass":({"GetLimbClass",}),"eventextinguish":({"eventExtinguish",}),"setmaxrecursedepth":({"SetMaxRecurseDepth",}),"getdaylight":({"GetDayLight",}),"getcapname":({"GetCapName",}),"direct_pour_from_obj_into_obj":({"direct_pour_from_obj_into_obj",}),"eventstartvoting":({"eventStartVoting",}),"setmaxcommandhistsize":({"SetMaxCommandHistSize",}),"memberp":({"memberp",}),"setpoisonstrength":({"SetPoisonStrength",}),"getbaitstrength":({"GetBaitStrength",}),"indirect_burn_obs_with_obj":({"indirect_burn_obs_with_obj",}),"direct_jump_word_obj":({"direct_jump_word_obj",}),"direct_say_to_liv_str":({"direct_say_to_liv_str",}),"can_show_obj_liv":({"can_show_obj_liv",}),"settitle":({"SetTitle",}),"canreceivemagic":({"CanReceiveMagic",}),"gettitles":({"GetTitles",}),"getbasefile":({"GetBaseFile",}),"gethistorylist":({"GetHistoryList",}),"getgravity":({"GetGravity",}),"marriagerequest":({"MarriageRequest",}),"getstatsmap":({"GetStatsMap",}),"direct_corrupt_liv":({"direct_corrupt_liv",}),"getnoncurrencymass":({"GetNonCurrencyMass",}),"setreads":({"SetReads",}),"setmagnum":({"SetMagnum",}),"addsurcharge":({"AddSurcharge",}),"can_enter_str":({"can_enter_str",}),"setbaitstrength":({"SetBaitStrength",}),"can_ask_obj_str":({"can_ask_obj_str",}),"can_give_liv_obj":({"can_give_liv_obj",}),"direct_light_obj":({"direct_light_obj",}),"setspell":({"SetSpell",}),"addskillbonus":({"AddSkillBonus",}),"setdefaultexits":({"SetDefaultExits",}),"gettax":({"GetTax",}),"set_board_id":({"set_board_id",}),"print_long_string":({"print_long_string",}),"getenemies":({"GetEnemies",}),"eventweaponattack":({"eventWeaponAttack",}),"can_give_liv_wrd_wrd":({"can_give_liv_wrd_wrd",}),"can_remove_obj_from_obj":({"can_remove_obj_from_obj",}),"addterraintype":({"AddTerrainType",}),"setclose":({"SetClose",}),"eventreentergame":({"eventReEnterGame",}),"gettraptype":({"GetTrapType",}),"sethiddendoor":({"SetHiddenDoor",}),"direct_force_liv_str":({"direct_force_liv_str",}),"query_dupes":({"query_dupes",}),"direct_drain_liv":({"direct_drain_liv",}),"eventreceiveattack":({"eventReceiveAttack",}),"direct_delete_obj_from_obj":({"direct_delete_obj_from_obj",}),"getcharge":({"GetCharge",}),"direct_touch_str_word_obj":({"direct_touch_str_word_obj",}),"direct_createfix_obj":({"direct_createfix_obj",}),"system_month":({"system_month",}),"getexit":({"GetExit",}),"eventtrainliving":({"eventTrainLiving",}),"can_poison_obj_with_obj":({"can_poison_obj_with_obj",}),"eventmagicround":({"eventMagicRound",}),"load_object":({"load_object",}),"canbank":({"CanBank",}),"eventswivel":({"eventSwivel",}),"setmuffed":({"SetMuffed",}),"getquest":({"GetQuest",}),"eventpreparedig":({"eventPrepareDig",}),"setfood":({"SetFood",}),"indirect_give_obs_liv":({"indirect_give_obs_liv",}),"can_echo_to_liv_str":({"can_echo_to_liv_str",}),"can_shake_obj":({"can_shake_obj",}),"testp":({"testp",}),"replace_matching_line":({"replace_matching_line",}),"add":({"add",}),"getmaxcommandhistsize":({"GetMaxCommandHistSize",}),"direct_compare_obj_to_obj":({"direct_compare_obj_to_obj",}),"can_ride_str":({"can_ride_str",}),"eventserverwritecallback":({"eventServerWriteCallback",}),"canweapon":({"CanWeapon",}),"direct_reload_obj":({"direct_reload_obj",}),"geteuid":({"geteuid",}),"removefish":({"RemoveFish",}),"getkeys":({"GetKeys",}),"atoi":({"atoi",}),"eventturn":({"eventTurn",}),"leaderp":({"leaderp",}),"direct_install_obj_word_obj":({"direct_install_obj_word_obj",}),"dbz_colors":({"dbz_colors",}),"direct_gaze":({"direct_gaze",}),"canabandon":({"CanAbandon",}),"can_ring_str_on_obj_with_obj":({"can_ring_str_on_obj_with_obj",}),"can_unwield_obj":({"can_unwield_obj",}),"say":({"say",}),"getorigin":({"GetOrigin","getOrigin",}),"do_zap_liv":({"do_zap_liv",}),"can_follow_liv":({"can_follow_liv",}),"users":({"users",}),"direct_fly":({"direct_fly",}),"getghost":({"GetGhost",}),"getrequestresponse":({"GetRequestResponse",}),"do_swivel_wrd_obj":({"do_swivel_wrd_obj",}),"retrievecmdcallback":({"RetrieveCmdCallback",}),"getprotection":({"GetProtection",}),"direct_search_str_word_obj":({"direct_search_str_word_obj",}),"eventid":({"eventID",}),"getstudents":({"GetStudents",}),"canmail":({"CanMail",}),"eventsocketerror":({"eventSocketError",}),"cmdparserefresh":({"cmdParseRefresh",}),"getuniquefilename":({"GetUniqueFileName",}),"getbasecost":({"GetBaseCost",}),"do_echo_to_liv_str":({"do_echo_to_liv_str",}),"eventcmdsyst":({"eventCmdSyst",}),"setblocked":({"SetBlocked",}),"getheartrate":({"GetHeartRate",}),"eventmovefollowers":({"eventMoveFollowers",}),"getbury":({"GetBury",}),"abs":({"abs",}),"indirect_throw_obj_into_obj":({"indirect_throw_obj_into_obj",}),"query_year":({"query_year",}),"parse_command_plural_id_list":({"parse_command_plural_id_list",}),"can_rock_wrd_obj":({"can_rock_wrd_obj",}),"setmountowner":({"SetMountOwner",}),"getsurroundareas":({"GetSurroundAreas",}),"direct_pour_obj_into_obj":({"direct_pour_obj_into_obj",}),"direct_acidspray_liv":({"direct_acidspray_liv",}),"indirect_add_obj":({"indirect_add_obj",}),"can_roll_str_on_obj":({"can_roll_str_on_obj",}),"can_body_liv":({"can_body_liv",}),"setopacity":({"SetOpacity",}),"indirect_put_obj_word_obj":({"indirect_put_obj_word_obj",}),"do_initfix_obj":({"do_initfix_obj",}),"eventcontinue":({"eventContinue",}),"day":({"day",}),"getbriefmode":({"GetBriefMode",}),"direct_rejuvinate_liv":({"direct_rejuvinate_liv",}),"indirect_add_obj_to_here":({"indirect_add_obj_to_here",}),"setrespiration":({"SetRespiration",}),"can_pick_str_on_obj_with_obj":({"can_pick_str_on_obj_with_obj",}),"can_sink":({"can_sink",}),"eventsave":({"eventSave",}),"indirect_turn_off_obj_on_obj":({"indirect_turn_off_obj_on_obj",}),"cmdtouch":({"cmdTouch",}),"convert_newline":({"convert_newline",}),"setdisablechance":({"SetDisableChance",}),"cmd_read":({"cmd_read",}),"indirect_drink_from_obj":({"indirect_drink_from_obj",}),"setlivingshort":({"SetLivingShort",}),"eventgo":({"eventGo",}),"settraplevel":({"SetTrapLevel",}),"do_ride_str":({"do_ride_str",}),"direct_swim_str":({"direct_swim_str",}),"getbytes":({"GetBytes",}),"indirect_give_obj_liv":({"indirect_give_obj_liv",}),"clean_array":({"clean_array",}),"getip":({"GetIp",}),"eventpreattack":({"eventPreAttack",}),"setextrachannels":({"SetExtraChannels",}),"addsearchpath":({"AddSearchPath",}),"direct_swivel_obj":({"direct_swivel_obj",}),"ceditcollate":({"CeditCollate",}),"direct_learn_str_from_liv":({"direct_learn_str_from_liv",}),"setfollowed":({"SetFollowed",}),"eventunshadow":({"eventUnshadow",}),"addtalkresponse":({"AddTalkResponse",}),"do_ignore_lvs":({"do_ignore_lvs",}),"do_roll_str_on_obj":({"do_roll_str_on_obj",}),"getid":({"GetId",}),"getclimateexposed":({"GetClimateExposed",}),"this_agent":({"this_agent",}),"getflaskuses":({"GetFlaskUses",}),"checkguardeds":({"CheckGuardeds",}),"do_news":({"do_news",}),"canputonto":({"CanPutOnto",}),"getpick":({"GetPick",}),"direct_lie_word_obj":({"direct_lie_word_obj",}),"cmd_eventdestruct":({"cmd_eventDestruct",}),"present_bonus":({"present_bonus",}),"checkactions":({"CheckActions",}),"query_charmode":({"query_charmode",}),"path_prefix":({"path_prefix",}),"indirect_add_obj_to_room":({"indirect_add_obj_to_room",}),"eventgetmoney":({"eventGetMoney",}),"season":({"season",}),"setfirearmname":({"SetFirearmName",}),"alpha_crypt":({"alpha_crypt",}),"getverb":({"GetVerb",}),"do_light_obs_with_obj":({"do_light_obs_with_obj",}),"canbait":({"CanBait",}),"addmenuitem":({"AddMenuItem",}),"local_time":({"local_time",}),"query_access":({"query_access",}),"system_day":({"system_day",}),"getpolyglot":({"GetPolyglot",}),"eventmeleeround":({"eventMeleeRound",}),"reap_list":({"reap_list",}),"indirect_judge_obj_to_obj":({"indirect_judge_obj_to_obj",}),"direct_bite_liv":({"direct_bite_liv",}),"do_copy_obj_str":({"do_copy_obj_str",}),"direct_wear_obj_on_str":({"direct_wear_obj_on_str",}),"eventnegotiateobstacles":({"eventNegotiateObstacles",}),"getopen":({"GetOpen",}),"gethb":({"GetHB",}),"query_minutes":({"query_minutes",}),"do_delete_obj_from_here":({"do_delete_obj_from_here",}),"addjump":({"AddJump",}),"indirect_get_obs_out_of_obj":({"indirect_get_obs_out_of_obj",}),"direct_dig_with_obj":({"direct_dig_with_obj",}),"do_body_liv":({"do_body_liv",}),"do_ignore":({"do_ignore",}),"setmorality":({"SetMorality",}),"direct_bump_liv":({"direct_bump_liv",}),"getcommercial":({"GetCommercial",}),"atomize_array":({"atomize_array",}),"indirect_sell_obj_to_liv":({"indirect_sell_obj_to_liv",}),"direct_wizlock_obj":({"direct_wizlock_obj",}),"do_remove_obs_from_obj":({"do_remove_obs_from_obj",}),"direct_swivel_wrd_obj":({"direct_swivel_wrd_obj",}),"cmd_edit":({"cmd_edit",}),"getmarriages":({"GetMarriages",}),"expertise":({"Expertise",}),"eventerror":({"eventError",}),"addskill":({"AddSkill",}),"canfillother":({"CanFillOther",}),"process_input":({"process_input",}),"gettrainedskilles":({"GetTrainedSkilles",}),"eventcmdrnto":({"eventCmdRnto",}),"setretainondeath":({"SetRetainOnDeath",}),"do_teach_liv_to_str":({"do_teach_liv_to_str",}),"do_smell":({"do_smell",}),"do_speak":({"do_speak",}),"can_lie_down":({"can_lie_down",}),"valid_snoop":({"valid_snoop",}),"user_names":({"user_names",}),"eventshutdown":({"eventShutdown",}),"addpressure":({"AddPressure",}),"can_stop_str":({"can_stop_str",}),"indirect_zap_liv":({"indirect_zap_liv",}),"eventreleasestand":({"eventReleaseStand",}),"reap_other":({"reap_other",}),"setclimb":({"SetClimb",}),"can_get_wrd_wrd_out_of_obj":({"can_get_wrd_wrd_out_of_obj",}),"hour":({"hour",}),"getmillimeter":({"GetMillimeter",}),"getmaxstaminapoints":({"GetMaxStaminaPoints",}),"setspeed":({"SetSpeed",}),"setprotect":({"SetProtect",}),"getwhereblock":({"GetWhereBlock",}),"continuetraining":({"ContinueTraining",}),"eventunequip":({"eventUnequip",}),"direct_turn_obj_on_obj_off":({"direct_turn_obj_on_obj_off",}),"settalesdir":({"SetTalesDir",}),"eventcmdretr":({"eventCmdRetr",}),"setretain":({"SetRetain",}),"getshake":({"GetShake",}),"indirect_unlock_obj_with_obj":({"indirect_unlock_obj_with_obj",}),"getskilllevel":({"GetSkillLevel",}),"setdaylong":({"SetDayLong",}),"do_get_obs":({"do_get_obs",}),"getcommandhist":({"GetCommandHist",}),"removenontargets":({"RemoveNonTargets",}),"setcanswim":({"SetCanSwim",}),"do_pour_out_obj":({"do_pour_out_obj",}),"do_bury_obj_with_obj":({"do_bury_obj_with_obj",}),"direct_touch_obj":({"direct_touch_obj",}),"getcustomxp":({"GetCustomXP",}),"setdifficulty":({"SetDifficulty",}),"getnontargets":({"GetNonTargets",}),"indirect_lock_obj_with_obj":({"indirect_lock_obj_with_obj",}),"do_get_obj":({"do_get_obj",}),"getpreventland":({"GetPreventLand",}),"getdoorstopped":({"GetDoorStopped",}),"removeconsultresponse":({"RemoveConsultResponse",}),"add_sky_event":({"add_sky_event",}),"do_delete_obj_from_room":({"do_delete_obj_from_room",}),"getprompt":({"GetPrompt",}),"regetid":({"regetID",}),"continue_post":({"continue_post",}),"getlasterror":({"GetLastError",}),"setdaylight":({"SetDayLight",}),"getemail":({"GetEmail",}),"setcure":({"SetCure",}),"do_turn_on_obj_word_obj":({"do_turn_on_obj_word_obj",}),"query_common_ascii":({"query_common_ascii",}),"setcanbefriend":({"SetCanBefriend",}),"getshadowedname":({"GetShadowedName",}),"do_smell_obj":({"do_smell_obj",}),"cansmoke":({"CanSmoke",}),"do_go_str":({"do_go_str",}),"bearing":({"bearing",}),"getcharbuffer":({"GetCharbuffer",}),"setbasefile":({"SetBaseFile",}),"receive_message":({"receive_message",}),"addproperty":({"AddProperty",}),"setlightlevel":({"SetLightLevel",}),"removelisten":({"RemoveListen",}),"getknocks":({"GetKnocks",}),"setread":({"SetRead",}),"do_strike_obj":({"do_strike_obj",}),"can_learn_to_str_from_liv":({"can_learn_to_str_from_liv",}),"can_ride_into_str":({"can_ride_into_str",}),"can_drink_from_obj":({"can_drink_from_obj",}),"direct_pull_str_on_obj":({"direct_pull_str_on_obj",}),"gettitlelength":({"GetTitleLength",}),"getdrink":({"GetDrink",}),"setmass":({"SetMass",}),"addrider":({"AddRider",}),"getskillsmap":({"GetSkillsMap",}),"can_fill_obj_with_obj":({"can_fill_obj_with_obj",}),"cmdlisten":({"cmdListen",}),"do_fly_str":({"do_fly_str",}),"itoa":({"itoa",}),"getcouncil":({"GetCouncil",}),"cmdlist":({"cmdList",}),"time_elapsed":({"time_elapsed",}),"do_drop_wrd_wrd":({"do_drop_wrd_wrd",}),"do_lie_down":({"do_lie_down",}),"getlocalfee":({"GetLocalFee",}),"settraptype":({"SetTrapType",}),"direct_load_obj":({"direct_load_obj",}),"do_stop_str":({"do_stop_str",}),"eventhistory":({"eventHistory",}),"eventlock":({"eventLock",}),"do_wield_obs":({"do_wield_obs",}),"do_dismount_from_liv":({"do_dismount_from_liv",}),"getlanguagename":({"GetLanguageName",}),"unquiet":({"unQuiet",}),"eventencounterblock":({"eventEncounterBlock",}),"confirmname":({"ConfirmName",}),"do_wield_obj":({"do_wield_obj",}),"can_dest_str":({"can_dest_str",}),"canwear":({"CanWear",}),"consolidate":({"consolidate",}),"write_callback":({"write_callback",}),"direct_follow_liv":({"direct_follow_liv",}),"do_shout_in_wrd_str":({"do_shout_in_wrd_str",}),"setcanclimbcarried":({"SetCanClimbCarried",}),"eventradiate":({"eventRadiate",}),"addpoisongas":({"AddPoisonGas",}),"setrestrictlimbs":({"SetRestrictLimbs",}),"setrange":({"SetRange",}),"mud_currencies":({"mud_currencies",}),"cmdenter":({"cmdEnter",}),"answers_to":({"answers_to",}),"do_roll_obs_on_obj":({"do_roll_obs_on_obj",}),"eventcmdpswd":({"eventCmdPswd",}),"inputrace":({"InputRace",}),"securep":({"securep",}),"can_get_obs_obj":({"can_get_obs_obj",}),"do_read_str_from_obj":({"do_read_str_from_obj",}),"can_withdraw":({"can_withdraw",}),"getsavefile":({"GetSaveFile",}),"getscreen":({"GetScreen",}),"do_activate_obj_on_obj":({"do_activate_obj_on_obj",}),"setsmell":({"SetSmell",}),"do_pray_for_str":({"do_pray_for_str",}),"groups":({"groups",}),"can_fill_obj_from_obj":({"can_fill_obj_from_obj",}),"do_wizlock_obj":({"do_wizlock_obj",}),"getdestructondrop":({"GetDestructOnDrop",}),"getweapontype":({"GetWeaponType",}),"setmanipulate":({"SetManipulate",}),"getencumbrance":({"GetEncumbrance",}),"can_look_at_obj_on_obj":({"can_look_at_obj_on_obj",}),"calculateammosize":({"CalculateAmmoSize",}),"setbriefmode":({"SetBriefMode",}),"setcapname":({"SetCapName",}),"getpermitload":({"GetPermitLoad",}),"can_cast_str":({"can_cast_str",}),"picktale":({"PickTale",}),"councilp":({"councilp",}),"do_jump_across_obj":({"do_jump_across_obj",}),"cmdlistclasses":({"cmdListClasses",}),"direct_offer_obj":({"direct_offer_obj",}),"socket_names":({"socket_names",}),"setsacrificetype":({"SetSacrificeType",}),"getlisten":({"GetListen",}),"mustcarry":({"MustCarry",}),"eventcmdpwd":({"eventCmdPwd",}),"getcurrencymap":({"GetCurrencyMap",}),"setbasecost":({"SetBaseCost",}),"addtouch":({"AddTouch",}),"getpacifist":({"GetPacifist",}),"setgravity":({"SetGravity",}),"direct_turn_liv":({"direct_turn_liv",}),"arrcmp":({"arrcmp",}),"getlightsensitivity":({"GetLightSensitivity",}),"getvisibleriders":({"GetVisibleRiders",}),"cmd_cd":({"cmd_cd",}),"direct_install_obj":({"direct_install_obj",}),"addenemy":({"AddEnemy",}),"eventload":({"eventLoad",}),"eventparse":({"eventParse",}),"can_smell_str_word_obj":({"can_smell_str_word_obj",}),"eventsmoke":({"eventSmoke",}),"getmissinglimbs":({"GetMissingLimbs",}),"setmelee":({"SetMelee",}),"can_say_to_liv":({"can_say_to_liv",}),"newline_trim":({"newline_trim",}),"can_delete_obj_from_here":({"can_delete_obj_from_here",}),"do_boobytrap_obj_with_obj":({"do_boobytrap_obj_with_obj",}),"can_lie_word_obj":({"can_lie_word_obj",}),"can_move_obj":({"can_move_obj",}),"request_vis":({"request_vis",}),"setitems":({"SetItems",}),"getlevel":({"GetLevel",}),"do_uninstall_obj_word_obj":({"do_uninstall_obj_word_obj",}),"direct_mount_liv":({"direct_mount_liv",}),"indirect_put_obs_word_obj":({"indirect_put_obs_word_obj",}),"can_wizunlock_obj":({"can_wizunlock_obj",}),"do_nominate_str":({"do_nominate_str",}),"eventchecklight":({"eventCheckLight",}),"resetcurrentenemy":({"ResetCurrentEnemy",}),"getammo":({"GetAmmo",}),"setmissinglimbs":({"SetMissingLimbs",}),"ordinalp":({"ordinalp",}),"inputrealname":({"InputRealName",}),"do_yell":({"do_yell",}),"do_dest_str":({"do_dest_str",}),"do_climb_out_of_obj":({"do_climb_out_of_obj",}),"gettype":({"GetType",}),"can_delete_exit_str":({"can_delete_exit_str",}),"getdoorsmap":({"GetDoorsMap",}),"setflaskuses":({"SetFlaskUses",}),"getmaxcells":({"GetMaxCells",}),"direct_deactivate_obj_on_obj":({"direct_deactivate_obj_on_obj",}),"continue_followup":({"continue_followup",}),"getclient":({"GetClient",}),"eventcheckbody":({"eventCheckBody",}),"removeread":({"RemoveRead",}),"addhp":({"AddHP",}),"canuninstall":({"CanUninstall",}),"eventreconnect":({"eventReconnect",}),"can_news":({"can_news",}),"getwield":({"GetWield",}),"getconsult":({"GetConsult",}),"setsky":({"SetSky",}),"direct_buy_str_from_liv":({"direct_buy_str_from_liv",}),"can_dig_with_obj":({"can_dig_with_obj",}),"can_throw_obj_word_obj":({"can_throw_obj_word_obj",}),"getambientlight":({"GetAmbientLight",}),"query_board_id":({"query_board_id",}),"inputemail":({"InputEmail",}),"eventreceivedamage":({"eventReceiveDamage",}),"eventwritedestruct":({"eventWriteDestruct",}),"direct_knock_obj":({"direct_knock_obj",}),"do_jump_into_obj":({"do_jump_into_obj",}),"receivechar":({"ReceiveChar",}),"do_withdraw":({"do_withdraw",}),"can_consult_str_on_obj":({"can_consult_str_on_obj",}),"snooperp":({"snooperp",}),"setleader":({"SetLeader",}),"create":({"create",}),"getaction":({"GetAction",}),"can_delete_enter_str":({"can_delete_enter_str",}),"addround":({"AddRound",}),"can_use_obj":({"can_use_obj",}),"canlead":({"CanLead",}),"do_crawl_str":({"do_crawl_str",}),"file_exists":({"file_exists",}),"get_cmds":({"get_cmds",}),"direct_train_liv":({"direct_train_liv",}),"setambientlight":({"SetAmbientLight",}),"can_get_obj_obj":({"can_get_obj_obj",}),"direct_connect_str":({"direct_connect_str",}),"can_activate_obj_on_obj":({"can_activate_obj_on_obj",}),"canturnoff":({"CanTurnOff",}),"do_cast_str":({"do_cast_str",}),"can_delete_obj_from_room":({"can_delete_obj_from_room",}),"direct_request_str_from_liv":({"direct_request_str_from_liv",}),"direct_eat_obj":({"direct_eat_obj",}),"architecture":({"architecture",}),"do_delete_exit_str":({"do_delete_exit_str",}),"can_target_liv":({"can_target_liv",}),"can_lead_liv":({"can_lead_liv",}),"direct_load_obj_word_obj":({"direct_load_obj_word_obj",}),"getshade":({"GetShade",}),"getexitmap":({"GetExitMap",}),"reset_eval_cost":({"reset_eval_cost",}),"getmode":({"GetMode",}),"getconsultresponse":({"GetConsultResponse",}),"can_sit":({"can_sit",}),"setfuelname":({"SetFuelName",}),"eventcheckenvironment":({"eventCheckEnvironment",}),"do_speak_str":({"do_speak_str",}),"setpolyglot":({"SetPolyglot",}),"setconsultresponses":({"SetConsultResponses",}),"eventabandon":({"eventAbandon",}),"getduration":({"GetDuration",}),"getinfect":({"GetInfect",}),"do_drink_from_obj":({"do_drink_from_obj",}),"newbiep":({"newbiep",}),"eventcollapse":({"eventCollapse",}),"do_read_str_of_obj":({"do_read_str_of_obj",}),"eventendvoting":({"eventEndVoting",}),"isfreshcorpse":({"isFreshCorpse",}),"do_move_obj":({"do_move_obj",}),"add_article":({"add_article",}),"newbody":({"NewBody",}),"can_deactivate":({"can_deactivate",}),"add_maps":({"add_maps",}),"findobs":({"findobs",}),"getdoors":({"GetDoors",}),"init":({"init",}),"getmount":({"GetMount",}),"erase_prompt":({"erase_prompt",}),"valid_timezone":({"valid_timezone",}),"can_turn_obj_on":({"can_turn_obj_on",}),"do_drive_str":({"do_drive_str",}),"can_pour_obj_into_obj":({"can_pour_obj_into_obj",}),"getmissdata":({"GetMissData",}),"removemuffed":({"RemoveMuffed",}),"getexitdata":({"GetExitData",}),"close_callback":({"close_callback",}),"do_get_obj_from_obj":({"do_get_obj_from_obj",}),"addextrachannels":({"AddExtraChannels",}),"removeterraintype":({"RemoveTerrainType",}),"eventcmdpasv":({"eventCmdPasv",}),"eventputon":({"eventPutOn",}),"reap_dummies":({"reap_dummies",}),"indirect_delete_obj_from_obj":({"indirect_delete_obj_from_obj",}),"setlasterror":({"SetLastError",}),"eventcmdpass":({"eventCmdPass",}),"setvendortype":({"SetVendorType",}),"direct_light_obj_with_obj":({"direct_light_obj_with_obj",}),"can_smell_obj":({"can_smell_obj",}),"direct_command_str_to_str":({"direct_command_str_to_str",}),"push":({"Push",}),"eventbalance":({"eventBalance",}),"isdummy":({"isDummy",}),"getclasses":({"GetClasses",}),"do_echo":({"do_echo",}),"direct_press_obj":({"direct_press_obj",}),"setwander":({"SetWander",}),"eventfish":({"eventFish",}),"do_look_at_str":({"do_look_at_str",}),"direct_scratch_obj":({"direct_scratch_obj",}),"eventunlocklock":({"eventUnlockLock",}),"sethboverride":({"SetHBOverride",}),"can_shout":({"can_shout",}),"setsize":({"SetSize",}),"indirect_compare_obj_to_obj":({"indirect_compare_obj_to_obj",}),"socket_ip":({"socket_ip",}),"do_install_obj":({"do_install_obj",}),"checkpending":({"CheckPending",}),"canlight":({"CanLight",}),"setcustomxp":({"SetCustomXP",}),"objects":({"objects",}),"direct_add_obj_to_here":({"direct_add_obj_to_here",}),"restore_inventory":({"restore_inventory",}),"direct_listen_to_obj":({"direct_listen_to_obj",}),"getftpwelcomemsg":({"GetFtpWelcomeMsg",}),"getreversedirection":({"GetReverseDirection",}),"getwanderspeed":({"GetWanderSpeed",}),"can_jump_word_word_obj":({"can_jump_word_word_obj",}),"setmountstyle":({"SetMountStyle",}),"getmaxfishing":({"GetMaxFishing",}),"do_lead_liv":({"do_lead_liv",}),"getvirtualsky":({"GetVirtualSky",}),"indirect_give_obj_to_liv":({"indirect_give_obj_to_liv",}),"setdig":({"SetDig",}),"eventstart":({"eventStart",}),"addencounter":({"AddEncounter",}),"setdie":({"SetDie",}),"getmagnum":({"GetMagnum",}),"getnotalemessage":({"GetNoTaleMessage",}),"visibility":({"visibility",}),"caneat":({"CanEat",}),"getspellchance":({"GetSpellChance",}),"do_lie_down_word_obj":({"do_lie_down_word_obj",}),"eventfire":({"eventFire",}),"indirect_reload_str_word":({"indirect_reload_str_word",}),"setguard":({"SetGuard",}),"indirect_boobytrap_obj_with_obj":({"indirect_boobytrap_obj_with_obj",}),"indirect_throw_obj_at_obj":({"indirect_throw_obj_at_obj",}),"do_throw_obj":({"do_throw_obj",}),"getdefiniteshort":({"GetDefiniteShort",}),"indirect_reload_obj":({"indirect_reload_obj",}),"eventrepair":({"eventRepair",}),"setbroken":({"SetBroken",}),"getlimbchildren":({"GetLimbChildren",}),"can_wield_obj":({"can_wield_obj",}),"can_drive_into_str":({"can_drive_into_str",}),"do_ignore_liv":({"do_ignore_liv",}),"indirect_uninstall_obj_word_obj":({"indirect_uninstall_obj_word_obj",}),"can_vote_for_str":({"can_vote_for_str",}),"reload":({"reload",}),"getmanipulates":({"GetManipulates",}),"setremotetargets":({"SetRemoteTargets",}),"getstatclass":({"GetStatClass",}),"indirect_capture_liv_word_obj":({"indirect_capture_liv_word_obj",}),"setcommandfail":({"SetCommandFail",}),"setbane":({"SetBane",}),"do_press_str_on_obj":({"do_press_str_on_obj",}),"eventrunout":({"eventRunOut",}),"eventputonto":({"eventPutOnto",}),"cmdbrowse":({"cmdBrowse",}),"inputcapname":({"InputCapName",}),"do_shake_str_on_obj":({"do_shake_str_on_obj",}),"canstand":({"CanStand",}),"getmaxclass":({"GetMaxClass",}),"setclosed":({"SetClosed",}),"getcombatverbs":({"GetCombatVerbs",}),"can_cast_str_on_obj":({"can_cast_str_on_obj",}),"can_shoot_obj_at_liv":({"can_shoot_obj_at_liv",}),"direct_modify_word_str":({"direct_modify_word_str",}),"eventeat":({"eventEat",}),"do_balance_obj_to_obj":({"do_balance_obj_to_obj",}),"getmutedtype":({"GetMutedType",}),"query_os_type":({"query_os_type",}),"do_createfix_obj":({"do_createfix_obj",}),"getmuffed":({"GetMuffed",}),"direct_backstab_liv":({"direct_backstab_liv",}),"direct_give_obj_liv":({"direct_give_obj_liv",}),"can_install":({"can_install",}),"elderp":({"elderp",}),"remove_access":({"remove_access",}),"addenter":({"AddEnter",}),"eventprepareskin":({"eventPrepareSkin",}),"getfollowbonus":({"GetFollowBonus",}),"eventremovecandidate":({"eventRemoveCandidate",}),"eventexchange":({"eventExchange",}),"setlocalfee":({"SetLocalFee",}),"getminheat":({"GetMinHeat",}),"direct_turn_obj":({"direct_turn_obj",}),"can_read_obj_at_obj":({"can_read_obj_at_obj",}),"notify_fail":({"notify_fail",}),"can_yell_str":({"can_yell_str",}),"getvisionbonus":({"GetVisionBonus",}),"direct_add_obj_to_room":({"direct_add_obj_to_room",}),"can_unload":({"can_unload",}),"can_sleep":({"can_sleep",}),"eventencounter":({"eventEncounter",}),"calculate_coordinates":({"calculate_coordinates",}),"getequippedlimbs":({"GetEquippedLimbs",}),"eventrevive":({"eventRevive",}),"do_jump_off_obj":({"do_jump_off_obj",}),"do_skin_obj_with_obj":({"do_skin_obj_with_obj",}),"gettale":({"GetTale",}),"setpreventput":({"SetPreventPut",}),"can_whisper_to_liv_str":({"can_whisper_to_liv_str",}),"direct_drink_from_obj":({"direct_drink_from_obj",}),"do_smoke_obj":({"do_smoke_obj",}),"getlanguages":({"GetLanguages",}),"getareatype":({"GetAreaType",}),"eventrefuel":({"eventRefuel",}),"direct_sell_obj_to_liv":({"direct_sell_obj_to_liv",}),"query_day_name":({"query_day_name",}),"setnodefaultexits":({"SetNoDefaultExits",}),"do_cast_str_on_obj":({"do_cast_str_on_obj",}),"do_teach_str_to_liv":({"do_teach_str_to_liv",}),"cmdprice":({"cmdPrice",}),"direct_boobytrap_obj_with_obj":({"direct_boobytrap_obj_with_obj",}),"mud_name":({"mud_name",}),"eventcheckpending":({"eventCheckPending",}),"personal_log":({"personal_log",}),"popd":({"popd",}),"setsavefile":({"SetSaveFile",}),"do_lock_obj_with_str":({"do_lock_obj_with_str",}),"getammotype":({"GetAmmoType",}),"direct_uninstall_obj_word_obj":({"direct_uninstall_obj_word_obj",}),"getstring":({"GetString",}),"cmddial":({"cmdDial",}),"getalcohol":({"GetAlcohol",}),"direct_say_to_liv":({"direct_say_to_liv",}),"getmaxprotection":({"GetMaxProtection",}),"do_codesay_str":({"do_codesay_str",}),"eventlight":({"eventLight",}),"eventcmdquit":({"eventCmdQuit",}),"loadrevolver":({"LoadRevolver",}),"can_cast_str_on_str_of_str":({"can_cast_str_on_str_of_str",}),"do_read_obj_at_obj":({"do_read_obj_at_obj",}),"eventcmdrnfr":({"eventCmdRnfr",}),"lpc_file":({"lpc_file",}),"canmanipulate":({"CanManipulate",}),"can_speak_in_wrd":({"can_speak_in_wrd",}),"do_kneel_down_word_obj":({"do_kneel_down_word_obj",}),"can_mail_str":({"can_mail_str",}),"eventburyitem":({"eventBuryItem",}),"gettorso":({"GetTorso",}),"sendhttpget":({"sendHTTPGet",}),"can_yell":({"can_yell",}),"canpress":({"CanPress",}),"eventdeteriorate":({"eventDeteriorate",}),"direct_drain_at_liv":({"direct_drain_at_liv",}),"can_whisper_to_liv_in_wrd_str":({"can_whisper_to_liv_in_wrd_str",}),"eventmoralact":({"eventMoralAct",}),"can_ring_obj_with_obj":({"can_ring_obj_with_obj",}),"do_get_wrd_wrd_out_of_obj":({"do_get_wrd_wrd_out_of_obj",}),"setpacifist":({"SetPacifist",}),"getvalue":({"GetValue",}),"eventcustomizestat":({"eventCustomizeStat",}),"setfuelamount":({"SetFuelAmount",}),"eventdescribeenvironment":({"eventDescribeEnvironment",}),"clone_object":({"clone_object",}),"direct_move_str_on_obj":({"direct_move_str_on_obj",}),"indirect_fill_obj_with_obj":({"indirect_fill_obj_with_obj",}),"getdirectorylist":({"GetDirectoryList",}),"indirect_install_obj_word_obj":({"indirect_install_obj_word_obj",}),"query_tz":({"query_tz",}),"getmaxload":({"GetMaxLoad",}),"getvisiblegrid":({"GetVisibleGrid",}),"do_scratch_obj":({"do_scratch_obj",}),"do_reload_every_str":({"do_reload_every_str",}),"idle_time_out":({"idle_time_out",}),"can_crawl_str":({"can_crawl_str",}),"gethostsite":({"GetHostSite",}),"do_wake":({"do_wake",}),"setfight":({"SetFight",}),"can_sit_down":({"can_sit_down",}),"do_yell_str":({"do_yell_str",}),"eventstand":({"eventStand",}),"eventcreatedirectory":({"eventCreateDirectory",}),"admin_email":({"admin_email",}),"addstat":({"AddStat",}),"getterraintype":({"GetTerrainType",}),"removeconsult":({"RemoveConsult",}),"setmaxcells":({"SetMaxCells",}),"eventdisplaystatus":({"eventDisplayStatus",}),"resetlevel":({"ResetLevel",}),"set_access":({"set_access",}),"direct_teach_liv_to_str":({"direct_teach_liv_to_str",}),"canteach":({"CanTeach",}),"direct_shake_obj":({"direct_shake_obj",}),"eventcmdnlst":({"eventCmdNlst",}),"gettargets":({"GetTargets",}),"do_scratch_str_on_obj":({"do_scratch_str_on_obj",}),"can_attack_liv_only":({"can_attack_liv_only",}),"query_sp":({"query_sp",}),"getflyroom":({"GetFlyRoom",}),"direct_target_liv":({"direct_target_liv",}),"can_speak_str":({"can_speak_str",}),"setbait":({"SetBait",}),"performmarriage":({"performMarriage",}),"setnativelanguage":({"SetNativeLanguage",}),"can_say":({"can_say",}),"do_give_wrd_wrd_to_liv":({"do_give_wrd_wrd_to_liv",}),"can_touch_str_word_obj":({"can_touch_str_word_obj",}),"indirect_turn_obj_on_obj_off":({"indirect_turn_obj_on_obj_off",}),"indirect_fill_obj_from_obj":({"indirect_fill_obj_from_obj",}),"resetcurrency":({"ResetCurrency",}),"addsacrificetype":({"AddSacrificeType",}),"getfirearmtype":({"GetFirearmType",}),"direct_unload_obj_word_obj":({"direct_unload_obj_word_obj",}),"eventbreak":({"eventBreak",}),"setsurroundareas":({"SetSurroundAreas",}),"getparalyzed":({"GetParalyzed",}),"getliers":({"GetLiers",}),"getcustomstats":({"GetCustomStats",}),"do_nickname":({"do_nickname",}),"canpull":({"CanPull",}),"setdead":({"SetDead",}),"eventfill":({"eventFill",}),"can_drive_str":({"can_drive_str",}),"can_roll_obj_here":({"can_roll_obj_here",}),"do_mail_str":({"do_mail_str",}),"do_reload_word":({"do_reload_word",}),"do_knock_on_str_on_obj":({"do_knock_on_str_on_obj",}),"direct_knock_on_obj":({"direct_knock_on_obj",}),"direct_missile_at_liv":({"direct_missile_at_liv",}),"getpresses":({"GetPresses",}),"convert_ascii":({"convert_ascii",}),"getautostand":({"GetAutoStand",}),"can_delete_obj":({"can_delete_obj",}),"setmaxhealthpoints":({"SetMaxHealthPoints",}),"subtractround":({"SubtractRound",}),"getlockstrength":({"GetLockStrength",}),"eventcreatesocket":({"eventCreateSocket",}),"setquestpoints":({"SetQuestPoints",}),"do_drive_into_str":({"do_drive_into_str",}),"can_uninstall_obj":({"can_uninstall_obj",}),"can_kneel_down_word_obj":({"can_kneel_down_word_obj",}),"getvirtualsea":({"GetVirtualSea",}),"eventunquell":({"eventUnQuell",}),"getdestroyonsell":({"GetDestroyOnSell",}),"eventcmdmkd":({"eventCmdMkd",}),"query_night_light":({"query_night_light",}),"eventdecreasefuel":({"eventDecreaseFuel",}),"getplayerkill":({"GetPlayerKill",}),"getnochancolors":({"GetNoChanColors",}),"direct_turn_on_obj_on_obj":({"direct_turn_on_obj_on_obj",}),"getnonlocalfee":({"GetNonLocalFee",}),"can_party_wrd_wrd":({"can_party_wrd_wrd",}),"do_attack_liv_only":({"do_attack_liv_only",}),"can_swivel":({"can_swivel",}),"getemptyshort":({"GetEmptyShort",}),"setduration":({"SetDuration",}),"version":({"version",}),"flat_map":({"flat_map",}),"setlockstrength":({"SetLockStrength",}),"direct_target_liv_only":({"direct_target_liv_only",}),"setnocondition":({"SetNoCondition",}),"setchance":({"SetChance",}),"do_judge_obj_str_obj":({"do_judge_obj_str_obj",}),"eventpress":({"eventPress",}),"setmag":({"SetMag",}),"can_echo":({"can_echo",}),"direct_learn_to_str_from_liv":({"direct_learn_to_str_from_liv",}),"date":({"date",}),"do_sit_down":({"do_sit_down",}),"setnochancolors":({"SetNoChanColors",}),"eventdisarm":({"eventDisarm",}),"check_string_length":({"check_string_length",}),"loadbook":({"LoadBook",}),"getretain":({"GetRetain",}),"do_get_obs_from_obj":({"do_get_obs_from_obj",}),"direct_curse_obj":({"direct_curse_obj",}),"setup":({"Setup",}),"canburywith":({"CanBuryWith",}),"grepp":({"grepp",}),"indirect_get_obs_obj":({"indirect_get_obs_obj",}),"direct_fireball_liv":({"direct_fireball_liv",}),"atomize_string":({"atomize_string",}),"getfullexitdata":({"GetFullExitData",}),"do_kneel":({"do_kneel",}),"can_pull_obj":({"can_pull_obj",}),"query_unique_name":({"query_unique_name",}),"setattackable":({"SetAttackable",}),"do_jump_onto_obj":({"do_jump_onto_obj",}),"can_throw_obj":({"can_throw_obj",}),"can_shoot_obj_at_obj":({"can_shoot_obj_at_obj",}),"canpoison":({"CanPoison",}),"getinventory":({"GetInventory",}),"setdefaultread":({"SetDefaultRead",}),"getlocations":({"GetLocations",}),"do_befriend_liv":({"do_befriend_liv",}),"setconsult":({"SetConsult",}),"get_path":({"get_path",}),"eventshowinterior":({"eventShowInterior",}),"gethelp":({"GetHelp",}),"can_ask_liv_to_str":({"can_ask_liv_to_str",}),"eventtrainspell":({"eventTrainSpell",}),"grant_access":({"grant_access",}),"eventteach":({"eventTeach",}),"can_backstab_liv":({"can_backstab_liv",}),"getequipped":({"GetEquipped",}),"setdenominator":({"SetDenominator",}),"can_give_obj_liv":({"can_give_obj_liv",}),"do_speak_in_wrd_str":({"do_speak_in_wrd_str",}),"getnonexits":({"GetNonExits",}),"setcruiseinmessage":({"SetCruiseInMessage",}),"removepress":({"RemovePress",}),"can_give_wrd_wrd_to_liv":({"can_give_wrd_wrd_to_liv",}),"generateindex":({"GenerateIndex",}),"setclan":({"SetClan",}),"eventcmdnoop":({"eventCmdNoop",}),"direct_add_obj":({"direct_add_obj",}),"getmodify":({"GetModify",}),"getrules":({"GetRules",}),"direct_bury_obj_with_obj":({"direct_bury_obj_with_obj",}),"eventblockip":({"eventBlockIp",}),"getemptyitem":({"GetEmptyItem",}),"removelanguage":({"RemoveLanguage",}),"canfollow":({"CanFollow",}),"can_turn_on_obj":({"can_turn_on_obj",}),"can_whisper_to_liv":({"can_whisper_to_liv",}),"doautounload":({"doAutoUnload",}),"direct_send_str_to_str":({"direct_send_str_to_str",}),"direct_frigidus_at_liv":({"direct_frigidus_at_liv",}),"getscratch":({"GetScratch",}),"minusammo":({"MinusAmmo",}),"getrequiredmagic":({"GetRequiredMagic",}),"restart_heart":({"restart_heart",}),"plusammo":({"PlusAmmo",}),"eventloadinventory":({"eventLoadInventory",}),"getlifespan":({"GetLifeSpan",}),"can_knock_on_str_on_obj":({"can_knock_on_str_on_obj",}),"eventregisterside":({"eventRegisterSide",}),"setmaxstaminapoints":({"SetMaxStaminaPoints",}),"can_swim_into_str":({"can_swim_into_str",}),"can_learn_str_from_liv":({"can_learn_str_from_liv",}),"eventbless":({"eventBless",}),"direct_shield_liv":({"direct_shield_liv",}),"eventcastvote":({"eventCastVote",}),"query_base_rate":({"query_base_rate",}),"set_eval_limit":({"set_eval_limit",}),"canputinto":({"CanPutInto",}),"can_load_obj_word_obj":({"can_load_obj_word_obj",}),"statreport":({"StatReport",}),"setwear":({"SetWear",}),"getsky":({"GetSky",}),"can_smoke_obj":({"can_smoke_obj",}),"setcruiseoutmessage":({"SetCruiseOutMessage",}),"eventshadow":({"eventShadow",}),"eventturnoff":({"eventTurnOff",}),"getgaggedtype":({"GetGaggedType",}),"do_get_wrd_from_obj":({"do_get_wrd_from_obj",}),"eventdeposit":({"eventDeposit",}),"getlocalcurrency":({"GetLocalCurrency",}),"removebonuses":({"RemoveBonuses",}),"eventcure":({"eventCure",}),"do_alias":({"do_alias",}),"getautoresets":({"GetAutoResets",}),"can_pour_obj_onto_obj":({"can_pour_obj_onto_obj",}),"getlogharass":({"GetLogHarass",}),"indirect_pour_obj_into_obj":({"indirect_pour_obj_into_obj",}),"setattack":({"SetAttack",}),"cache_commands":({"cache_commands",}),"do_sell_liv_obs":({"do_sell_liv_obs",}),"can_enter":({"can_enter",}),"can_attack_liv":({"can_attack_liv",}),"direct_command_liv":({"direct_command_liv",}),"do_sell_liv_obj":({"do_sell_liv_obj",}),"eventwelcome":({"eventWelcome",}),"eventread":({"eventRead",}),"can_ask_str":({"can_ask_str",}),"canknock":({"CanKnock",}),"getcanlock":({"GetCanLock",}),"getmagicresistance":({"GetMagicResistance",}),"eventcruisemessages":({"eventCruiseMessages",}),"do_pull_obj":({"do_pull_obj",}),"query_door":({"query_door",}),"getmaptype":({"GetMapType",}),"getskillmodifier":({"GetSkillModifier",}),"setautodamage":({"SetAutoDamage",}),"check_memory":({"check_memory",}),"direct_climb_out_of_obj":({"direct_climb_out_of_obj",}),"direct_dismount_from_liv":({"direct_dismount_from_liv",}),"continueteaching":({"ContinueTeaching",}),"can_describe_str":({"can_describe_str",}),"event_pending":({"event_pending",}),"indirect_get_obj_obj":({"indirect_get_obj_obj",}),"indirect_add_obj_to_obj":({"indirect_add_obj_to_obj",}),"cmdparse":({"cmdParse",}),"query_mp":({"query_mp",}),"getclanobject":({"GetClanObject",}),"receivecanonicalid":({"ReceiveCanonicalId",}),"can_initfix_word":({"can_initfix_word",}),"direct_get_wrd_wrd_out_of_obj":({"direct_get_wrd_wrd_out_of_obj",}),"getstatbonus":({"GetStatBonus",}),"setclasses":({"SetClasses",}),"eventnewconnection":({"eventNewConnection",}),"getcharmode":({"GetCharmode",}),"setrarity":({"SetRarity",}),"cmd_post":({"cmd_post",}),"receive_snoop":({"receive_snoop",}),"more":({"more",}),"getpersistentinventory":({"GetPersistentInventory",}),"reset":({"reset",}),"getspeakcolor":({"GetSpeakColor",}),"setstorageroom":({"SetStorageRoom",}),"classmember":({"ClassMember",}),"setammotype":({"SetAmmoType",}),"setcorpse":({"SetCorpse",}),"calculate_slope":({"calculate_slope",}),"eventsendmissmessages":({"eventSendMissMessages",}),"eventannouncecanonicalid":({"eventAnnounceCanonicalId",}),"addcaffeine":({"AddCaffeine",}),"getautoheal":({"GetAutoHeal",}),"direct_soulseek_liv":({"direct_soulseek_liv",}),"resetbank":({"ResetBank",}),"donetrying":({"DoneTrying",}),"can_marry_liv_to_liv":({"can_marry_liv_to_liv",}),"eventpage":({"eventPage",}),"eventfree":({"eventFree",}),"do_sit_word_obj":({"do_sit_word_obj",}),"basemap":({"BaseMap",}),"can_wake":({"can_wake",}),"do_party_wrd":({"do_party_wrd",}),"getexits":({"GetExits",}),"do_body":({"do_body",}),"direct_zap_liv":({"direct_zap_liv",}),"canrelease":({"CanRelease",}),"spent":({"Spent",}),"razzledazzle":({"RazzleDazzle",}),"item_list":({"item_list",}),"getfrequency":({"GetFrequency",}),"match_command":({"match_command",}),"caninstall":({"CanInstall",}),"getboundary":({"GetBoundary",}),"eventcmddele":({"eventCmdDele",}),"setpk":({"SetPK",}),"do_dig_obj_with_obj":({"do_dig_obj_with_obj",}),"removetalkresponse":({"RemoveTalkResponse",}),"eventedit":({"eventEdit",}),"getjumps":({"GetJumps",}),"gettrainingskills":({"GetTrainingSkills",}),"inventory_visible":({"inventory_visible",}),"bitshiftedp":({"bitshiftedp",}),"direct_roll_obj":({"direct_roll_obj",}),"setrefuelable":({"SetRefuelable",}),"getlastsave":({"GetLastSave",}),"getcreatorage":({"GetCreatorAge",}),"status":({"status",}),"direct_give_obj_to_liv":({"direct_give_obj_to_liv",}),"can_knock_on_obj":({"can_knock_on_obj",}),"setbonuses":({"SetBonuses",}),"gettalkresponse":({"GetTalkResponse",}),"getbasestatlevel":({"GetBaseStatLevel",}),"getwizvision":({"GetWizVision",}),"setshake":({"SetShake",}),"readbookindex":({"ReadBookIndex",}),"rusage":({"rusage",}),"displayshort":({"displayShort",}),"setminheat":({"SetMinHeat",}),"getdig":({"GetDig",}),"direct_reload_str_word":({"direct_reload_str_word",}),"setparalyzed":({"SetParalyzed",}),"basic_punctuationp":({"basic_punctuationp",}),"getactionsmap":({"GetActionsMap",}),"getdie":({"GetDie",}),"direct_drop_obj":({"direct_drop_obj",}),"eventpreparecast":({"eventPrepareCast",}),"setnightlight":({"SetNightLight",}),"direct_get_obj_from_obj":({"direct_get_obj_from_obj",}),"getleader":({"GetLeader",}),"direct_turn_obj_off":({"direct_turn_obj_off",}),"setlightsensitivity":({"SetLightSensitivity",}),"getskill":({"GetSkill",}),"eventlistencallback":({"eventListenCallback",}),"getwanderrecurse":({"GetWanderRecurse",}),"eventknock":({"eventKnock",}),"removeemoteresponse":({"RemoveEmoteResponse",}),"setautostand":({"SetAutoStand",}),"getcookie":({"GetCookie",}),"tn":({"tn",}),"indirect_reload_word_obj":({"indirect_reload_word_obj",}),"indirect_light_obj_with_obj":({"indirect_light_obj_with_obj",}),"getstat":({"GetStat",}),"direct_drive_word_str":({"direct_drive_word_str",}),"can_initfix_obj":({"can_initfix_obj",}),"do_ask_liv_to_str":({"do_ask_liv_to_str",}),"getprotectionmap":({"GetProtectionMap",}),"canburn":({"CanBurn",}),"direct_delete_obj":({"direct_delete_obj",}),"do_sit_up":({"do_sit_up",}),"object_file":({"object_file",}),"setrequiredstamina":({"SetRequiredStamina",}),"eventtalkhist":({"eventTalkHist",}),"setemail":({"SetEmail",}),"tc":({"tc",}),"setvisibleriders":({"SetVisibleRiders",}),"evaluatecitizenshiprequest":({"EvaluateCitizenshipRequest",}),"do_use_obj":({"do_use_obj",}),"indirect_dest_obj":({"indirect_dest_obj",}),"getrechargeable":({"GetRechargeable",}),"do_disarm_obj":({"do_disarm_obj",}),"domain":({"domain",}),"cmd_popd":({"cmd_popd",}),"getpulls":({"GetPulls",}),"do_whisper_to_liv":({"do_whisper_to_liv",}),"direct_cast_str_against_str":({"direct_cast_str_against_str",}),"setrechargeable":({"SetRechargeable",}),"setpersistent":({"SetPersistent",}),"getobviousexits":({"GetObviousExits",}),"direct_refresh_liv":({"direct_refresh_liv",}),"setrespirationtype":({"SetRespirationType",}),"direct_open_obj":({"direct_open_obj",}),"last":({"last",}),"getcoordinates":({"GetCoordinates",}),"can_dig_str_with_obj":({"can_dig_str_with_obj",}),"getcelltype":({"GetCellType",}),"process_request":({"process_request",}),"setrank":({"SetRank",}),"removeknock":({"RemoveKnock",}),"do_search":({"do_search",}),"setobviousexits":({"SetObviousExits",}),"getmissinglimb":({"GetMissingLimb",}),"can_read_obj":({"can_read_obj",}),"canput":({"CanPut",}),"setinventory":({"SetInventory",}),"setmagicpoints":({"SetMagicPoints",}),"getmoralitydescription":({"GetMoralityDescription",}),"query_windows":({"query_windows",}),"getage":({"GetAge",}),"direct_rock_str_on_obj":({"direct_rock_str_on_obj",}),"query_hp":({"query_hp",}),"direct_press_str_on_obj":({"direct_press_str_on_obj",}),"canpick":({"CanPick",}),"can_add_obj_to_obj":({"can_add_obj_to_obj",}),"get_dupes":({"get_dupes",}),"setmaxload":({"SetMaxLoad",}),"getfreelimbs":({"GetFreeLimbs",}),"canrequestcitizenship":({"CanRequestCitizenship",}),"exec":({"exec",}),"direct_shake_str_on_obj":({"direct_shake_str_on_obj",}),"distinct_array":({"distinct_array",}),"setburntvalue":({"SetBurntValue",}),"direct_heal_liv":({"direct_heal_liv",}),"set_verbs":({"set_verbs",}),"cancapture":({"CanCapture",}),"canthrow":({"CanThrow",}),"eventsocketclose":({"eventSocketClose",}),"write_prompt":({"write_prompt",}),"setemptyitem":({"SetEmptyItem",}),"checkcharmode":({"CheckCharmode",}),"getpreventdrop":({"GetPreventDrop",}),"getpoisonstrength":({"GetPoisonStrength",}),"eventput":({"eventPut",}),"do_shoot_obj_with_obj":({"do_shoot_obj_with_obj",}),"user_exists":({"user_exists",}),"eventrestore":({"eventRestore",}),"can_attack_only_liv":({"can_attack_only_liv",}),"canopen":({"CanOpen",}),"setvehicleinterior":({"SetVehicleInterior",}),"eventqueuecommand":({"eventQueueCommand",}),"can_ask_liv_for_str":({"can_ask_liv_for_str",}),"canclose":({"CanClose",}),"direct_pray_for_str_against_str_for_liv":({"direct_pray_for_str_against_str_for_liv",}),"can_look_obj":({"can_look_obj",}),"setflyroom":({"SetFlyRoom",}),"changelevel":({"ChangeLevel",}),"chat_command":({"chat_command",}),"getcommands":({"GetCommands",}),"do_listen_to_obj":({"do_listen_to_obj",}),"do_jump_over_obj":({"do_jump_over_obj",}),"do_unlock_obj_with_obj":({"do_unlock_obj_with_obj",}),"can_enter_into_obj":({"can_enter_into_obj",}),"reload_room":({"reload_room",}),"removescratch":({"RemoveScratch",}),"convert_into_ascii":({"convert_into_ascii",}),"getlines":({"GetLines",}),"getbroken":({"GetBroken",}),"setlogharass":({"SetLogHarass",}),"direct_teach_str_to_liv":({"direct_teach_str_to_liv",}),"get_stack":({"get_stack",}),"do_show_liv_obj":({"do_show_liv_obj",}),"archp":({"archp",}),"resetsurroundexits":({"ResetSurroundExits",}),"can_ignore":({"can_ignore",}),"getshort":({"GetShort",}),"eventtimeout":({"eventTimeout",}),"direct_attack_liv":({"direct_attack_liv",}),"direct_get_obj":({"direct_get_obj",}),"setlifespan":({"SetLifeSpan",}),"getclosed":({"GetClosed",}),"getdeaths":({"GetDeaths",}),"direct_ask_liv_to_str":({"direct_ask_liv_to_str",}),"setlevel":({"SetLevel",}),"do_swim":({"do_swim",}),"eventdestroyenemy":({"eventDestroyEnemy",}),"do_attack_only_liv":({"do_attack_only_liv",}),"do_read_obj":({"do_read_obj",}),"direct_lie_down_word_obj":({"direct_lie_down_word_obj",}),"cangetfrom":({"CanGetFrom",}),"getalllanguages":({"GetAllLanguages",}),"getextralong":({"GetExtraLong",}),"setpreventget":({"SetPreventGet",}),"direct_target_only_liv":({"direct_target_only_liv",}),"clean_newline_file":({"clean_newline_file",}),"do_ask_liv_for_str":({"do_ask_liv_for_str",}),"eventwithdraw":({"eventWithdraw",}),"getdoor":({"GetDoor",}),"do_look_at_str_on_obj":({"do_look_at_str_on_obj",}),"getcombatmove":({"GetCombatMove",}),"can_dismount":({"can_dismount",}),"getlanguage":({"GetLanguage",}),"do_apply_obj_word_obj":({"do_apply_obj_word_obj",}),"getbodymass":({"GetBodyMass",}),"gettrainingpoints":({"GetTrainingPoints",}),"do_free_liv_from_obj":({"do_free_liv_from_obj",}),"getheat":({"GetHeat",}),"direct_whisper_to_liv":({"direct_whisper_to_liv",}),"currency_value":({"currency_value",}),"gettouch":({"GetTouch",}),"indirect_shoot_obj_at_liv":({"indirect_shoot_obj_at_liv",}),"do_install":({"do_install",}),"do_capture_liv_word_obj":({"do_capture_liv_word_obj",}),"setalllanguages":({"SetAllLanguages",}),"do_pray_for_str_against_str":({"do_pray_for_str_against_str",}),"setwield":({"SetWield",}),"do_uninstall":({"do_uninstall",}),"eventpausemessages":({"eventPauseMessages",}),"unpinkfish":({"unpinkfish",}),"cmdquit":({"cmdQuit",}),"getmobility":({"GetMobility",}),"possessive":({"possessive",}),"direct_reload_every_str":({"direct_reload_every_str",}),"allowpass":({"AllowPass",}),"addmoney":({"AddMoney",}),"getcandidates":({"GetCandidates",}),"addlimb":({"AddLimb",}),"query_prev_wd":({"query_prev_wd",}),"getsinkroom":({"GetSinkRoom",}),"query_custom_path":({"query_custom_path",}),"direct_pick_str_on_obj":({"direct_pick_str_on_obj",}),"dump_file_descriptors":({"dump_file_descriptors",}),"direct_smell_obj":({"direct_smell_obj",}),"setid":({"SetId",}),"direct_fly_str":({"direct_fly_str",}),"setnotalemessage":({"SetNoTaleMessage",}),"query_base_value":({"query_base_value",}),"do_roll":({"do_roll",}),"can_look_inside_obj":({"can_look_inside_obj",}),"dorevolverunload":({"doRevolverUnload",}),"getworn":({"GetWorn",}),"can_party_wrd":({"can_party_wrd",}),"do_look_obj":({"do_look_obj",}),"getmessage":({"GetMessage",}),"do_listen_obj":({"do_listen_obj",}),"eventthrow":({"eventThrow",}),"getlive":({"GetLive",}),"eventmultiply":({"eventMultiply",}),"gettalkresponses":({"GetTalkResponses",}),"getquests":({"GetQuests",}),"do_apply_obj_obj":({"do_apply_obj_obj",}),"getenterdata":({"GetEnterData",}),"setcharmode":({"SetCharmode",}),"setfrequency":({"SetFrequency",}),"setshade":({"SetShade",}),"eventask":({"eventAsk",}),"can_body":({"can_body",}),"getdeities":({"GetDeities",}),"can_go_str":({"can_go_str",}),"setnews":({"SetNews",}),"getnoreplace":({"GetNoReplace",}),"setdamagetype":({"SetDamageType",}),"can_unlock_obj_with_obj":({"can_unlock_obj_with_obj",}),"getmag":({"GetMag",}),"eventclose":({"eventClose",}),"canevade":({"CanEvade",}),"cancarry":({"CanCarry",}),"direct_balance_obj_to_obj":({"direct_balance_obj_to_obj",}),"setlivinglong":({"SetLivingLong",}),"direct_roll_obj_on_str":({"direct_roll_obj_on_str",}),"removefishing":({"RemoveFishing",}),"do_pour_obj_out":({"do_pour_obj_out",}),"eventmail":({"eventMail",}),"can_light_obj_with_obj":({"can_light_obj_with_obj",}),"getplayerpaused":({"GetPlayerPaused",}),"sethb":({"SetHB",}),"getsearches":({"GetSearches",}),"gettalkhisttypes":({"GetTalkHistTypes",}),"indirect_unload_obj_word_obj":({"indirect_unload_obj_word_obj",}),"can_unload_obj":({"can_unload_obj",}),"getmaxfuel":({"GetMaxFuel",}),"can_remove_obj":({"can_remove_obj",}),"setscratch":({"SetScratch",}),"direct_lock_obj_with_str":({"direct_lock_obj_with_str",}),"setautoheal":({"SetAutoHeal",}),"can_turn_obj_off":({"can_turn_obj_off",}),"setside":({"SetSide",}),"removetitle":({"RemoveTitle",}),"setcanstand":({"SetCanStand",}),"setwizvision":({"SetWizVision",}),"can_bury_obj_with_obj":({"can_bury_obj_with_obj",}),"do_bait_obj_with_obj":({"do_bait_obj_with_obj",}),"indirect_load_obj_word_obj":({"indirect_load_obj_word_obj",}),"unique":({"unique",}),"eventremovetmp":({"eventRemoveTmp",}),"direct_wield_obj":({"direct_wield_obj",}),"setmount":({"SetMount",}),"setplayerpaused":({"SetPlayerPaused",}),"displaylong":({"displayLong",}),"destruct":({"Destruct","destruct",}),"do_look_inside_obj":({"do_look_inside_obj",}),"do_dismount":({"do_dismount",}),"check_read":({"check_read",}),"setground":({"SetGround",}),"gettellhistory":({"GetTellHistory",}),"eventdrain":({"eventDrain",}),"setannoyblock":({"SetAnnoyblock",}),"eventsearch":({"eventSearch",}),"can_wizlock_obj":({"can_wizlock_obj",}),"query_max_sp":({"query_max_sp",}),"cmdall":({"cmdAll",}),"domain_exists":({"domain_exists",}),"indirect_turn_on_obj_on_obj":({"indirect_turn_on_obj_on_obj",}),"getitemsmap":({"GetItemsMap",}),"do_add_obj_to_obj":({"do_add_obj_to_obj",}),"year":({"year",}),"getcommunicable":({"GetCommunicable",}),"addalcohol":({"AddAlcohol",}),"eventextraaction":({"eventExtraAction",}),])
