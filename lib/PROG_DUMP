NAME: /secure/daemon/master.c
INHERITS:
	name                    fio    vio
	----------------        ---    ---
PROGRAM:
	0000: 17 00 00 98 03 14 30 98 04 63 04 04 90 02 02 196 
	0010: 31 99 113 98 00 01 19 86 00 02 02 196 31 99 113 00 
	0020: 00 01 98 02 63 02 19 10 00 02 02 194 32 05 05 98 
	0030: 03 63 03 125 19 56 00 63 03 30 00 05 21 45 00 02 
	0040: 02 197 33 114 02 64 00 97 64 01 97 11 02 25 28 00 
	0050: 02 03 64 64 192 75 14 34 25 09 00 02 02 65 192 83 
	0060: 98 00 63 00 17 01 00 68 11 96 31 44 00 15 68 01 
	0070: 97 15 68 06 97 15 68 03 97 16 68 00 97 14 35 113 
	0080: 98 00 01 20 09 00 02 02 36 35 05 45 01 44 05 00 
	0090: 00 01 44 06 00 00 01 44 07 00 00 01 15 112 02 11 
	00a0: 00 08 32 28 07 02 07 01 47 18 00 00 98 00 02 02 
	00b0: 37 192 44 25 00 02 01 63 00 68 08 97 47 18 00 00 
	00c0: 98 00 02 02 38 192 44 25 00 02 01 63 00 68 09 97 
	00d0: 47 18 00 00 98 00 02 02 39 192 44 25 00 02 01 63 
	00e0: 00 68 07 97 47 63 00 113 00 00 01 64 03 95 20 08 
	00f0: 00 02 02 40 192 99 190 02 02 195 32 05 05 112 08 01 
	0100: 00 33 00 63 00 109 37 11 00 63 00 113 158 00 01 14 
	0110: 41 48 19 03 00 47 02 02 64 192 71 11 35 25 03 00 
	0120: 47 16 46 47 07 02 82 98 02 63 02 30 00 04 21 111 
	0130: 00 14 41 98 06 02 02 196 42 114 02 64 05 97 64 06 
	0140: 97 11 02 28 11 00 02 02 43 192 99 14 44 99 190 63 
	0150: 06 113 158 00 01 98 06 02 02 197 67 113 217 00 02 14 
	0160: 45 25 48 00 02 02 197 66 113 202 00 02 98 07 02 02 
	0170: 199 64 05 25 30 00 08 21 20 00 02 02 198 47 05 05 
	0180: 02 02 199 200 99 14 46 99 64 01 72 97 31 19 00 21 
	0190: 14 00 02 02 198 47 05 05 63 05 64 01 72 97 31 110 
	01a0: 00 47 15 123 19 03 00 47 02 02 192 48 114 01 64 04 
	01b0: 97 16 25 16 00 15 98 03 21 04 00 35 03 33 03 04 
	01c0: 05 00 47 02 02 192 49 114 02 64 01 97 64 02 97 19 
	01d0: 20 00 02 03 50 193 194 07 02 00 99 14 51 99 113 167 
	01e0: 00 01 01 47 14 52 113 167 00 01 01 47 14 53 113 00 
	01f0: 00 01 64 03 95 20 06 00 17 00 00 46 02 02 195 32 
	0200: 05 05 64 01 95 125 98 00 17 00 00 98 02 21 49 00 
	0210: 02 02 192 193 71 109 37 23 00 02 02 192 193 71 14 41 
	0220: 48 37 12 00 02 03 64 192 193 71 71 11 35 48 19 05 
	0230: 00 21 13 00 02 02 192 193 71 17 01 00 64 02 96 36 
	0240: 00 49 00 63 02 46 47 15 98 01 02 03 192 54 64 06 
	0250: 26 20 15 00 02 02 192 55 114 01 64 01 97 01 21 22 
	0260: 00 02 03 192 56 64 06 26 20 12 00 02 02 192 57 114 
	0270: 01 64 01 97 01 63 01 19 90 00 02 05 192 58 64 64 
	0280: 193 75 99 14 46 99 63 01 99 25 47 00 63 01 98 02 
	0290: 67 07 149 30 00 03 21 25 00 02 03 193 195 135 71 05 
	02a0: 08 12 01 28 12 00 02 02 194 47 99 63 03 99 98 02 
	02b0: 31 24 00 63 02 46 21 27 00 02 05 192 59 64 64 193 
	02c0: 75 99 14 46 99 63 01 99 25 08 00 63 01 46 21 03 
	02d0: 00 47 63 00 113 99 00 01 46 47 02 02 192 60 99 113 
	02e0: 98 00 01 20 03 00 47 03 65 98 02 02 02 61 192 99 
	02f0: 14 62 99 113 167 00 01 01 39 11 00 02 02 192 63 07 
	0300: 02 00 01 40 64 01 95 19 24 00 14 64 63 01 99 14 
	0310: 65 99 63 00 99 14 66 99 113 167 00 01 01 21 34 00 
	0320: 03 65 63 02 100 98 02 14 67 02 02 194 124 102 99 14 
	0330: 44 99 02 02 194 124 103 99 14 68 99 113 167 00 01 01 
	0340: 47 63 01 03 71 25 04 00 16 46 02 02 137 192 05 32 
	0350: 98 03 02 04 193 194 192 195 14 69 44 31 00 05 46 47 
	0360: 63 01 03 71 25 04 00 16 46 02 02 136 192 05 32 98 
	0370: 03 02 04 193 194 192 195 14 70 44 31 00 05 46 47 15 
	0380: 123 98 02 63 02 181 20 06 00 16 123 98 02 63 02 181 
	0390: 20 07 00 11 02 123 98 02 63 02 181 20 07 00 11 03 
	03a0: 123 98 02 63 02 181 20 03 00 47 63 02 14 71 07 02 
	03b0: 00 19 12 00 63 02 14 72 113 169 00 02 01 47 02 02 
	03c0: 192 194 14 73 44 29 00 03 20 03 00 47 02 02 193 194 
	03d0: 14 73 44 29 00 03 20 03 00 47 16 46 47 16 123 02 
	03e0: 02 64 64 123 63 00 14 74 44 31 00 05 46 63 02 158 
	03f0: 19 10 00 63 02 113 76 00 01 98 02 63 03 38 16 00 
	0400: 63 03 125 38 10 00 02 02 64 195 71 14 75 48 19 04 
	0410: 00 16 46 02 02 129 192 25 143 00 63 00 113 76 00 01 
	0420: 64 09 95 14 76 48 37 07 00 63 09 14 77 48 19 91 
	0430: 00 67 03 20 20 00 63 00 17 01 00 12 01 123 99 64 
	0440: 05 95 125 98 08 21 65 00 02 05 194 59 64 64 131 75 
	0450: 99 14 46 99 67 03 99 14 78 99 25 07 00 16 46 21 
	0460: 39 00 02 05 194 58 64 64 131 75 99 14 46 99 67 03 
	0470: 99 14 78 99 25 07 00 16 46 21 13 00 63 00 17 01 
	0480: 00 64 05 95 125 98 08 21 28 00 63 09 14 78 99 63 
	0490: 02 25 07 00 16 46 21 13 00 63 00 17 01 00 64 05 
	04a0: 95 125 98 08 21 66 00 67 01 38 11 00 63 00 113 76 
	04b0: 00 01 14 79 48 19 34 00 02 02 129 65 123 25 12 00 
	04c0: 16 123 17 01 00 98 05 21 13 00 63 00 17 01 00 12 
	04d0: 01 123 99 98 05 21 17 00 12 01 123 63 00 17 01 00 
	04e0: 99 64 05 95 125 98 08 21 234 00 02 02 200 197 71 109 
	04f0: 37 10 00 02 02 200 197 71 03 02 48 19 05 00 21 211 
	0500: 00 02 02 200 197 71 127 14 79 25 05 00 21 197 00 02 
	0510: 02 200 197 71 187 64 07 95 20 03 00 47 63 03 109 38 
	0520: 07 00 63 04 14 70 48 19 05 00 21 167 00 02 02 199 
	0530: 47 05 05 98 06 14 80 63 06 05 08 12 01 28 05 00 
	0540: 21 145 00 63 02 154 38 15 00 63 02 113 99 00 01 63 
	0550: 06 05 08 12 01 49 19 05 00 21 120 00 63 03 109 38 
	0560: 07 00 63 04 14 69 48 19 35 00 02 02 200 197 71 185 
	0570: 38 16 00 02 02 200 197 71 02 03 193 194 196 44 32 00 
	0580: 04 19 08 00 21 77 00 21 03 00 47 02 02 198 195 104 
	0590: 125 19 05 00 21 61 00 02 02 200 197 71 185 38 16 00 
	05a0: 02 02 200 197 71 02 03 193 194 196 44 32 00 04 19 05 
	05b0: 00 21 32 00 02 02 200 197 71 185 38 16 00 02 02 200 
	05c0: 197 71 02 03 193 194 196 44 33 00 04 19 05 00 21 03 
	05d0: 00 47 36 08 234 00 16 46 47 63 00 113 84 00 01 20 
	05e0: 41 00 63 00 113 76 00 01 14 46 113 209 00 02 98 04 
	05f0: 63 02 14 81 02 03 64 64 196 75 99 14 46 99 63 04 
	0600: 99 15 06 26 20 04 00 16 46 63 02 14 82 114 01 64 
	0610: 04 97 20 03 00 47 63 04 14 83 114 01 64 05 97 19 
	0620: 06 00 63 05 98 04 63 04 113 162 00 01 14 84 99 98 
	0630: 04 02 02 196 60 99 165 15 26 03 00 47 39 18 00 63 
	0640: 04 14 85 02 04 192 193 194 195 07 06 00 98 06 40 01 
	0650: 63 06 46 47 63 02 14 86 114 01 64 04 97 20 03 00 
	0660: 47 14 87 63 04 99 14 88 99 98 04 02 02 196 60 99 
	0670: 165 15 26 03 00 47 39 18 00 63 04 14 85 02 04 192 
	0680: 193 194 195 07 06 00 98 05 40 01 63 05 46 47 63 00 
	0690: 113 204 00 01 01 14 89 98 03 39 10 00 63 03 07 01 
	06a0: 03 98 01 40 64 02 95 19 23 00 14 90 113 167 00 01 
	06b0: 01 63 02 113 167 00 01 01 63 01 113 89 00 01 01 63 
	06c0: 01 46 47 63 00 14 91 114 01 64 01 97 19 18 00 14 
	06d0: 92 63 01 113 162 00 01 07 02 69 98 02 21 255 00 63 
	06e0: 00 14 86 114 01 64 01 97 19 16 00 14 93 14 94 63 
	06f0: 01 07 03 69 98 02 21 229 00 63 00 14 95 15 06 26 
	0700: 20 14 00 14 96 14 95 07 02 69 98 02 21 207 00 02 
	0710: 02 192 55 114 01 64 01 97 19 115 00 67 06 20 03 00 
	0720: 47 67 06 14 97 07 02 00 63 01 28 03 00 47 63 01 
	0730: 68 03 97 14 76 07 01 03 98 05 63 00 14 78 99 165 
	0740: 15 27 15 00 63 05 14 98 63 01 07 03 00 01 21 41 
	0750: 00 14 54 165 12 02 28 09 00 14 54 166 01 21 26 00 
	0760: 02 04 59 64 64 193 75 99 165 12 02 28 12 00 02 04 
	0770: 59 64 64 193 75 99 166 01 63 05 14 99 63 01 07 03 
	0780: 00 01 15 68 03 97 63 05 46 21 82 00 02 02 192 57 
	0790: 114 01 64 01 97 19 70 00 67 06 20 03 00 47 67 06 
	07a0: 14 97 07 02 00 63 01 28 03 00 47 63 01 68 03 97 
	07b0: 14 77 07 01 03 98 05 63 00 14 78 99 165 15 27 12 
	07c0: 00 63 05 14 98 63 01 07 03 00 01 63 05 14 99 63 
	07d0: 01 07 03 00 01 15 68 03 97 63 05 46 02 02 194 60 
	07e0: 99 165 15 26 99 00 63 00 14 100 114 02 64 03 97 64 
	07f0: 04 97 11 02 28 03 00 47 63 00 14 91 114 01 64 01 
	0800: 97 19 20 00 14 101 63 01 113 162 00 01 63 04 07 03 
	0810: 69 98 02 21 27 00 63 00 14 86 114 01 64 01 97 19 
	0820: 15 00 14 102 14 94 02 02 193 196 07 04 69 98 02 02 
	0830: 02 194 60 99 165 15 26 06 00 47 21 12 00 63 02 14 
	0840: 103 63 03 07 03 00 46 63 02 14 103 63 00 07 03 00 
	0850: 46 47 113 183 00 00 98 01 12 01 123 113 105 00 01 98 
	0860: 02 14 104 113 113 00 00 14 105 99 03 65 04 53 99 14 
	0870: 106 99 63 00 99 14 66 99 63 01 99 14 32 99 63 02 
	0880: 99 14 107 99 05 40 01 14 108 14 109 113 18 01 00 06 
	0890: 28 14 108 14 110 113 18 01 00 06 28 113 18 01 00 14 
	08a0: 111 07 02 00 01 47 02 02 193 194 113 204 00 02 01 63 
	08b0: 00 03 71 25 04 00 16 46 14 80 63 00 187 14 47 05 
	08c0: 05 05 08 12 01 28 04 00 16 46 47 47 63 00 158 20 
	08d0: 03 00 47 63 00 04 10 38 10 00 63 00 04 10 113 103 
	08e0: 00 01 19 04 00 16 46 63 00 187 64 01 95 20 06 00 
	08f0: 47 21 16 00 14 80 02 02 193 47 05 05 05 08 12 01 
	0900: 49 46 47 02 02 192 193 113 204 00 02 01 63 00 14 79 
	0910: 48 46 63 00 113 204 00 01 46 15 123 98 01 63 00 113 
	0920: 204 00 01 01 63 01 155 109 38 11 00 63 01 127 14 112 
	0930: 15 06 26 109 46 47 63 00 127 98 01 63 00 113 76 00 
	0940: 01 14 60 99 113 00 00 01 98 02 63 02 20 06 00 14 
	0950: 41 98 02 63 02 14 113 15 06 26 12 01 49 37 12 00 
	0960: 63 02 14 114 15 06 26 12 01 49 19 27 00 63 01 14 
	0970: 115 114 01 64 03 97 20 03 00 47 02 02 195 138 05 08 
	0980: 12 01 25 03 00 47 63 01 14 116 15 06 26 20 06 00 
	0990: 47 21 46 00 63 01 14 117 15 06 26 20 06 00 47 21 
	09a0: 32 00 63 01 14 118 15 06 26 20 06 00 47 21 18 00 
	09b0: 63 01 14 119 15 06 26 20 06 00 47 21 04 00 16 46 
	09c0: 47 63 02 38 08 00 63 02 125 11 04 48 19 64 00 02 
	09d0: 02 65 194 71 98 00 02 02 67 194 71 98 04 63 04 08 
	09e0: 114 66 48 38 11 00 63 00 14 120 113 05 00 01 49 19 
	09f0: 03 00 47 63 04 113 129 00 00 12 10 99 48 38 11 00 
	0a00: 63 00 14 121 113 05 00 01 49 19 03 00 47 12 01 123 
	0a10: 64 03 95 125 98 06 21 61 00 02 02 198 195 71 20 05 
	0a20: 00 21 50 00 02 02 198 195 71 185 19 05 00 21 38 00 
	0a30: 02 02 198 195 71 187 64 05 95 20 03 00 47 02 02 197 
	0a40: 47 05 05 14 80 14 122 14 123 14 124 17 04 00 104 125 
	0a50: 20 03 00 47 36 06 61 00 16 46 47 63 00 109 37 06 
	0a60: 00 63 00 156 109 19 06 00 14 125 190 47 63 00 156 11 
	0a70: 32 104 19 06 00 14 126 190 47 15 123 113 76 00 01 14 
	0a80: 79 28 06 00 14 127 190 47 67 01 98 01 16 123 68 01 
	0a90: 97 39 10 00 63 00 07 01 01 98 03 40 98 02 63 01 
	0aa0: 68 01 97 63 02 19 05 00 63 02 190 63 03 46 47 14 
	0ab0: 128 113 181 00 00 99 14 32 99 63 00 44 42 00 01 99 
	0ac0: 98 02 63 01 19 15 00 14 129 64 03 95 63 02 05 40 
	0ad0: 01 21 12 00 14 130 64 03 95 63 02 05 40 01 16 122 
	0ae0: 38 08 00 14 79 113 05 00 01 19 172 00 16 122 14 131 
	0af0: 63 00 07 03 00 01 16 122 113 84 00 01 19 24 00 16 
	0b00: 122 14 133 63 02 14 132 99 63 03 99 08 01 04 07 04 
	0b10: 00 01 21 131 00 16 122 127 14 89 15 06 26 20 05 00 
	0b20: 14 134 46 15 122 14 133 14 135 07 03 00 01 14 136 14 
	0b30: 141 14 137 14 138 14 139 16 122 14 140 07 02 00 99 14 
	0b40: 44 99 07 05 00 01 14 142 113 181 00 00 99 14 143 99 
	0b50: 16 122 14 140 07 02 00 99 14 32 99 68 04 97 14 144 
	0b60: 113 19 01 01 14 145 16 122 14 97 07 02 00 07 03 00 
	0b70: 68 04 96 15 122 14 146 07 02 00 113 173 00 01 14 147 
	0b80: 99 68 04 96 15 112 69 00 07 00 14 148 67 04 05 40 
	0b90: 46 113 159 00 01 01 47 47 02 02 64 192 71 11 47 28 
	0ba0: 09 00 02 02 46 192 99 98 00 15 122 20 41 00 16 124 
	0bb0: 98 05 14 149 113 19 01 01 98 06 63 06 38 11 00 02 
	0bc0: 02 198 197 05 08 12 01 49 19 12 00 63 06 14 150 63 
	0bd0: 01 07 03 00 01 63 00 14 151 114 02 64 02 97 64 03 
	0be0: 97 11 02 49 38 38 00 63 00 14 152 114 02 64 02 97 
	0bf0: 64 03 97 11 02 49 38 20 00 63 00 14 153 114 03 64 
	0c00: 03 97 64 02 97 64 04 97 11 03 49 19 15 00 63 00 
	0c10: 14 154 114 02 64 02 97 64 03 97 01 63 02 20 06 00 
	0c20: 14 155 98 02 39 21 00 14 156 63 02 99 113 181 00 00 
	0c30: 14 157 99 63 01 99 05 40 01 40 01 63 01 38 13 00 
	0c40: 16 122 38 08 00 16 122 113 54 00 01 19 16 00 39 12 
	0c50: 00 16 122 63 01 113 169 00 02 01 40 01 47 14 138 63 
	0c60: 00 71 14 158 99 14 159 63 00 71 14 160 63 00 71 14 
	0c70: 161 63 00 71 14 162 63 00 71 44 43 00 04 99 98 02 
	0c80: 14 32 64 02 96 14 163 63 00 71 98 03 63 03 125 98 
	0c90: 05 15 98 04 21 71 00 63 01 19 12 00 14 164 63 04 
	0ca0: 07 02 69 64 02 96 14 165 14 166 02 02 196 195 71 71 
	0cb0: 14 159 02 02 196 195 71 71 14 160 02 02 196 195 71 71 
	0cc0: 14 161 02 02 196 195 71 71 14 162 02 02 196 195 71 71 
	0cd0: 44 43 00 04 07 03 69 64 02 96 35 04 33 04 05 72 
	0ce0: 00 63 02 46 47 63 00 19 08 00 63 00 127 21 04 00 
	0cf0: 14 167 98 05 63 05 98 04 02 02 197 193 44 44 00 02 
	0d00: 19 12 00 14 168 63 01 07 02 69 64 04 96 02 02 194 
	0d10: 193 28 17 00 14 169 02 02 194 195 07 03 69 64 04 96 
	0d20: 21 12 00 14 170 63 03 07 02 69 64 04 96 63 04 46 
	0d30: 47 63 00 14 171 114 02 64 00 97 64 02 97 01 14 60 
	0d40: 64 00 96 02 02 192 193 49 38 09 00 02 03 192 46 193 
	0d50: 99 49 46 47 15 123 127 14 79 28 03 00 47 63 00 165 
	0d60: 09 240 73 02 00 27 16 00 02 03 192 192 44 99 113 181 
	0d70: 00 00 99 05 41 01 02 02 192 193 05 40 01 47 16 122 
	0d80: 14 172 07 02 00 63 00 113 69 00 02 46 63 00 20 03 
	0d90: 00 47 02 04 59 64 64 192 75 99 14 46 99 63 00 99 
	0da0: 14 78 99 98 01 63 01 165 12 01 27 04 00 16 46 02 
	0db0: 04 58 64 64 192 75 99 14 46 99 63 00 99 14 78 99 
	0dc0: 98 01 63 01 165 12 01 53 46 47 63 00 14 152 114 02 
	0dd0: 64 01 97 64 02 97 11 02 25 05 00 63 01 46 47 63 
	0de0: 00 14 151 114 02 64 01 97 64 02 97 11 02 25 08 00 
	0df0: 63 01 46 21 25 00 63 00 14 153 114 03 64 02 97 64 
	0e00: 01 97 64 03 97 11 03 25 05 00 63 01 46 47 14 173 
	0e10: 14 174 03 65 04 53 99 14 66 99 05 40 01 14 175 14 
	0e20: 176 11 02 07 03 00 01 16 46 47 63 01 151 20 03 00 
	0e30: 47 63 00 14 97 07 02 00 113 162 00 01 14 177 99 64 
	0e40: 02 95 167 01 02 03 194 193 41 99 05 40 46 47 63 00 
	0e50: 14 97 07 02 00 113 162 00 01 14 177 99 98 01 63 01 
	0e60: 113 98 00 01 20 03 00 47 63 01 113 00 00 01 120 46 
	0e70: 47 16 122 20 05 00 14 178 46 16 122 14 97 07 02 00 
	0e80: 98 00 63 00 109 37 06 00 63 00 154 109 19 05 00 14 
	0e90: 178 46 63 00 113 162 00 01 165 12 02 25 15 00 63 00 
	0ea0: 113 162 00 01 14 179 99 46 21 11 00 14 180 63 00 99 
	0eb0: 14 181 99 46 47 47 14 182 14 183 17 02 00 46 14 184 
	0ec0: 14 185 14 186 17 03 00 46 14 187 14 188 14 189 17 03 
	0ed0: 00 46 14 190 14 191 14 192 14 193 14 194 14 195 14 196 
	0ee0: 14 197 14 198 14 199 14 200 14 201 14 202 14 203 14 204 
	0ef0: 14 205 14 206 14 207 14 208 14 209 14 210 14 211 14 212 
	0f00: 14 213 14 214 14 215 14 216 14 217 14 218 14 219 14 220 
	0f10: 14 221 14 222 14 223 17 34 00 46 14 75 46 63 01 19 
	0f20: 14 00 63 01 14 224 07 02 00 98 04 21 06 00 14 41 
	0f30: 98 04 63 00 43 254 125 01 145 01 122 01 63 03 19 19 
	0f40: 00 14 225 63 02 113 141 00 01 99 14 226 99 98 04 21 
	0f50: 16 00 14 227 63 02 113 141 00 01 99 14 226 99 98 04 
	0f60: 21 101 01 63 03 19 20 00 14 228 63 02 113 141 00 01 
	0f70: 210 99 14 229 99 98 04 21 16 00 14 230 63 02 113 141 
	0f80: 00 01 99 14 231 99 98 04 21 61 01 63 03 19 09 00 
	0f90: 14 232 98 04 21 06 00 14 233 98 04 21 42 01 15 122 
	0fa0: 68 02 97 16 19 25 00 15 122 14 234 07 02 00 68 05 
	0fb0: 97 15 122 14 235 67 05 07 03 00 01 14 157 46 63 02 
	0fc0: 15 112 05 01 08 00 63 00 14 224 07 02 00 46 05 66 
	0fd0: 98 06 63 06 125 16 25 32 00 14 236 63 02 125 02 03 
	0fe0: 64 64 198 71 71 14 224 07 02 00 113 80 00 02 99 14 
	0ff0: 237 99 98 04 21 117 00 14 238 98 04 15 98 07 21 94 
	1000: 00 02 02 199 198 71 125 16 27 33 00 14 239 02 02 199 
	1010: 198 71 125 02 03 64 199 198 71 71 14 224 07 02 00 113 
	1020: 80 00 02 99 64 04 96 21 17 00 02 03 64 199 198 71 
	1030: 71 14 224 07 02 00 64 04 96 02 02 199 198 125 11 02 
	1040: 100 25 10 00 14 240 64 04 96 21 17 00 02 02 199 198 
	1050: 125 16 100 26 07 00 14 241 64 04 96 35 07 02 02 199 
	1060: 198 125 29 98 00 14 242 64 04 96 63 04 46 02 02 194 
	1070: 65 27 15 00 14 243 63 02 99 14 244 99 98 04 21 06 
	1080: 00 14 245 98 04 21 64 00 63 02 46 63 02 113 101 00 
	1090: 01 19 13 00 63 02 113 141 00 01 98 05 21 06 00 14 
	10a0: 246 98 05 14 227 63 05 99 14 226 99 46 14 247 46 21 
	10b0: 22 00 07 00 46 00 86 00 105 00 56 01 83 01 86 01 
	10c0: 119 01 01 00 00 00 63 04 46 47 15 123 14 97 07 02 
	10d0: 00 64 00 95 154 20 03 00 47 02 04 59 64 64 192 75 
	10e0: 99 165 12 02 25 03 00 47 02 02 64 192 71 11 97 51 
	10f0: 37 10 00 02 02 64 192 71 11 122 53 19 03 00 47 02 
	1100: 04 59 64 64 192 75 99 166 01 47 15 123 64 02 95 113 
	1110: 76 00 01 98 04 63 04 14 248 49 38 23 00 63 04 14 
	1120: 249 49 38 15 00 63 04 14 89 49 38 07 00 63 04 14 
	1130: 250 49 19 03 00 47 16 193 98 05 09 00 202 154 59 113 
	1140: 144 00 01 01 63 04 14 250 48 38 04 00 63 01 19 10 
	1150: 00 63 01 68 06 97 21 07 00 63 02 68 06 97 02 04 
	1160: 58 64 64 192 75 99 14 46 99 63 00 99 14 78 99 165 
	1170: 12 01 27 31 00 39 23 00 02 04 58 64 64 192 75 99 
	1180: 14 46 99 63 00 99 113 19 01 01 98 02 40 98 03 21 
	1190: 28 00 39 23 00 02 04 59 64 64 192 75 99 14 46 99 
	11a0: 63 00 99 113 19 01 01 98 02 40 98 03 15 68 06 97 
	11b0: 63 05 113 144 00 01 01 63 03 19 05 00 63 03 190 63 
	11c0: 02 46 47 02 04 58 64 64 192 75 99 14 46 99 63 00 
	11d0: 99 98 01 63 01 14 78 99 165 12 01 27 08 00 63 01 
	11e0: 46 21 17 00 02 04 59 64 64 192 75 99 14 46 99 63 
	11f0: 00 99 46 47 02 02 192 135 71 113 83 00 01 46 67 07 
	1200: 113 83 00 01 46 68 00 54 15 112 02 11 00 08 32 28 
	1210: 07 02 07 01 03 89 98 02 14 251 14 252 67 00 99 14 
	1220: 253 99 03 65 04 53 99 14 32 99 05 40 01 16 19 32 
	1230: 00 15 112 05 01 15 00 63 00 04 10 109 38 08 00 11 
	1240: 100 129 11 26 51 46 113 07 00 01 98 00 21 08 00 113 
	1250: 07 00 00 98 00 15 98 03 63 00 30 00 01 21 92 00 
	1260: 63 01 20 08 00 64 03 54 21 81 00 63 01 14 254 17 
	1270: 02 00 112 03 227 00 63 01 05 04 98 04 63 04 19 13 
	1280: 00 39 09 00 63 04 07 01 01 01 40 01 63 01 20 08 
	1290: 00 64 03 54 21 37 00 63 01 14 255 67 00 17 03 00 
	12a0: 112 03 227 00 63 01 05 04 98 04 63 04 19 13 00 39 
	12b0: 09 00 63 04 07 01 01 01 40 01 31 91 00 14 251 13 
	12c0: 00 01 63 02 99 13 01 01 99 63 00 125 63 03 100 99 
	12d0: 13 02 01 99 63 03 99 13 03 01 99 05 40 01 47 67 
	12e0: 00 46 17 00 00 67 11 99 46 113 18 01 00 15 112 05 
	12f0: 01 18 00 63 00 113 84 00 01 37 10 00 63 00 13 04 
	1300: 01 07 02 00 46 07 02 82 46 02 05 25 26 27 28 29 
	1310: 17 05 00 68 10 97 17 00 00 68 11 97 47 
FUNCTIONS:
      name                  offset  flags  fio  # locals  # args
      --------------------- ------ ------- ---  --------  ------
   0: create                    0  --s----            0       6
   1: GetEfuns                  1  --s----            0       0
   2: flag                      2  --s----            1       4
   3: player_save_file          3  --s----            1       1
   4: valid_link                4  --s----            2       1
   5: new_read                  5  --s----            0       1
   6: new_write                 6  --s----            0       1
   7: new_groups                7  --s----            0       1
   8: parse_command_prepos_list      8  --s----            0       0
   9: create_save               9  --s----            0       1
  10: player_object            10  --s---v            2       4
  11: eventReset               11  --s----            0       5
  12: valid_apply              12  --s----            1       0
  13: master_log_file          13  --s----            2       0
  14: GetResetNumber           14  --s----            0       0
  15: query_group              15  --s----            1       0
  16: apply_unguarded          16  --s----            1       3
  17: player_exists            17  --s----            1       1
  18: valid_bind               18  --s----            3       0
  19: valid_shadow             19  --s----            1       1
  20: valid_save_binary        20  --s----            1       0
  21: valid_object             21  --s----            1       3
  22: parser_error_message     22  --s----            4       4
  23: query_groups             23  --s----            0       0
  24: parse_command_users      24  --s----            0       0
  25: load_access              25  --s----            2       7
  26: epilog                   26  --s----            1       3
  27: privs_file               27  --s----            1       3
  28: preload                  28  --s----            1       2
  29: valid_write              29  --s----            3       1
  30: valid_read               30  --s----            3       1
  31: check_access             31  --s----            5       5
  32: check_user               32  --s----            4       3
  33: check_domain             33  --s----            4       2
  34: connect                  34  --s----            1       3
  35: compile_object           35  --s----            1       5
  36: crash                    36  --s----            1       2
  37: valid_hide               37  --s----            1       1
  38: valid_override           38  --s----            2       0
  39: valid_socket             39  --s----            3       4
  40: error_handler            40  --s----            2       2
  41: log_error                41  --s----            2       5
  42: standard_trace           42  --s---v            2       4
  43: trace_line               43  --s----            4       2
  44: different                44  --s----            2       1
  45: make_path_absolute       45  --s----            1       0
  46: domain_file              46  --s----            1       2
  47: author_file              47  --s----            1       3
  48: slow_shutdown            48  --s----            0       0
  49: save_ed_setup            49  --s----            2       1
  50: retrieve_ed_setup        50  --s----            1       1
  51: get_save_file_name       51  --s----            0       1
  52: is_locked                52  --s----            0       0
  53: parse_command_id_list     53  --s----            0       0
  54: parse_command_plural_id_list     54  --s----            0       0
  55: parse_command_adjectiv_id_list     55  --s----            0       0
  56: parse_command_all_word     56  --s----            0       0
  57: #global_init#            57  --s----            0       0
VARIABLES:
   0: ResetNumber 
   1: Unguarded   
   2: gguy        
   3: PlayerName  
   4: rlog        
   5: gcmd        
   6: NewPlayer   
   7: Groups      
   8: ReadAccess  
   9: WriteAccess 
  10: ParserDirs  
  11: efuns_arr   
STRINGS:
   0: secure/daemon/master.c
   1: secure/include/global.h
   2: secure/include/config.h
   3: secure/include/lib.h
   4: secure/include/dirs.h
   5: secure/include/comp.h
   6: secure/include/events.h
   7: secure/include/lvs.h
   8: secure/include/props.h
   9: secure/include/std.h
  10: secure/include/user.h
  11: secure/include/compat.h
  12: secure/include/rooms.h
  13: secure/include/cfg.h
  14: secure/include/objects.h
  15: secure/include/privs.h
  16: secure/include/save.h
  17: secure/include/daemons.h
  18: secure/include/commands.h
  19: secure/include/network.h
  20: secure/include/socket.h
  21: secure/include/parser_error.h
  22: include/message_class.h
  23: secure/include/function.h
  24: secure/daemon/master.h
  25: secure
  26: verbs
  27: daemon
  28: lib
  29: spells
  30: /secure/tmp/opc
  31: .efun
  32: \n
  33: %s %s
  34: _
  35: /secure/sefun/native_version.c
  36: /secure/scripts/native_version.p
  37: /secure/cfg/read.cfg
  38: /secure/cfg/write.cfg
  39: /secure/cfg/groups.cfg
  40: Failed to find config file: 
  41: 
  42: (%s)%s
  43: Error in loading config file 
  44: .
  45: /*/
  46: /
  47: :
  48: for %d
  49: call %s %s
  50: Got 
  51:  back.\n
  52: Master: unknown flag.\n
  53: /secure/cfg/preload.cfg
  54: /secure/save/players
  55: /secure/save/players/%*s/%s
  56: /secure/save/creators
  57: /secure/save/creators/%*s/%s
  58: /secure/save/creators/
  59: /secure/save/players/
  60: .c
  61: Preloading: 
  62: ...
  63: ???
  64: \nGot error 
  65:  when loading 
  66: .\n
  67: (
  68: )\n
  69: write
  70: read
  71: GetForced
  72: Someone's fucking with you.
  73: link
  74: apply
  75: all
  76: /lib/player
  77: /lib/creator
  78: .o
  79: /secure/sefun/sefun
  80: SECURE
  81: /estates/
  82: /realms/%s
  83: %s/%*s
  84: adm/access
  85: check_access
  86: /domains/%s/%*s
  87: /domains/
  88: /adm/access
  89: /secure/lib/connect
  90: It looks like someone is working
  91: /realms/%s/%*s
  92: %svirtual/server
  93: %s/%s/virtual/server
  94: /domains
  95: /estates
  96: %s/virtual/server
  97: GetKeyName
  98: restore_player
  99: SetKeyName
 100: %s.%s
 101: %svirtual/%s_server
 102: %s/%s/virtual/%s_server
 103: compile_object
 104: /log/crashes
 105:  crashed 
 106:  with error 
 107: \n---\n
 108: system
 109: Reality implosion!!!  Everyone d
 110: You are being forced to quit.
 111: cmdQuit
 112: /shadows
 113: parse_add_rule
 114: SetRules
 115: /%s/%*s
 116: /tmp
 117: /ftp
 118: /log
 119: /secure/save
 120: /secure/daemon/admin
 121: /secure/daemon/remote
 122: MUDLIBPRIV
 123: CMDS
 124: GENERAL
 125: Invalid function passed.
 126: Function owner dested: invalid f
 127: Illegal unguarded apply.
 128: ---\n
 129: /log/catch
 130: /log/runtime
 131: SetLastError
 132: Trace written to 
 133: eventPrint
 134: /log/login
 135: A runtime error occurred.
 136: /secure/daemon/chat
 137: System
 138: error
 139: A runtime error occurred to 
 140: GetCapName
 141: eventSendChannel
 142: -----\n
 143: : 
 144: /secure/cmds/creators/dbxwhere
 145: cmd
 146: GetLastError
 147: \n-----\n
 148: /log/player_errors
 149: /secure/daemon/web_sessions
 150: ReceiveErrorReport
 151: /realms/%s/%s
 152: /domains/%s/%s
 153: /estates/%s/%s/%s
 154: /%s/%s
 155: log
 156: /log/errors/
 157:  
 158: Object: 
 159: object
 160: program
 161: file
 162: line
 163: trace
 164: #%d: 
 165: '%s' at %s
 166: function
 167: <none>
 168:  (%s)
 169:  at %s:%d\n
 170:  at line %d\n
 171: %s#%d
 172: query_cwd
 173: /log/audit
 174: Armageddon loaded by master: 
 175: /secure/daemon/events
 176: eventRebootMud
 177: .edrc
 178: /tmp/.dead.edit
 179: dead.edit
 180: /tmp/
 181: .dead.edit
 182: one
 183: thing
 184: ones
 185: things
 186: them
 187: the
 188: an
 189: a
 190: in
 191: with
 192: without
 193: into
 194: for
 195: on
 196: under
 197: against
 198: out
 199: within
 200: of
 201: from
 202: between
 203: at
 204: to
 205: over
 206: near
 207: inside
 208: onto
 209: off
 210: through
 211: across
 212: up
 213: down
 214: every
 215: around
 216: about
 217: only
 218: here
 219: room
 220: exit
 221: enter
 222: -r
 223: -a
 224: GetShort
 225: There is no such 
 226:  here.
 227: There is no 
 228: None of the 
 229:  are alive.
 230: The 
 231:  is not alive.
 232: You can't get to them.
 233: You can't get to it.
 234: GetLastCommand
 235: eventRetryCommand
 236: Which of the 
 237:  do you mean?
 238: Do you mean 
 239: one of the 
 240:  or 
 241: , 
 242: ?
 243: There are only 
 244:  of them.
 245: There is only one of them.
 246: such thing
 247: You can't do that to more than o
 248: /secure/cmds/admins/encre
 249: /secure/cmds/admins/decre
 250: /secure/daemon/reload
 251: /log/reset
 252: Reset 
 253:  occurred at: 
 254: clean_up
 255: reset
 256: 	
 257:  objects reclaimed, 
 258:  objects reset, 
 259:  objects cleaned.\n
 260: is_living

;;;  *** Disassembly ***

;; Function create
0000: aggregate 0
0003: (void)assign_local LV3
0005: short_string "/secure/tmp/opc"
0007: (void)assign_local LV4
0009: local LV4
000b: opcprof 314
000d: push local 4, string 31
0011: + 
0012: simul_efun "file_exists" 1
0016: branch_when_zero 0056 (006d)
0019: push local 4, string 31
001d: + 
001e: simul_efun "read_file" 1
0022: (void)assign_local LV2
0024: local LV2
0026: branch_when_zero 000a (0031)
0029: push local 2, string 32
002d: explode 
002f: (void)assign_local LV3
0031: local LV3
0033: sizeof 
0034: branch_when_zero 0038 (006d)
0037: local LV3
0039: foreach (array) local 5
003c: branch 002d (006a)
003f: push local 5, string 33
0043: sscanf 2
0045: local_lvalue LV0
0047: (void)assign 
0048: local_lvalue LV1
004a: (void)assign 
004b: byte 2
004d: branch_ne 001c (006a)
0050: push number 0, number 0, local 0
0055: nn_range 
0056: short_string "_"
0058: branch_ne 0009 (0062)
005b: push number 1, local 0
005f: ne_range 
0060: (void)assign_local LV0
0062: local LV0
0064: aggregate 1
0067: global_lvalue efuns_arr
0069: (void)+= 
006a: next_foreach 002c (003f)
006d: const0 
006e: global_lvalue Unguarded
0070: (void)assign 
0071: const0 
0072: global_lvalue NewPlayer
0074: (void)assign 
0075: const0 
0076: global_lvalue PlayerName
0078: (void)assign 
0079: const1 
007a: global_lvalue ResetNumber
007c: (void)assign 
007d: short_string "/secure/sefun/native_version."
007f: simul_efun "file_exists" 1
0083: branch_when_non_zero 0009 (008d)
0086: push string 36, string 35
008a: cp 
008c: pop 
008d: call new_read         5
0091: pop 
0092: call new_write        6
0096: pop 
0097: call new_groups       7
009b: pop 
009c: const0 
009d: (::) <local_fun> eventReset
00a1: efun8 
00a2: exit_foreach 
00a3: branch_eq 0207 (02ab)
00a6: clear_bit 1

;; Function new_read
00a9: aggregate_assoc 0
00ac: (void)assign_local LV0
00ae: push string 37, local 0
00b2: call load_access     25
00b6: pop 
00b7: local LV0
00b9: global_lvalue ReadAccess
00bb: (void)assign 
00bc: return_zero 

;; Function new_write
00bd: aggregate_assoc 0
00c0: (void)assign_local LV0
00c2: push string 38, local 0
00c6: call load_access     25
00ca: pop 
00cb: local LV0
00cd: global_lvalue WriteAccess
00cf: (void)assign 
00d0: return_zero 

;; Function new_groups
00d1: aggregate_assoc 0
00d4: (void)assign_local LV0
00d6: push string 39, local 0
00da: call load_access     25
00de: pop 
00df: local LV0
00e1: global_lvalue Groups
00e3: (void)assign 
00e4: return_zero 

;; Function load_access
00e5: local LV0
00e7: simul_efun "read_file" 1
00eb: local_lvalue LV3
00ed: assign 
00ee: branch_when_non_zero 0008 (00f7)
00f1: push string 40, local 0
00f5: + 
00f6: error 
00f7: push local 3, string 32
00fb: explode 
00fd: (::) <anonymous function, 1 args, 0 locals, ends at 0123>
Code:
0103: local LV0
0105: ! 
0106: || 000b (0112)
0109: local LV0
010b: simul_efun "trim" 1
010f: short_string ""
0111: == 
0112: branch_when_zero 0003 (0116)
0115: return_zero 
0116: push number 0, local 0
011a: index 
011b: byte 35
011d: branch_ne 0003 (0121)
0120: return_zero 
0121: const1 
0122: return 
0123: return_zero 
0124: filter 2
0127: (void)assign_local LV2
0129: local LV2
012b: foreach (array) local 4
012e: branch 006f (019e)
0131: short_string ""
0133: (void)assign_local LV6
0135: push local 4, string 42
0139: sscanf 2
013b: local_lvalue LV5
013d: (void)assign 
013e: local_lvalue LV6
0140: (void)assign 
0141: byte 2
0143: branch_eq 000b (014f)
0146: push string 43, local 0
014a: + 
014b: short_string "."
014d: + 
014e: error 
014f: local LV6
0151: simul_efun "trim" 1
0155: (void)assign_local LV6
0157: push local 5, number 3
015b: simul_efun "last" 2
015f: short_string "/*/"
0161: branch_ne 0030 (0192)
0164: push local 5, number 2
0168: simul_efun "truncate" 2
016c: (void)assign_local LV7
016e: push local 7, number 0
0172: get_dir 
0174: foreach (array) local 8
0177: branch 0014 (018c)
017a: push local 6, string 47
017e: explode 
0180: push local 7, local 8
0184: + 
0185: short_string "/"
0187: + 
0188: local_lvalue LV1
018a: index_lvalue 
018b: (void)assign 
018c: next_foreach 0013 (017a)
018f: branch 000e (019e)
0192: push local 6, string 47
0196: explode 
0198: local LV5
019a: local_lvalue LV1
019c: index_lvalue 
019d: (void)assign 
019e: next_foreach 006e (0131)
01a1: return_zero 

;; Function flag
01a2: const0 
01a3: previous_object 
01a4: branch_when_zero 0003 (01a8)
01a7: return_zero 
01a8: push local 0, string 48
01ac: sscanf 1
01ae: local_lvalue LV4
01b0: (void)assign 
01b1: const1 
01b2: branch_ne 0010 (01c3)
01b5: const0 
01b6: (void)assign_local LV3
01b8: branch 0004 (01bd)
01bb: loop_incr LV3
01bd: loop_cond_local LV3 < LV4 bbranch_when_non_zero 0005 (01bb)
01c2: return_zero 
01c3: push local 0, string 49
01c7: sscanf 2
01c9: local_lvalue LV1
01cb: (void)assign 
01cc: local_lvalue LV2
01ce: (void)assign 
01cf: branch_when_zero 0014 (01e4)
01d2: push string 50, local 1, local 2
01d7: call_other 2
01da: + 
01db: short_string " back.\n"
01dd: + 
01de: simul_efun "write" 1
01e2: pop 
01e3: return_zero 
01e4: short_string "Master: unknown flag.\n"
01e6: simul_efun "write" 1
01ea: pop 
01eb: return_zero 

;; Function epilog
01ec: short_string "/secure/cfg/preload.cfg"
01ee: simul_efun "read_file" 1
01f2: local_lvalue LV3
01f4: assign 
01f5: branch_when_non_zero 0006 (01fc)
01f8: aggregate 0
01fb: return 
01fc: push local 3, string 32
0200: explode 
0202: local_lvalue LV1
0204: assign 
0205: sizeof 
0206: (void)assign_local LV0
0208: aggregate 0
020b: (void)assign_local LV2
020d: branch 0031 (023f)
0210: push local 0, local 1
0214: index 
0215: ! 
0216: || 0017 (022e)
0219: push local 0, local 1
021d: index 
021e: short_string ""
0220: == 
0221: || 000c (022e)
0224: push number 0, local 0, local 1
0229: index 
022a: index 
022b: byte 35
022d: == 
022e: branch_when_zero 0005 (0234)
0231: branch 000d (023f)
0234: push local 0, local 1
0238: index 
0239: aggregate 1
023c: local_lvalue LV2
023e: (void)+= 
023f: while_dec LV0--, branch 0031 (020f)
0243: local LV2
0245: return 
0246: return_zero 

;; Function privs_file
0247: const0 
0248: (void)assign_local LV1
024a: push local 0, string 54, number 0
024f: strsrch 
0251: branch_when_non_zero 000f (0261)
0254: push local 0, string 55
0258: sscanf 1
025a: local_lvalue LV1
025c: (void)assign 
025d: pop 
025e: branch 0016 (0275)
0261: push local 0, string 56, number 0
0266: strsrch 
0268: branch_when_non_zero 000c (0275)
026b: push local 0, string 57
026f: sscanf 1
0271: local_lvalue LV1
0273: (void)assign 
0274: pop 
0275: local LV1
0277: branch_when_zero 005a (02d2)
027a: push local 0, string 58, number 0, number 0, local 1
0281: nn_range 
0282: + 
0283: short_string "/"
0285: + 
0286: local LV1
0288: + 
0289: branch_ne 002f (02b9)
028c: local LV1
028e: (void)assign_local LV2
0290: global Groups
0292: keys 
0293: foreach (array) local 3
0296: branch 0019 (02b0)
0299: push local 1, local 3, global 7
029e: index 
029f: member_array 232
02a1: -byte -1
02a3: branch_eq 000c (02b0)
02a6: push local 2, string 47
02aa: + 
02ab: local LV3
02ad: + 
02ae: (void)assign_local LV2
02b0: next_foreach 0018 (0299)
02b3: local LV2
02b5: return 
02b6: branch 001b (02d2)
02b9: push local 0, string 59, number 0, number 0, local 1
02c0: nn_range 
02c1: + 
02c2: short_string "/"
02c4: + 
02c5: local LV1
02c7: + 
02c8: branch_ne 0008 (02d1)
02cb: local LV1
02cd: return 
02ce: branch 0003 (02d2)
02d1: return_zero 
02d2: local LV0
02d4: simul_efun "file_privs" 1
02d8: return 
02d9: return_zero 

;; Function preload
02da: push local 0, string 60
02de: + 
02df: simul_efun "file_exists" 1
02e3: branch_when_non_zero 0003 (02e7)
02e6: return_zero 
02e7: time 
02e9: (void)assign_local LV2
02eb: push string 61, local 0
02ef: + 
02f0: short_string "..."
02f2: + 
02f3: simul_efun "write" 1
02f7: pop 
02f8: catch 000b
02fb: push local 0, string 63
02ff: call_other 2
0302: pop 
0303: end_catch 
0304: local_lvalue LV1
0306: assign 
0307: branch_when_zero 0018 (0320)
030a: short_string "\nGot error "
030c: local LV1
030e: + 
030f: short_string " when loading "
0311: + 
0312: local LV0
0314: + 
0315: short_string ".\n"
0317: + 
0318: simul_efun "write" 1
031c: pop 
031d: branch 0022 (0340)
0320: time 
0322: local LV2
0324: subtract 
0325: (void)assign_local LV2
0327: short_string "("
0329: push local 2, number 60
032d: / 
032e: + 
032f: short_string "."
0331: + 
0332: push local 2, number 60
0336: % 
0337: + 
0338: short_string ")\n"
033a: + 
033b: simul_efun "write" 1
033f: pop 
0340: return_zero 

;; Function valid_write
0341: local LV1
0343: master 
0345: branch_ne 0004 (034a)
0348: const1 
0349: return 
034a: push global 9, local 0
034e: match_path 
0350: (void)assign_local LV3
0352: push local 1, local 2, local 0, local 3
0358: short_string "write"
035a: call check_access    31
035e: return 
035f: return_zero 

;; Function valid_read
0360: local LV1
0362: master 
0364: branch_ne 0004 (0369)
0367: const1 
0368: return 
0369: push global 8, local 0
036d: match_path 
036f: (void)assign_local LV3
0371: push local 1, local 2, local 0, local 3
0377: short_string "read"
0379: call check_access    31
037d: return 
037e: return_zero 

;; Function valid_link
037f: const0 
0380: previous_object 
0381: (void)assign_local LV2
0383: local LV2
0385: interactive 
0386: branch_when_non_zero 0006 (038d)
0389: const1 
038a: previous_object 
038b: (void)assign_local LV2
038d: local LV2
038f: interactive 
0390: branch_when_non_zero 0007 (0398)
0393: byte 2
0395: previous_object 
0396: (void)assign_local LV2
0398: local LV2
039a: interactive 
039b: branch_when_non_zero 0007 (03a3)
039e: byte 3
03a0: previous_object 
03a1: (void)assign_local LV2
03a3: local LV2
03a5: interactive 
03a6: branch_when_non_zero 0003 (03aa)
03a9: return_zero 
03aa: local LV2
03ac: short_string "GetForced"
03ae: call_other 2
03b1: branch_when_zero 000c (03be)
03b4: local LV2
03b6: short_string "Someone's fucking with you."
03b8: simul_efun "tell_player" 2
03bc: pop 
03bd: return_zero 
03be: push local 0, local 2
03c2: short_string "link"
03c4: call valid_write     29
03c8: branch_when_non_zero 0003 (03cc)
03cb: return_zero 
03cc: push local 1, local 2
03d0: short_string "link"
03d2: call valid_write     29
03d6: branch_when_non_zero 0003 (03da)
03d9: return_zero 
03da: const1 
03db: return 
03dc: return_zero 

;; Function valid_apply
03dd: const1 
03de: previous_object 
03df: push number 0, number 0
03e3: previous_object 
03e4: local LV0
03e6: short_string "apply"
03e8: call check_access    31
03ec: return 

;; Function check_access
03ed: local LV2
03ef: objectp 
03f0: branch_when_zero 000a (03fb)
03f3: local LV2
03f5: simul_efun "base_name" 1
03f9: (void)assign_local LV2
03fb: local LV3
03fd: && 0010 (040e)
0400: local LV3
0402: sizeof 
0403: && 000a (040e)
0406: push number 0, local 3
040a: index 
040b: short_string "all"
040d: == 
040e: branch_when_zero 0004 (0413)
0411: const1 
0412: return 
0413: push global 1, local 0
0417: branch_ne 008f (04a7)
041a: local LV0
041c: simul_efun "base_name" 1
0420: local_lvalue LV9
0422: assign 
0423: short_string "/lib/player"
0425: == 
0426: || 0007 (042e)
0429: local LV9
042b: short_string "/lib/creator"
042d: == 
042e: branch_when_zero 005b (048a)
0431: global PlayerName
0433: branch_when_non_zero 0014 (0448)
0436: local LV0
0438: aggregate 1
043b: -byte -1
043d: previous_object 
043e: + 
043f: local_lvalue LV5
0441: assign 
0442: sizeof 
0443: (void)assign_local LV8
0445: branch 0041 (0487)
0448: push local 2, string 59, number 0, number 0, global 3
044f: nn_range 
0450: + 
0451: short_string "/"
0453: + 
0454: global PlayerName
0456: + 
0457: short_string ".o"
0459: + 
045a: branch_ne 0007 (0462)
045d: const1 
045e: return 
045f: branch 0027 (0487)
0462: push local 2, string 58, number 0, number 0, global 3
0469: nn_range 
046a: + 
046b: short_string "/"
046d: + 
046e: global PlayerName
0470: + 
0471: short_string ".o"
0473: + 
0474: branch_ne 0007 (047c)
0477: const1 
0478: return 
0479: branch 000d (0487)
047c: local LV0
047e: aggregate 1
0481: local_lvalue LV5
0483: assign 
0484: sizeof 
0485: (void)assign_local LV8
0487: branch 001c (04a4)
048a: local LV9
048c: short_string ".o"
048e: + 
048f: local LV2
0491: branch_ne 0007 (0499)
0494: const1 
0495: return 
0496: branch 000d (04a4)
0499: local LV0
049b: aggregate 1
049e: local_lvalue LV5
04a0: assign 
04a1: sizeof 
04a2: (void)assign_local LV8
04a4: branch 0042 (04e7)
04a7: global Unguarded
04a9: && 000b (04b5)
04ac: local LV0
04ae: simul_efun "base_name" 1
04b2: short_string "/secure/sefun/sefun"
04b4: == 
04b5: branch_when_zero 0022 (04d8)
04b8: push global 1, number 1
04bc: previous_object 
04bd: branch_ne 000c (04ca)
04c0: const1 
04c1: previous_object 
04c2: aggregate 1
04c5: (void)assign_local LV5
04c7: branch 000d (04d5)
04ca: local LV0
04cc: aggregate 1
04cf: -byte -1
04d1: previous_object 
04d2: + 
04d3: (void)assign_local LV5
04d5: branch 0011 (04e7)
04d8: -byte -1
04da: previous_object 
04db: local LV0
04dd: aggregate 1
04e0: + 
04e1: local_lvalue LV5
04e3: assign 
04e4: sizeof 
04e5: (void)assign_local LV8
04e7: branch 00ea (05d2)
04ea: push local 8, local 5
04ee: index 
04ef: ! 
04f0: || 000a (04fb)
04f3: push local 8, local 5
04f7: index 
04f8: this_object 
04fa: == 
04fb: branch_when_zero 0005 (0501)
04fe: branch 00d3 (05d2)
0501: push local 8, local 5
0505: index 
0506: file_name 
0507: short_string "/secure/sefun/sefun"
0509: branch_ne 0005 (050f)
050c: branch 00c5 (05d2)
050f: push local 8, local 5
0513: index 
0514: query_privs 
0515: local_lvalue LV7
0517: assign 
0518: branch_when_non_zero 0003 (051c)
051b: return_zero 
051c: local LV3
051e: ! 
051f: && 0007 (0527)
0522: local LV4
0524: short_string "read"
0526: == 
0527: branch_when_zero 0005 (052d)
052a: branch 00a7 (05d2)
052d: push local 7, string 47
0531: explode 
0533: (void)assign_local LV6
0535: short_string "SECURE"
0537: local LV6
0539: member_array 232
053b: -byte -1
053d: branch_eq 0005 (0543)
0540: branch 0091 (05d2)
0543: local LV2
0545: stringp 
0546: && 000f (0556)
0549: local LV2
054b: simul_efun "file_privs" 1
054f: local LV6
0551: member_array 232
0553: -byte -1
0555: != 
0556: branch_when_zero 0005 (055c)
0559: branch 0078 (05d2)
055c: local LV3
055e: ! 
055f: && 0007 (0567)
0562: local LV4
0564: short_string "write"
0566: == 
0567: branch_when_zero 0023 (058b)
056a: push local 8, local 5
056e: index 
056f: userp 
0570: && 0010 (0581)
0573: push local 8, local 5
0577: index 
0578: push local 1, local 2, local 4
057d: call check_user      32
0581: branch_when_zero 0008 (058a)
0584: branch 004d (05d2)
0587: branch 0003 (058b)
058a: return_zero 
058b: push local 6, local 3
058f: & 
0590: sizeof 
0591: branch_when_zero 0005 (0597)
0594: branch 003d (05d2)
0597: push local 8, local 5
059b: index 
059c: userp 
059d: && 0010 (05ae)
05a0: push local 8, local 5
05a4: index 
05a5: push local 1, local 2, local 4
05aa: call check_user      32
05ae: branch_when_zero 0005 (05b4)
05b1: branch 0020 (05d2)
05b4: push local 8, local 5
05b8: index 
05b9: userp 
05ba: && 0010 (05cb)
05bd: push local 8, local 5
05c1: index 
05c2: push local 1, local 2, local 4
05c7: call check_domain    33
05cb: branch_when_zero 0005 (05d1)
05ce: branch 0003 (05d2)
05d1: return_zero 
05d2: while_dec LV8--, branch 00ea (04e9)
05d6: const1 
05d7: return 
05d8: return_zero 

;; Function check_user
05d9: local LV0
05db: simul_efun "creatorp" 1
05df: branch_when_non_zero 0029 (0609)
05e2: local LV0
05e4: simul_efun "base_name" 1
05e8: short_string "/"
05ea: simul_efun "last_string_element" 2
05ee: (void)assign_local LV4
05f0: local LV2
05f2: short_string "/estates/"
05f4: push number 0, number 0, local 4
05f9: nn_range 
05fa: + 
05fb: short_string "/"
05fd: + 
05fe: local LV4
0600: + 
0601: const0 
0602: strsrch 
0604: branch_when_non_zero 0004 (0609)
0607: const1 
0608: return 
0609: local LV2
060b: short_string "/realms/%s"
060d: sscanf 1
060f: local_lvalue LV4
0611: (void)assign 
0612: branch_when_non_zero 0003 (0616)
0615: return_zero 
0616: local LV4
0618: short_string "%s/%*s"
061a: sscanf 1
061c: local_lvalue LV5
061e: (void)assign 
061f: branch_when_zero 0006 (0626)
0622: local LV5
0624: (void)assign_local LV4
0626: local LV4
0628: simul_efun "user_path" 1
062c: short_string "adm/access"
062e: + 
062f: (void)assign_local LV4
0631: push local 4, string 60
0635: + 
0636: file_size 
0637: const0 
0638: branch_ge 0003 (063c)
063b: return_zero 
063c: catch 0012
063f: local LV4
0641: short_string "check_access"
0643: push local 0, local 1, local 2, local 3
0649: call_other 6
064c: (void)assign_local LV6
064e: end_catch 
064f: pop 
0650: local LV6
0652: return 
0653: return_zero 

;; Function check_domain
0654: local LV2
0656: short_string "/domains/%s/%*s"
0658: sscanf 1
065a: local_lvalue LV4
065c: (void)assign 
065d: branch_when_non_zero 0003 (0661)
0660: return_zero 
0661: short_string "/domains/"
0663: local LV4
0665: + 
0666: short_string "/adm/access"
0668: + 
0669: (void)assign_local LV4
066b: push local 4, string 60
066f: + 
0670: file_size 
0671: const0 
0672: branch_ge 0003 (0676)
0675: return_zero 
0676: catch 0012
0679: local LV4
067b: short_string "check_access"
067d: push local 0, local 1, local 2, local 3
0683: call_other 6
0686: (void)assign_local LV5
0688: end_catch 
0689: pop 
068a: local LV5
068c: return 
068d: return_zero 

;; Function connect
068e: local LV0
0690: simul_efun "true" 1
0694: pop 
0695: short_string "/secure/lib/connect"
0697: (void)assign_local LV3
0699: catch 000a
069c: local LV3
069e: new 1
06a1: (void)assign_local LV1
06a3: end_catch 
06a4: local_lvalue LV2
06a6: assign 
06a7: branch_when_zero 0017 (06bf)
06aa: short_string "It looks like someone is work"
06ac: simul_efun "write" 1
06b0: pop 
06b1: local LV2
06b3: simul_efun "write" 1
06b7: pop 
06b8: local LV1
06ba: simul_efun "destruct" 1
06be: pop 
06bf: local LV1
06c1: return 
06c2: return_zero 

;; Function compile_object
06c3: local LV0
06c5: short_string "/realms/%s/%*s"
06c7: sscanf 1
06c9: local_lvalue LV1
06cb: (void)assign 
06cc: branch_when_zero 0012 (06df)
06cf: short_string "%svirtual/server"
06d1: local LV1
06d3: simul_efun "user_path" 1
06d7: sprintf 2
06da: (void)assign_local LV2
06dc: branch 00ff (07dc)
06df: local LV0
06e1: short_string "/domains/%s/%*s"
06e3: sscanf 1
06e5: local_lvalue LV1
06e7: (void)assign 
06e8: branch_when_zero 0010 (06f9)
06eb: short_string "%s/%s/virtual/server"
06ed: short_string "/domains"
06ef: local LV1
06f1: sprintf 3
06f4: (void)assign_local LV2
06f6: branch 00e5 (07dc)
06f9: local LV0
06fb: short_string "/estates"
06fd: const0 
06fe: strsrch 
0700: branch_when_non_zero 000e (070f)
0703: short_string "%s/virtual/server"
0705: short_string "/estates"
0707: sprintf 2
070a: (void)assign_local LV2
070c: branch 00cf (07dc)
070f: push local 0, string 55
0713: sscanf 1
0715: local_lvalue LV1
0717: (void)assign 
0718: branch_when_zero 0073 (078c)
071b: global NewPlayer
071d: branch_when_non_zero 0003 (0721)
0720: return_zero 
0721: global NewPlayer
0723: short_string "GetKeyName"
0725: call_other 2
0728: local LV1
072a: branch_eq 0003 (072e)
072d: return_zero 
072e: local LV1
0730: global_lvalue PlayerName
0732: (void)assign 
0733: short_string "/lib/player"
0735: new 1
0738: (void)assign_local LV5
073a: local LV0
073c: short_string ".o"
073e: + 
073f: file_size 
0740: const0 
0741: branch_le 000f (0751)
0744: local LV5
0746: short_string "restore_player"
0748: local LV1
074a: call_other 3
074d: pop 
074e: branch 0029 (0778)
0751: short_string "/secure/save/players"
0753: file_size 
0754: -byte -2
0756: branch_eq 0009 (0760)
0759: short_string "/secure/save/players"
075b: mkdir 
075c: pop 
075d: branch 001a (0778)
0760: push string 59, number 0, number 0, local 1
0766: nn_range 
0767: + 
0768: file_size 
0769: -byte -2
076b: branch_eq 000c (0778)
076e: push string 59, number 0, number 0, local 1
0774: nn_range 
0775: + 
0776: mkdir 
0777: pop 
0778: local LV5
077a: short_string "SetKeyName"
077c: local LV1
077e: call_other 3
0781: pop 
0782: const0 
0783: global_lvalue PlayerName
0785: (void)assign 
0786: local LV5
0788: return 
0789: branch 0052 (07dc)
078c: push local 0, string 57
0790: sscanf 1
0792: local_lvalue LV1
0794: (void)assign 
0795: branch_when_zero 0046 (07dc)
0798: global NewPlayer
079a: branch_when_non_zero 0003 (079e)
079d: return_zero 
079e: global NewPlayer
07a0: short_string "GetKeyName"
07a2: call_other 2
07a5: local LV1
07a7: branch_eq 0003 (07ab)
07aa: return_zero 
07ab: local LV1
07ad: global_lvalue PlayerName
07af: (void)assign 
07b0: short_string "/lib/creator"
07b2: new 1
07b5: (void)assign_local LV5
07b7: local LV0
07b9: short_string ".o"
07bb: + 
07bc: file_size 
07bd: const0 
07be: branch_le 000c (07cb)
07c1: local LV5
07c3: short_string "restore_player"
07c5: local LV1
07c7: call_other 3
07ca: pop 
07cb: local LV5
07cd: short_string "SetKeyName"
07cf: local LV1
07d1: call_other 3
07d4: pop 
07d5: const0 
07d6: global_lvalue PlayerName
07d8: (void)assign 
07d9: local LV5
07db: return 
07dc: push local 2, string 60
07e0: + 
07e1: file_size 
07e2: const0 
07e3: branch_ge 0063 (0847)
07e6: local LV0
07e8: short_string "%s.%s"
07ea: sscanf 2
07ec: local_lvalue LV3
07ee: (void)assign 
07ef: local_lvalue LV4
07f1: (void)assign 
07f2: byte 2
07f4: branch_eq 0003 (07f8)
07f7: return_zero 
07f8: local LV0
07fa: short_string "/realms/%s/%*s"
07fc: sscanf 1
07fe: local_lvalue LV1
0800: (void)assign 
0801: branch_when_zero 0014 (0816)
0804: short_string "%svirtual/%s_server"
0806: local LV1
0808: simul_efun "user_path" 1
080c: local LV4
080e: sprintf 3
0811: (void)assign_local LV2
0813: branch 001b (082f)
0816: local LV0
0818: short_string "/domains/%s/%*s"
081a: sscanf 1
081c: local_lvalue LV1
081e: (void)assign 
081f: branch_when_zero 000f (082f)
0822: short_string "%s/%s/virtual/%s_server"
0824: short_string "/domains"
0826: push local 1, local 4
082a: sprintf 4
082d: (void)assign_local LV2
082f: push local 2, string 60
0833: + 
0834: file_size 
0835: const0 
0836: branch_ge 0006 (083d)
0839: return_zero 
083a: branch 000c (0847)
083d: local LV2
083f: short_string "compile_object"
0841: local LV3
0843: call_other 3
0846: return 
0847: local LV2
0849: short_string "compile_object"
084b: local LV0
084d: call_other 3
0850: return 
0851: return_zero 

;; Function crash
0852: simul_efun "get_stack" 0
0856: (void)assign_local LV1
0858: -byte -1
085a: previous_object 
085b: simul_efun "identify" 1
085f: (void)assign_local LV2
0861: short_string "/log/crashes"
0863: simul_efun "mud_name" 0
0867: short_string " crashed "
0869: + 
086a: time 
086c: ctime 277
086e: + 
086f: short_string " with error "
0871: + 
0872: local LV0
0874: + 
0875: short_string ".\n"
0877: + 
0878: local LV1
087a: + 
087b: short_string "\n"
087d: + 
087e: local LV2
0880: + 
0881: short_string "\n---\n"
0883: + 
0884: write_file 264
0886: pop 
0887: short_string "system"
0889: short_string "Reality implosion!!!  Everyon"
088b: simul_efun "users" 0
088f: message 252
0891: short_string "system"
0893: short_string "You are being forced to quit."
0895: simul_efun "users" 0
0899: message 252
089b: simul_efun "users" 0
089f: short_string "cmdQuit"
08a1: call_other 2
08a4: pop 
08a5: return_zero 

;; Function valid_bind
08a6: push local 1, local 2
08aa: simul_efun "true" 2
08ae: pop 
08af: local LV0
08b1: master 
08b3: branch_ne 0004 (08b8)
08b6: const1 
08b7: return 
08b8: short_string "SECURE"
08ba: local LV0
08bc: query_privs 
08bd: short_string ":"
08bf: explode 
08c1: member_array 232
08c3: -byte -1
08c5: branch_eq 0004 (08ca)
08c8: const1 
08c9: return 
08ca: return_zero 
08cb: return_zero 

;; Function valid_hide
08cc: local LV0
08ce: objectp 
08cf: branch_when_non_zero 0003 (08d3)
08d2: return_zero 
08d3: local LV0
08d5: environment 234
08d7: && 000a (08e2)
08da: local LV0
08dc: environment 234
08de: simul_efun "hiddenp" 1
08e2: branch_when_zero 0004 (08e7)
08e5: const1 
08e6: return 
08e7: local LV0
08e9: query_privs 
08ea: local_lvalue LV1
08ec: assign 
08ed: branch_when_non_zero 0006 (08f4)
08f0: return_zero 
08f1: branch 0010 (0902)
08f4: short_string "SECURE"
08f6: push local 1, string 47
08fa: explode 
08fc: member_array 232
08fe: -byte -1
0900: != 
0901: return 
0902: return_zero 

;; Function valid_override
0903: push local 0, local 1
0907: simul_efun "true" 2
090b: pop 
090c: local LV0
090e: short_string "/secure/sefun/sefun"
0910: == 
0911: return 

;; Function valid_save_binary
0912: local LV0
0914: simul_efun "true" 1
0918: return 

;; Function valid_shadow
0919: const0 
091a: previous_object 
091b: (void)assign_local LV1
091d: local LV0
091f: simul_efun "true" 1
0923: pop 
0924: local LV1
0926: virtualp 
0927: ! 
0928: && 000b (0934)
092b: local LV1
092d: file_name 
092e: short_string "/shadows"
0930: const0 
0931: strsrch 
0933: ! 
0934: return 
0935: return_zero 

;; Function valid_object
0936: local LV0
0938: file_name 
0939: (void)assign_local LV1
093b: local LV0
093d: simul_efun "base_name" 1
0941: short_string ".c"
0943: + 
0944: simul_efun "read_file" 1
0948: (void)assign_local LV2
094a: local LV2
094c: branch_when_non_zero 0006 (0953)
094f: short_string ""
0951: (void)assign_local LV2
0953: local LV2
0955: short_string "parse_add_rule"
0957: const0 
0958: strsrch 
095a: -byte -1
095c: != 
095d: || 000c (096a)
0960: local LV2
0962: short_string "SetRules"
0964: const0 
0965: strsrch 
0967: -byte -1
0969: != 
096a: branch_when_zero 001b (0986)
096d: local LV1
096f: short_string "/%s/%*s"
0971: sscanf 1
0973: local_lvalue LV3
0975: (void)assign 
0976: branch_when_non_zero 0003 (097a)
0979: return_zero 
097a: push local 3, global 10
097e: member_array 232
0980: -byte -1
0982: branch_ne 0003 (0986)
0985: return_zero 
0986: local LV1
0988: short_string "/tmp"
098a: const0 
098b: strsrch 
098d: branch_when_non_zero 0006 (0994)
0990: return_zero 
0991: branch 002e (09c0)
0994: local LV1
0996: short_string "/ftp"
0998: const0 
0999: strsrch 
099b: branch_when_non_zero 0006 (09a2)
099e: return_zero 
099f: branch 0020 (09c0)
09a2: local LV1
09a4: short_string "/log"
09a6: const0 
09a7: strsrch 
09a9: branch_when_non_zero 0006 (09b0)
09ac: return_zero 
09ad: branch 0012 (09c0)
09b0: local LV1
09b2: short_string "/secure/save"
09b4: const0 
09b5: strsrch 
09b7: branch_when_non_zero 0006 (09be)
09ba: return_zero 
09bb: branch 0004 (09c0)
09be: const1 
09bf: return 
09c0: return_zero 

;; Function valid_socket
09c1: local LV2
09c3: && 0008 (09cc)
09c6: local LV2
09c8: sizeof 
09c9: byte 4
09cb: == 
09cc: branch_when_zero 0040 (0a0d)
09cf: push number 1, local 2
09d3: index 
09d4: (void)assign_local LV0
09d6: push number 3, local 2
09da: index 
09db: (void)assign_local LV4
09dd: local LV4
09df: efun8 
09e0: sscanf 66
09e2: == 
09e3: && 000b (09ef)
09e6: local LV0
09e8: short_string "/secure/daemon/admin"
09ea: simul_efun "find_object" 1
09ee: != 
09ef: branch_when_zero 0003 (09f3)
09f2: return_zero 
09f3: local LV4
09f5: simul_efun "query_host_port" 0
09f9: -byte -10
09fb: + 
09fc: == 
09fd: && 000b (0a09)
0a00: local LV0
0a02: short_string "/secure/daemon/remote"
0a04: simul_efun "find_object" 1
0a08: != 
0a09: branch_when_zero 0003 (0a0d)
0a0c: return_zero 
0a0d: -byte -1
0a0f: previous_object 
0a10: local_lvalue LV3
0a12: assign 
0a13: sizeof 
0a14: (void)assign_local LV6
0a16: branch 003d (0a54)
0a19: push local 6, local 3
0a1d: index 
0a1e: branch_when_non_zero 0005 (0a24)
0a21: branch 0032 (0a54)
0a24: push local 6, local 3
0a28: index 
0a29: userp 
0a2a: branch_when_zero 0005 (0a30)
0a2d: branch 0026 (0a54)
0a30: push local 6, local 3
0a34: index 
0a35: query_privs 
0a36: local_lvalue LV5
0a38: assign 
0a39: branch_when_non_zero 0003 (0a3d)
0a3c: return_zero 
0a3d: push local 5, string 47
0a41: explode 
0a43: short_string "SECURE"
0a45: short_string "MUDLIBPRIV"
0a47: short_string "CMDS"
0a49: short_string "GENERAL"
0a4b: aggregate 4
0a4e: & 
0a4f: sizeof 
0a50: branch_when_non_zero 0003 (0a54)
0a53: return_zero 
0a54: while_dec LV6--, branch 003d (0a18)
0a58: const1 
0a59: return 
0a5a: return_zero 

;; Function apply_unguarded
0a5b: local LV0
0a5d: ! 
0a5e: || 0006 (0a65)
0a61: local LV0
0a63: functionp 
0a64: ! 
0a65: branch_when_zero 0006 (0a6c)
0a68: short_string "Invalid function passed."
0a6a: error 
0a6b: return_zero 
0a6c: local LV0
0a6e: functionp 
0a6f: byte 32
0a71: & 
0a72: branch_when_zero 0006 (0a79)
0a75: short_string "Function owner dested: invali"
0a77: error 
0a78: return_zero 
0a79: const0 
0a7a: previous_object 
0a7b: simul_efun "base_name" 1
0a7f: short_string "/secure/sefun/sefun"
0a81: branch_eq 0006 (0a88)
0a84: short_string "Illegal unguarded apply."
0a86: error 
0a87: return_zero 
0a88: global Unguarded
0a8a: (void)assign_local LV1
0a8c: const1 
0a8d: previous_object 
0a8e: global_lvalue Unguarded
0a90: (void)assign 
0a91: catch 000a
0a94: local LV0
0a96: evaluate 1
0a99: (void)assign_local LV3
0a9b: end_catch 
0a9c: (void)assign_local LV2
0a9e: local LV1
0aa0: global_lvalue Unguarded
0aa2: (void)assign 
0aa3: local LV2
0aa5: branch_when_zero 0005 (0aab)
0aa8: local LV2
0aaa: error 
0aab: local LV3
0aad: return 
0aae: return_zero 

;; Function error_handler
0aaf: short_string "---\n"
0ab1: simul_efun "timestamp" 0
0ab5: + 
0ab6: short_string "\n"
0ab8: + 
0ab9: local LV0
0abb: call standard_trace    42
0abf: + 
0ac0: (void)assign_local LV2
0ac2: local LV1
0ac4: branch_when_zero 000f (0ad4)
0ac7: short_string "/log/catch"
0ac9: local_lvalue LV3
0acb: assign 
0acc: local LV2
0ace: write_file 264
0ad0: pop 
0ad1: branch 000c (0ade)
0ad4: short_string "/log/runtime"
0ad6: local_lvalue LV3
0ad8: assign 
0ad9: local LV2
0adb: write_file 264
0add: pop 
0ade: const1 
0adf: this_player 
0ae0: && 0008 (0ae9)
0ae3: short_string "/secure/sefun/sefun"
0ae5: simul_efun "find_object" 1
0ae9: branch_when_zero 00ac (0b96)
0aec: const1 
0aed: this_player 
0aee: short_string "SetLastError"
0af0: local LV0
0af2: call_other 3
0af5: pop 
0af6: const1 
0af7: this_player 
0af8: simul_efun "creatorp" 1
0afc: branch_when_zero 0018 (0b15)
0aff: const1 
0b00: this_player 
0b01: short_string "eventPrint"
0b03: local LV2
0b05: short_string "Trace written to "
0b07: + 
0b08: local LV3
0b0a: + 
0b0b: efun8 
0b0c: pop 
0b0d: call_out 231
0b0f: call_other 224
0b11: pop 
0b12: branch 0083 (0b96)
0b15: const1 
0b16: this_player 
0b17: file_name 
0b18: short_string "/secure/lib/connect"
0b1a: const0 
0b1b: strsrch 
0b1d: branch_when_non_zero 0005 (0b23)
0b20: short_string "/log/login"
0b22: return 
0b23: const0 
0b24: this_player 
0b25: short_string "eventPrint"
0b27: short_string "A runtime error occurred."
0b29: call_other 3
0b2c: pop 
0b2d: short_string "/secure/daemon/chat"
0b2f: short_string "eventSendChannel"
0b31: short_string "System"
0b33: short_string "error"
0b35: short_string "A runtime error occurred to "
0b37: const1 
0b38: this_player 
0b39: short_string "GetCapName"
0b3b: call_other 2
0b3e: + 
0b3f: short_string "."
0b41: + 
0b42: call_other 5
0b45: pop 
0b46: short_string "-----\n"
0b48: simul_efun "timestamp" 0
0b4c: + 
0b4d: short_string ": "
0b4f: + 
0b50: const1 
0b51: this_player 
0b52: short_string "GetCapName"
0b54: call_other 2
0b57: + 
0b58: short_string "\n"
0b5a: + 
0b5b: global_lvalue rlog
0b5d: (void)assign 
0b5e: short_string "/secure/cmds/creators/dbxwher"
0b60: simul_efun "load_object" 1
0b64: short_string "cmd"
0b66: const1 
0b67: this_player 
0b68: short_string "GetKeyName"
0b6a: call_other 2
0b6d: call_other 3
0b70: global_lvalue rlog
0b72: (void)+= 
0b73: const0 
0b74: this_player 
0b75: short_string "GetLastError"
0b77: call_other 2
0b7a: simul_efun "flat_map" 1
0b7e: short_string "\n-----\n"
0b80: + 
0b81: global_lvalue rlog
0b83: (void)+= 
0b84: const0 
0b85: (::) <functional, 0 args>
Code:
0b8a: short_string "/log/player_errors"
0b8c: global rlog
0b8e: write_file 264
0b90: return 
0b91: simul_efun "unguarded" 1
0b95: pop 
0b96: return_zero 
0b97: return_zero 

;; Function log_error
0b98: push number 0, local 0
0b9c: index 
0b9d: byte 47
0b9f: branch_eq 0009 (0ba9)
0ba2: push string 46, local 0
0ba6: + 
0ba7: (void)assign_local LV0
0ba9: const0 
0baa: this_player 
0bab: branch_when_non_zero 0029 (0bd5)
0bae: const1 
0baf: call_stack 
0bb0: (void)assign_local LV5
0bb2: short_string "/secure/daemon/web_sessions"
0bb4: simul_efun "load_object" 1
0bb8: (void)assign_local LV6
0bba: local LV6
0bbc: && 000b (0bc8)
0bbf: push local 6, local 5
0bc3: member_array 232
0bc5: -byte -1
0bc7: != 
0bc8: branch_when_zero 000c (0bd5)
0bcb: local LV6
0bcd: short_string "ReceiveErrorReport"
0bcf: local LV1
0bd1: call_other 3
0bd4: pop 
0bd5: local LV0
0bd7: short_string "/realms/%s/%s"
0bd9: sscanf 2
0bdb: local_lvalue LV2
0bdd: (void)assign 
0bde: local_lvalue LV3
0be0: (void)assign 
0be1: byte 2
0be3: != 
0be4: && 0026 (0c0b)
0be7: local LV0
0be9: short_string "/domains/%s/%s"
0beb: sscanf 2
0bed: local_lvalue LV2
0bef: (void)assign 
0bf0: local_lvalue LV3
0bf2: (void)assign 
0bf3: byte 2
0bf5: != 
0bf6: && 0014 (0c0b)
0bf9: local LV0
0bfb: short_string "/estates/%s/%s/%s"
0bfd: sscanf 3
0bff: local_lvalue LV3
0c01: (void)assign 
0c02: local_lvalue LV2
0c04: (void)assign 
0c05: local_lvalue LV4
0c07: (void)assign 
0c08: byte 3
0c0a: != 
0c0b: branch_when_zero 000f (0c1b)
0c0e: local LV0
0c10: short_string "/%s/%s"
0c12: sscanf 2
0c14: local_lvalue LV2
0c16: (void)assign 
0c17: local_lvalue LV3
0c19: (void)assign 
0c1a: pop 
0c1b: local LV2
0c1d: branch_when_non_zero 0006 (0c24)
0c20: short_string "log"
0c22: (void)assign_local LV2
0c24: catch 0015
0c27: short_string "/log/errors/"
0c29: local LV2
0c2b: + 
0c2c: simul_efun "timestamp" 0
0c30: short_string " "
0c32: + 
0c33: local LV1
0c35: + 
0c36: write_file 264
0c38: pop 
0c39: end_catch 
0c3a: pop 
0c3b: local LV1
0c3d: && 000d (0c4b)
0c40: const1 
0c41: this_player 
0c42: && 0008 (0c4b)
0c45: const1 
0c46: this_player 
0c47: simul_efun "builderp" 1
0c4b: branch_when_zero 0010 (0c5c)
0c4e: catch 000c
0c51: const1 
0c52: this_player 
0c53: local LV1
0c55: simul_efun "tell_player" 2
0c59: pop 
0c5a: end_catch 
0c5b: pop 
0c5c: return_zero 

;; Function standard_trace
0c5d: short_string "error"
0c5f: local LV0
0c61: index 
0c62: short_string "Object: "
0c64: + 
0c65: short_string "object"
0c67: local LV0
0c69: index 
0c6a: short_string "program"
0c6c: local LV0
0c6e: index 
0c6f: short_string "file"
0c71: local LV0
0c73: index 
0c74: short_string "line"
0c76: local LV0
0c78: index 
0c79: call trace_line      43
0c7d: + 
0c7e: (void)assign_local LV2
0c80: short_string "\n"
0c82: local_lvalue LV2
0c84: (void)+= 
0c85: short_string "trace"
0c87: local LV0
0c89: index 
0c8a: (void)assign_local LV3
0c8c: local LV3
0c8e: sizeof 
0c8f: (void)assign_local LV5
0c91: const0 
0c92: (void)assign_local LV4
0c94: branch 0047 (0cdc)
0c97: local LV1
0c99: branch_when_zero 000c (0ca6)
0c9c: short_string "#%d: "
0c9e: local LV4
0ca0: sprintf 2
0ca3: local_lvalue LV2
0ca5: (void)+= 
0ca6: short_string "'%s' at %s"
0ca8: short_string "function"
0caa: push local 4, local 3
0cae: index 
0caf: index 
0cb0: short_string "object"
0cb2: push local 4, local 3
0cb6: index 
0cb7: index 
0cb8: short_string "program"
0cba: push local 4, local 3
0cbe: index 
0cbf: index 
0cc0: short_string "file"
0cc2: push local 4, local 3
0cc6: index 
0cc7: index 
0cc8: short_string "line"
0cca: push local 4, local 3
0cce: index 
0ccf: index 
0cd0: call trace_line      43
0cd4: sprintf 3
0cd7: local_lvalue LV2
0cd9: (void)+= 
0cda: loop_incr LV4
0cdc: loop_cond_local LV4 < LV5 bbranch_when_non_zero 0048 (0c97)
0ce1: local LV2
0ce3: return 
0ce4: return_zero 

;; Function trace_line
0ce5: local LV0
0ce7: branch_when_zero 0008 (0cf0)
0cea: local LV0
0cec: file_name 
0ced: branch 0004 (0cf2)
0cf0: short_string "<none>"
0cf2: (void)assign_local LV5
0cf4: local LV5
0cf6: (void)assign_local LV4
0cf8: push local 5, local 1
0cfc: call different       44
0d00: branch_when_zero 000c (0d0d)
0d03: short_string " (%s)"
0d05: local LV1
0d07: sprintf 2
0d0a: local_lvalue LV4
0d0c: (void)+= 
0d0d: push local 2, local 1
0d11: branch_eq 0011 (0d23)
0d14: short_string " at %s:%d\n"
0d16: push local 2, local 3
0d1a: sprintf 3
0d1d: local_lvalue LV4
0d1f: (void)+= 
0d20: branch 000c (0d2d)
0d23: short_string " at line %d\n"
0d25: local LV3
0d27: sprintf 2
0d2a: local_lvalue LV4
0d2c: (void)+= 
0d2d: local LV4
0d2f: return 
0d30: return_zero 

;; Function different
0d31: local LV0
0d33: short_string "%s#%d"
0d35: sscanf 2
0d37: local_lvalue LV0
0d39: (void)assign 
0d3a: local_lvalue LV2
0d3c: (void)assign 
0d3d: pop 
0d3e: short_string ".c"
0d40: local_lvalue LV0
0d42: (void)+= 
0d43: push local 0, local 1
0d47: != 
0d48: && 0009 (0d52)
0d4b: push local 0, string 46, local 1
0d50: + 
0d51: != 
0d52: return 
0d53: return_zero 

;; Function master_log_file
0d54: const0 
0d55: previous_object 
0d56: file_name 
0d57: short_string "/secure/sefun/sefun"
0d59: branch_eq 0003 (0d5d)
0d5c: return_zero 
0d5d: local LV0
0d5f: file_size 
0d60: number 150000
0d65: branch_le 0010 (0d76)
0d68: push local 0, local 0, string 44
0d6d: + 
0d6e: simul_efun "timestamp" 0
0d72: + 
0d73: rename 
0d75: pop 
0d76: push local 0, local 1
0d7a: write_file 264
0d7c: pop 
0d7d: return_zero 

;; Function make_path_absolute
0d7e: const1 
0d7f: this_player 
0d80: short_string "query_cwd"
0d82: call_other 2
0d85: local LV0
0d87: simul_efun "absolute_path" 2
0d8b: return 

;; Function player_exists
0d8c: local LV0
0d8e: branch_when_non_zero 0003 (0d92)
0d91: return_zero 
0d92: push string 59, number 0, number 0, local 0
0d98: nn_range 
0d99: + 
0d9a: short_string "/"
0d9c: + 
0d9d: local LV0
0d9f: + 
0da0: short_string ".o"
0da2: + 
0da3: (void)assign_local LV1
0da5: local LV1
0da7: file_size 
0da8: -byte -1
0daa: branch_le 0004 (0daf)
0dad: const1 
0dae: return 
0daf: push string 58, number 0, number 0, local 0
0db5: nn_range 
0db6: + 
0db7: short_string "/"
0db9: + 
0dba: local LV0
0dbc: + 
0dbd: short_string ".o"
0dbf: + 
0dc0: (void)assign_local LV1
0dc2: local LV1
0dc4: file_size 
0dc5: -byte -1
0dc7: > 
0dc8: return 
0dc9: return_zero 

;; Function domain_file
0dca: local LV0
0dcc: short_string "/domains/%s/%s"
0dce: sscanf 2
0dd0: local_lvalue LV1
0dd2: (void)assign 
0dd3: local_lvalue LV2
0dd5: (void)assign 
0dd6: byte 2
0dd8: branch_ne 0005 (0dde)
0ddb: local LV1
0ddd: return 
0dde: return_zero 

;; Function author_file
0ddf: local LV0
0de1: short_string "/realms/%s/%s"
0de3: sscanf 2
0de5: local_lvalue LV1
0de7: (void)assign 
0de8: local_lvalue LV2
0dea: (void)assign 
0deb: byte 2
0ded: branch_ne 0008 (0df6)
0df0: local LV1
0df2: return 
0df3: branch 0019 (0e0d)
0df6: local LV0
0df8: short_string "/estates/%s/%s/%s"
0dfa: sscanf 3
0dfc: local_lvalue LV2
0dfe: (void)assign 
0dff: local_lvalue LV1
0e01: (void)assign 
0e02: local_lvalue LV3
0e04: (void)assign 
0e05: byte 3
0e07: branch_ne 0005 (0e0d)
0e0a: local LV1
0e0c: return 
0e0d: return_zero 

;; Function slow_shutdown
0e0e: short_string "/log/audit"
0e10: short_string "Armageddon loaded by master: "
0e12: time 
0e14: ctime 277
0e16: + 
0e17: short_string ".\n"
0e19: + 
0e1a: write_file 264
0e1c: pop 
0e1d: short_string "/secure/daemon/events"
0e1f: short_string "eventRebootMud"
0e21: byte 2
0e23: call_other 3
0e26: pop 
0e27: const1 
0e28: return 
0e29: return_zero 

;; Function save_ed_setup
0e2a: local LV1
0e2c: intp 
0e2d: branch_when_non_zero 0003 (0e31)
0e30: return_zero 
0e31: local LV0
0e33: short_string "GetKeyName"
0e35: call_other 2
0e38: simul_efun "user_path" 1
0e3c: short_string ".edrc"
0e3e: + 
0e3f: local_lvalue LV2
0e41: assign 
0e42: rm 
0e43: pop 
0e44: push local 2, local 1, string 41
0e49: + 
0e4a: write_file 264
0e4c: return 
0e4d: return_zero 

;; Function retrieve_ed_setup
0e4e: local LV0
0e50: short_string "GetKeyName"
0e52: call_other 2
0e55: simul_efun "user_path" 1
0e59: short_string ".edrc"
0e5b: + 
0e5c: (void)assign_local LV1
0e5e: local LV1
0e60: simul_efun "file_exists" 1
0e64: branch_when_non_zero 0003 (0e68)
0e67: return_zero 
0e68: local LV1
0e6a: simul_efun "read_file" 1
0e6e: to_int 
0e6f: return 
0e70: return_zero 

;; Function get_save_file_name
0e71: const1 
0e72: this_player 
0e73: branch_when_non_zero 0005 (0e79)
0e76: short_string "/tmp/.dead.edit"
0e78: return 
0e79: const1 
0e7a: this_player 
0e7b: short_string "GetKeyName"
0e7d: call_other 2
0e80: (void)assign_local LV0
0e82: local LV0
0e84: ! 
0e85: || 0006 (0e8c)
0e88: local LV0
0e8a: stringp 
0e8b: ! 
0e8c: branch_when_zero 0005 (0e92)
0e8f: short_string "/tmp/.dead.edit"
0e91: return 
0e92: local LV0
0e94: simul_efun "user_path" 1
0e98: file_size 
0e99: -byte -2
0e9b: branch_ne 000f (0eab)
0e9e: local LV0
0ea0: simul_efun "user_path" 1
0ea4: short_string "dead.edit"
0ea6: + 
0ea7: return 
0ea8: branch 000b (0eb4)
0eab: short_string "/tmp/"
0ead: local LV0
0eaf: + 
0eb0: short_string ".dead.edit"
0eb2: + 
0eb3: return 
0eb4: return_zero 

;; Function is_locked
0eb5: return_zero 

;; Function parse_command_id_list
0eb6: short_string "one"
0eb8: short_string "thing"
0eba: aggregate 2
0ebd: return 

;; Function parse_command_plural_id_list
0ebe: short_string "ones"
0ec0: short_string "things"
0ec2: short_string "them"
0ec4: aggregate 3
0ec7: return 

;; Function parse_command_adjectiv_id_list
0ec8: short_string "the"
0eca: short_string "an"
0ecc: short_string "a"
0ece: aggregate 3
0ed1: return 

;; Function parse_command_prepos_list
0ed2: short_string "in"
0ed4: short_string "with"
0ed6: short_string "without"
0ed8: short_string "into"
0eda: short_string "for"
0edc: short_string "on"
0ede: short_string "under"
0ee0: short_string "against"
0ee2: short_string "out"
0ee4: short_string "within"
0ee6: short_string "of"
0ee8: short_string "from"
0eea: short_string "between"
0eec: short_string "at"
0eee: short_string "to"
0ef0: short_string "over"
0ef2: short_string "near"
0ef4: short_string "inside"
0ef6: short_string "onto"
0ef8: short_string "off"
0efa: short_string "through"
0efc: short_string "across"
0efe: short_string "up"
0f00: short_string "down"
0f02: short_string "every"
0f04: short_string "around"
0f06: short_string "about"
0f08: short_string "only"
0f0a: short_string "here"
0f0c: short_string "room"
0f0e: short_string "exit"
0f10: short_string "enter"
0f12: short_string "-r"
0f14: short_string "-a"
0f16: aggregate 34
0f19: return 

;; Function parse_command_all_word
0f1a: short_string "all"
0f1c: return 

;; Function parser_error_message
0f1d: local LV1
0f1f: branch_when_zero 000e (0f2e)
0f22: local LV1
0f24: short_string "GetShort"
0f26: call_other 2
0f29: (void)assign_local LV4
0f2b: branch 0006 (0f32)
0f2e: short_string ""
0f30: (void)assign_local LV4
0f32: local LV0
0f34: switch
      type: fe table: 10b2-10c6 deflt: 10af
0f3c: local LV3
0f3e: branch_when_zero 0013 (0f52)
0f41: short_string "There is no such "
0f43: local LV2
0f45: simul_efun "remove_article" 1
0f49: + 
0f4a: short_string " here."
0f4c: + 
0f4d: (void)assign_local LV4
0f4f: branch 0010 (0f60)
0f52: short_string "There is no "
0f54: local LV2
0f56: simul_efun "remove_article" 1
0f5a: + 
0f5b: short_string " here."
0f5d: + 
0f5e: (void)assign_local LV4
0f60: branch 0165 (10c6)
0f63: local LV3
0f65: branch_when_zero 0014 (0f7a)
0f68: short_string "None of the "
0f6a: local LV2
0f6c: simul_efun "remove_article" 1
0f70: pluralize 
0f71: + 
0f72: short_string " are alive."
0f74: + 
0f75: (void)assign_local LV4
0f77: branch 0010 (0f88)
0f7a: short_string "The "
0f7c: local LV2
0f7e: simul_efun "remove_article" 1
0f82: + 
0f83: short_string " is not alive."
0f85: + 
0f86: (void)assign_local LV4
0f88: branch 013d (10c6)
0f8b: local LV3
0f8d: branch_when_zero 0009 (0f97)
0f90: short_string "You can't get to them."
0f92: (void)assign_local LV4
0f94: branch 0006 (0f9b)
0f97: short_string "You can't get to it."
0f99: (void)assign_local LV4
0f9b: branch 012a (10c6)
0f9e: const0 
0f9f: this_player 
0fa0: global_lvalue gguy
0fa2: (void)assign 
0fa3: const1 
0fa4: branch_when_zero 0019 (0fbe)
0fa7: const0 
0fa8: this_player 
0fa9: short_string "GetLastCommand"
0fab: call_other 2
0fae: global_lvalue gcmd
0fb0: (void)assign 
0fb1: const0 
0fb2: this_player 
0fb3: short_string "eventRetryCommand"
0fb5: global gcmd
0fb7: call_other 3
0fba: pop 
0fbb: short_string " "
0fbd: return 
0fbe: local LV2
0fc0: const0 
0fc1: (::) <functional, 1 args>
Code:
0fc6: local LV0
0fc8: short_string "GetShort"
0fca: call_other 2
0fcd: return 
0fce: unique_array 290
0fd0: (void)assign_local LV6
0fd2: local LV6
0fd4: sizeof 
0fd5: const1 
0fd6: branch_ne 0020 (0ff7)
0fd9: short_string "Which of the "
0fdb: local LV2
0fdd: sizeof 
0fde: push number 0, number 0, local 6
0fe3: index 
0fe4: index 
0fe5: short_string "GetShort"
0fe7: call_other 2
0fea: simul_efun "consolidate" 2
0fee: + 
0fef: short_string " do you mean?"
0ff1: + 
0ff2: (void)assign_local LV4
0ff4: branch 0075 (106a)
0ff7: short_string "Do you mean "
0ff9: (void)assign_local LV4
0ffb: const0 
0ffc: (void)assign_local LV7
0ffe: branch 005e (105d)
1001: push local 7, local 6
1005: index 
1006: sizeof 
1007: const1 
1008: branch_le 0021 (102a)
100b: short_string "one of the "
100d: push local 7, local 6
1011: index 
1012: sizeof 
1013: push number 0, local 7, local 6
1018: index 
1019: index 
101a: short_string "GetShort"
101c: call_other 2
101f: simul_efun "consolidate" 2
1023: + 
1024: local_lvalue LV4
1026: (void)+= 
1027: branch 0011 (1039)
102a: push number 0, local 7, local 6
102f: index 
1030: index 
1031: short_string "GetShort"
1033: call_other 2
1036: local_lvalue LV4
1038: (void)+= 
1039: push local 7, local 6
103d: sizeof 
103e: byte 2
1040: subtract 
1041: branch_ne 000a (104c)
1044: short_string " or "
1046: local_lvalue LV4
1048: (void)+= 
1049: branch 0011 (105b)
104c: push local 7, local 6
1050: sizeof 
1051: const1 
1052: subtract 
1053: branch_ge 0007 (105b)
1056: short_string ", "
1058: local_lvalue LV4
105a: (void)+= 
105b: loop_incr LV7
105d: push local 7, local 6
1061: sizeof 
1062: bbranch_lt 0062 (1001)
1065: short_string "?"
1067: local_lvalue LV4
1069: (void)+= 
106a: local LV4
106c: return 
106d: push local 2, number 1
1071: branch_le 000f (1081)
1074: short_string "There are only "
1076: local LV2
1078: + 
1079: short_string " of them."
107b: + 
107c: (void)assign_local LV4
107e: branch 0006 (1085)
1081: short_string "There is only one of them."
1083: (void)assign_local LV4
1085: branch 0040 (10c6)
1088: local LV2
108a: return 
108b: local LV2
108d: simul_efun "get_object" 1
1091: branch_when_zero 000d (109f)
1094: local LV2
1096: simul_efun "remove_article" 1
109a: (void)assign_local LV5
109c: branch 0006 (10a3)
109f: short_string "such thing"
10a1: (void)assign_local LV5
10a3: short_string "There is no "
10a5: local LV5
10a7: + 
10a8: short_string " here."
10aa: + 
10ab: return 
10ac: short_string "You can't do that to more tha"
10ae: return 
10af: branch 0016 (10c6)
      switch table (for 0f34)
	 0: 0f3c
	 1: 0f63
	 2: 0f8b
	 3: 0f9e
	 4: 106d
	 5: 1088
	 6: 108b
	 7: 10ac
	minval = 1
10c6: local LV4
10c8: return 
10c9: return_zero 

;; Function create_save
10ca: const0 
10cb: previous_object 
10cc: short_string "GetKeyName"
10ce: call_other 2
10d1: local_lvalue LV0
10d3: assign 
10d4: stringp 
10d5: branch_when_non_zero 0003 (10d9)
10d8: return_zero 
10d9: push string 59, number 0, number 0, local 0
10df: nn_range 
10e0: + 
10e1: file_size 
10e2: -byte -2
10e4: branch_ne 0003 (10e8)
10e7: return_zero 
10e8: push number 0, local 0
10ec: index 
10ed: byte 97
10ef: < 
10f0: || 000a (10fb)
10f3: push number 0, local 0
10f7: index 
10f8: byte 122
10fa: > 
10fb: branch_when_zero 0003 (10ff)
10fe: return_zero 
10ff: push string 59, number 0, number 0, local 0
1105: nn_range 
1106: + 
1107: mkdir 
1108: pop 
1109: return_zero 

;; Function player_object
110a: const0 
110b: previous_object 
110c: local_lvalue LV2
110e: assign 
110f: simul_efun "base_name" 1
1113: (void)assign_local LV4
1115: local LV4
1117: short_string "/secure/cmds/admins/encre"
1119: != 
111a: && 0017 (1132)
111d: local LV4
111f: short_string "/secure/cmds/admins/decre"
1121: != 
1122: && 000f (1132)
1125: local LV4
1127: short_string "/secure/lib/connect"
1129: != 
112a: && 0007 (1132)
112d: local LV4
112f: short_string "/secure/daemon/reload"
1131: != 
1132: branch_when_zero 0003 (1136)
1135: return_zero 
1136: const1 
1137: set_eval_limit 
1138: (void)assign_local LV5
113a: number 1000000000
113f: simul_efun "set_eval_limit" 1
1143: pop 
1144: local LV4
1146: short_string "/secure/daemon/reload"
1148: == 
1149: && 0004 (114e)
114c: local LV1
114e: branch_when_zero 000a (1159)
1151: local LV1
1153: global_lvalue NewPlayer
1155: (void)assign 
1156: branch 0007 (115e)
1159: local LV2
115b: global_lvalue NewPlayer
115d: (void)assign 
115e: push string 58, number 0, number 0, local 0
1164: nn_range 
1165: + 
1166: short_string "/"
1168: + 
1169: local LV0
116b: + 
116c: short_string ".o"
116e: + 
116f: file_size 
1170: -byte -1
1172: branch_le 001f (1192)
1175: catch 0017
1178: push string 58, number 0, number 0, local 0
117e: nn_range 
117f: + 
1180: short_string "/"
1182: + 
1183: local LV0
1185: + 
1186: simul_efun "load_object" 1
118a: (void)assign_local LV2
118c: end_catch 
118d: (void)assign_local LV3
118f: branch 001c (11ac)
1192: catch 0017
1195: push string 59, number 0, number 0, local 0
119b: nn_range 
119c: + 
119d: short_string "/"
119f: + 
11a0: local LV0
11a2: + 
11a3: simul_efun "load_object" 1
11a7: (void)assign_local LV2
11a9: end_catch 
11aa: (void)assign_local LV3
11ac: const0 
11ad: global_lvalue NewPlayer
11af: (void)assign 
11b0: local LV5
11b2: simul_efun "set_eval_limit" 1
11b6: pop 
11b7: local LV3
11b9: branch_when_zero 0005 (11bf)
11bc: local LV3
11be: error 
11bf: local LV2
11c1: return 
11c2: return_zero 

;; Function player_save_file
11c3: push string 58, number 0, number 0, local 0
11c9: nn_range 
11ca: + 
11cb: short_string "/"
11cd: + 
11ce: local LV0
11d0: + 
11d1: (void)assign_local LV1
11d3: local LV1
11d5: short_string ".o"
11d7: + 
11d8: file_size 
11d9: -byte -1
11db: branch_le 0008 (11e4)
11de: local LV1
11e0: return 
11e1: branch 0011 (11f3)
11e4: push string 59, number 0, number 0, local 0
11ea: nn_range 
11eb: + 
11ec: short_string "/"
11ee: + 
11ef: local LV0
11f1: + 
11f2: return 
11f3: return_zero 

;; Function query_group
11f4: push local 0, global 7
11f8: index 
11f9: simul_efun "copy" 1
11fd: return 

;; Function query_groups
11fe: global Groups
1200: simul_efun "copy" 1
1204: return 

;; Function eventReset
1205: global_lvalue ResetNumber
1207: inc(x) 
1208: const0 
1209: (::) <local_fun> eventReset
120d: efun8 
120e: exit_foreach 
120f: branch_eq 0207 (1417)
1212: new 1
1215: ^= 
1216: (void)assign_local LV2
1218: short_string "/log/reset"
121a: short_string "Reset "
121c: global ResetNumber
121e: + 
121f: short_string " occurred at: "
1221: + 
1222: time 
1224: ctime 277
1226: + 
1227: short_string "\n"
1229: + 
122a: write_file 264
122c: pop 
122d: const1 
122e: branch_when_zero 0020 (124f)
1231: const0 
1232: (::) <functional, 1 args>
Code:
1237: local LV0
1239: environment 234
123b: ! 
123c: && 0008 (1245)
123f: byte 100
1241: random 
1242: byte 26
1244: < 
1245: return 
1246: simul_efun "objects" 1
124a: (void)assign_local LV0
124c: branch 0008 (1255)
124f: simul_efun "objects" 0
1253: (void)assign_local LV0
1255: const0 
1256: (void)assign_local LV3
1258: local LV0
125a: foreach (array) local 1
125d: branch 005c (12ba)
1260: local LV1
1262: branch_when_non_zero 0008 (126b)
1265: local_lvalue LV3
1267: inc(x) 
1268: branch 0051 (12ba)
126b: local LV1
126d: short_string "clean_up"
126f: aggregate 2
1272: (::) <efun> _call_other
1276: local LV1
1278: bind 
127a: (void)assign_local LV4
127c: local LV4
127e: branch_when_zero 000d (128c)
1281: catch 0009
1284: local LV4
1286: evaluate 1
1289: pop 
128a: end_catch 
128b: pop 
128c: local LV1
128e: branch_when_non_zero 0008 (1297)
1291: local_lvalue LV3
1293: inc(x) 
1294: branch 0025 (12ba)
1297: local LV1
1299: short_string "reset"
129b: global ResetNumber
129d: aggregate 3
12a0: (::) <efun> _call_other
12a4: local LV1
12a6: bind 
12a8: (void)assign_local LV4
12aa: local LV4
12ac: branch_when_zero 000d (12ba)
12af: catch 0009
12b2: local LV4
12b4: evaluate 1
12b7: pop 
12b8: end_catch 
12b9: pop 
12ba: next_foreach 005b (1260)
12bd: short_string "/log/reset"
12bf: string "	"
12c2: local LV2
12c4: + 
12c5: string " objects reclaimed, "
12c8: + 
12c9: local LV0
12cb: sizeof 
12cc: local LV3
12ce: subtract 
12cf: + 
12d0: string " objects reset, "
12d3: + 
12d4: local LV3
12d6: + 
12d7: string " objects cleaned.\n"
12da: + 
12db: write_file 264
12dd: pop 
12de: return_zero 

;; Function GetResetNumber
12df: global ResetNumber
12e1: return 

;; Function GetEfuns
12e2: aggregate 0
12e5: global efuns_arr
12e7: + 
12e8: return 

;; Function parse_command_users
12e9: simul_efun "users" 0
12ed: const0 
12ee: (::) <functional, 1 args>
Code:
12f3: local LV0
12f5: simul_efun "creatorp" 1
12f9: || 000a (1304)
12fc: local LV0
12fe: string "is_living"
1301: call_other 2
1304: return 
1305: filter 2
1308: return 

;; Function #global_init#
1309: push string 25, string 26, string 27, string 28, string 29
1310: aggregate 5
1313: global_lvalue ParserDirs
1315: (void)assign 
1316: aggregate 0
1319: global_lvalue efuns_arr
131b: (void)assign 
131c: return_zero 
